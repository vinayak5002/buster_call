0,0-0,0:            ENCODING       'utf-8'        
1,0-1,23:           COMMENT        '# -*- coding: utf-8 -*-'
1,23-1,24:          NL             '\n'           
2,0-2,62:           COMMENT        '# Open Source Initiative OSI - The MIT License (MIT):Licensing'
2,62-2,63:          NL             '\n'           
3,0-3,1:            COMMENT        '#'            
3,1-3,2:            NL             '\n'           
4,0-4,23:           COMMENT        '# The MIT License (MIT)'
4,23-4,24:          NL             '\n'           
5,0-5,72:           COMMENT        '# Copyright (c) 2015 Fran√ßois-Xavier Bourlet (bombela+zerorpc@gmail.com)'
5,72-5,73:          NL             '\n'           
6,0-6,1:            COMMENT        '#'            
6,1-6,2:            NL             '\n'           
7,0-7,81:           COMMENT        '# Permission is hereby granted, free of charge, to any person obtaining a copy of'
7,81-7,82:          NL             '\n'           
8,0-8,79:           COMMENT        '# this software and associated documentation files (the "Software"), to deal in'
8,79-8,80:          NL             '\n'           
9,0-9,78:           COMMENT        '# the Software without restriction, including without limitation the rights to'
9,78-9,79:          NL             '\n'           
10,0-10,79:         COMMENT        '# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies'
10,79-10,80:        NL             '\n'           
11,0-11,80:         COMMENT        '# of the Software, and to permit persons to whom the Software is furnished to do'
11,80-11,81:        NL             '\n'           
12,0-12,42:         COMMENT        '# so, subject to the following conditions:'
12,42-12,43:        NL             '\n'           
13,0-13,1:          COMMENT        '#'            
13,1-13,2:          NL             '\n'           
14,0-14,80:         COMMENT        '# The above copyright notice and this permission notice shall be included in all'
14,80-14,81:        NL             '\n'           
15,0-15,49:         COMMENT        '# copies or substantial portions of the Software.'
15,49-15,50:        NL             '\n'           
16,0-16,1:          COMMENT        '#'            
16,1-16,2:          NL             '\n'           
17,0-17,76:         COMMENT        '# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR'
17,76-17,77:        NL             '\n'           
18,0-18,74:         COMMENT        '# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,'
18,74-18,75:        NL             '\n'           
19,0-19,77:         COMMENT        '# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE'
19,77-19,78:        NL             '\n'           
20,0-20,72:         COMMENT        '# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER'
20,72-20,73:        NL             '\n'           
21,0-21,79:         COMMENT        '# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
21,79-21,80:        NL             '\n'           
22,0-22,79:         COMMENT        '# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE'
22,79-22,80:        NL             '\n'           
23,0-23,11:         COMMENT        '# SOFTWARE.'  
23,11-23,12:        NL             '\n'           
24,0-24,1:          NL             '\n'           
25,0-25,1:          NL             '\n'           
26,0-26,6:          NAME           'import'       
26,7-26,14:         NAME           'msgpack'      
26,14-26,15:        NEWLINE        '\n'           
27,0-27,6:          NAME           'import'       
27,7-27,13:         NAME           'gevent'       
27,13-27,14:        OP             '.'            
27,14-27,18:        NAME           'pool'         
27,18-27,19:        NEWLINE        '\n'           
28,0-28,6:          NAME           'import'       
28,7-28,13:         NAME           'gevent'       
28,13-28,14:        OP             '.'            
28,14-28,19:        NAME           'queue'        
28,19-28,20:        NEWLINE        '\n'           
29,0-29,6:          NAME           'import'       
29,7-29,13:         NAME           'gevent'       
29,13-29,14:        OP             '.'            
29,14-29,19:        NAME           'event'        
29,19-29,20:        NEWLINE        '\n'           
30,0-30,6:          NAME           'import'       
30,7-30,13:         NAME           'gevent'       
30,13-30,14:        OP             '.'            
30,14-30,19:        NAME           'local'        
30,19-30,20:        NEWLINE        '\n'           
31,0-31,6:          NAME           'import'       
31,7-31,13:         NAME           'gevent'       
31,13-31,14:        OP             '.'            
31,14-31,18:        NAME           'lock'         
31,18-31,19:        NEWLINE        '\n'           
32,0-32,6:          NAME           'import'       
32,7-32,14:         NAME           'logging'      
32,14-32,15:        NEWLINE        '\n'           
33,0-33,6:          NAME           'import'       
33,7-33,10:         NAME           'sys'          
33,10-33,11:        NEWLINE        '\n'           
34,0-34,1:          NL             '\n'           
35,0-35,6:          NAME           'import'       
35,7-35,17:         NAME           'gevent_zmq'   
35,18-35,20:        NAME           'as'           
35,21-35,24:        NAME           'zmq'          
35,24-35,25:        NEWLINE        '\n'           
36,0-36,4:          NAME           'from'         
36,5-36,6:          OP             '.'            
36,6-36,16:         NAME           'exceptions'   
36,17-36,23:        NAME           'import'       
36,24-36,38:        NAME           'TimeoutExpired'
36,38-36,39:        NEWLINE        '\n'           
37,0-37,4:          NAME           'from'         
37,5-37,6:          OP             '.'            
37,6-37,13:         NAME           'context'      
37,14-37,20:        NAME           'import'       
37,21-37,28:        NAME           'Context'      
37,28-37,29:        NEWLINE        '\n'           
38,0-38,4:          NAME           'from'         
38,5-38,6:          OP             '.'            
38,6-38,18:         NAME           'channel_base' 
38,19-38,25:        NAME           'import'       
38,26-38,37:        NAME           'ChannelBase'  
38,37-38,38:        NEWLINE        '\n'           
39,0-39,1:          NL             '\n'           
40,0-40,1:          NL             '\n'           
41,0-41,2:          NAME           'if'           
41,3-41,6:          NAME           'sys'          
41,6-41,7:          OP             '.'            
41,7-41,19:         NAME           'version_info' 
41,20-41,21:        OP             '<'            
41,22-41,23:        OP             '('            
41,23-41,24:        NUMBER         '2'            
41,24-41,25:        OP             ','            
41,26-41,27:        NUMBER         '7'            
41,27-41,28:        OP             ')'            
41,28-41,29:        OP             ':'            
41,29-41,30:        NEWLINE        '\n'           
42,0-42,4:          INDENT         '    '         
42,4-42,7:          NAME           'def'          
42,8-42,30:         NAME           'get_pyzmq_frame_buffer'
42,30-42,31:        OP             '('            
42,31-42,36:        NAME           'frame'        
42,36-42,37:        OP             ')'            
42,37-42,38:        OP             ':'            
42,38-42,39:        NEWLINE        '\n'           
43,0-43,8:          INDENT         '        '     
43,8-43,14:         NAME           'return'       
43,15-43,20:        NAME           'frame'        
43,20-43,21:        OP             '.'            
43,21-43,27:        NAME           'buffer'       
43,27-43,28:        OP             '['            
43,28-43,29:        OP             ':'            
43,29-43,30:        OP             ']'            
43,30-43,31:        NEWLINE        '\n'           
44,0-44,0:          DEDENT         ''             
44,0-44,0:          DEDENT         ''             
44,0-44,4:          NAME           'else'         
44,4-44,5:          OP             ':'            
44,5-44,6:          NEWLINE        '\n'           
45,0-45,4:          INDENT         '    '         
45,4-45,7:          NAME           'def'          
45,8-45,30:         NAME           'get_pyzmq_frame_buffer'
45,30-45,31:        OP             '('            
45,31-45,36:        NAME           'frame'        
45,36-45,37:        OP             ')'            
45,37-45,38:        OP             ':'            
45,38-45,39:        NEWLINE        '\n'           
46,0-46,8:          INDENT         '        '     
46,8-46,14:         NAME           'return'       
46,15-46,20:        NAME           'frame'        
46,20-46,21:        OP             '.'            
46,21-46,27:        NAME           'buffer'       
46,27-46,28:        NEWLINE        '\n'           
47,0-47,1:          NL             '\n'           
48,0-48,1:          NL             '\n'           
49,0-49,0:          DEDENT         ''             
49,0-49,0:          DEDENT         ''             
49,0-49,6:          NAME           'logger'       
49,7-49,8:          OP             '='            
49,9-49,16:         NAME           'logging'      
49,16-49,17:        OP             '.'            
49,17-49,26:        NAME           'getLogger'    
49,26-49,27:        OP             '('            
49,27-49,35:        NAME           '__name__'     
49,35-49,36:        OP             ')'            
49,36-49,37:        NEWLINE        '\n'           
50,0-50,1:          NL             '\n'           
51,0-51,1:          NL             '\n'           
52,0-52,5:          NAME           'class'        
52,6-52,22:         NAME           'SequentialSender'
52,22-52,23:        OP             '('            
52,23-52,29:        NAME           'object'       
52,29-52,30:        OP             ')'            
52,30-52,31:        OP             ':'            
52,31-52,32:        NEWLINE        '\n'           
53,0-53,1:          NL             '\n'           
54,0-54,4:          INDENT         '    '         
54,4-54,7:          NAME           'def'          
54,8-54,16:         NAME           '__init__'     
54,16-54,17:        OP             '('            
54,17-54,21:        NAME           'self'         
54,21-54,22:        OP             ','            
54,23-54,29:        NAME           'socket'       
54,29-54,30:        OP             ')'            
54,30-54,31:        OP             ':'            
54,31-54,32:        NEWLINE        '\n'           
55,0-55,8:          INDENT         '        '     
55,8-55,12:         NAME           'self'         
55,12-55,13:        OP             '.'            
55,13-55,20:        NAME           '_socket'      
55,21-55,22:        OP             '='            
55,23-55,29:        NAME           'socket'       
55,29-55,30:        NEWLINE        '\n'           
56,0-56,1:          NL             '\n'           
57,4-57,4:          DEDENT         ''             
57,4-57,7:          NAME           'def'          
57,8-57,13:         NAME           '_send'        
57,13-57,14:        OP             '('            
57,14-57,18:        NAME           'self'         
57,18-57,19:        OP             ','            
57,20-57,25:        NAME           'parts'        
57,25-57,26:        OP             ')'            
57,26-57,27:        OP             ':'            
57,27-57,28:        NEWLINE        '\n'           
58,0-58,8:          INDENT         '        '     
58,8-58,9:          NAME           'e'            
58,10-58,11:        OP             '='            
58,12-58,16:        NAME           'None'         
58,16-58,17:        NEWLINE        '\n'           
59,8-59,11:         NAME           'for'          
59,12-59,13:        NAME           'i'            
59,14-59,16:        NAME           'in'           
59,17-59,23:        NAME           'xrange'       
59,23-59,24:        OP             '('            
59,24-59,27:        NAME           'len'          
59,27-59,28:        OP             '('            
59,28-59,33:        NAME           'parts'        
59,33-59,34:        OP             ')'            
59,35-59,36:        OP             '-'            
59,37-59,38:        NUMBER         '1'            
59,38-59,39:        OP             ')'            
59,39-59,40:        OP             ':'            
59,40-59,41:        NEWLINE        '\n'           
60,0-60,12:         INDENT         '            ' 
60,12-60,15:        NAME           'try'          
60,15-60,16:        OP             ':'            
60,16-60,17:        NEWLINE        '\n'           
61,0-61,16:         INDENT         '                '
61,16-61,20:        NAME           'self'         
61,20-61,21:        OP             '.'            
61,21-61,28:        NAME           '_socket'      
61,28-61,29:        OP             '.'            
61,29-61,33:        NAME           'send'         
61,33-61,34:        OP             '('            
61,34-61,39:        NAME           'parts'        
61,39-61,40:        OP             '['            
61,40-61,41:        NAME           'i'            
61,41-61,42:        OP             ']'            
61,42-61,43:        OP             ','            
61,44-61,48:        NAME           'copy'         
61,48-61,49:        OP             '='            
61,49-61,54:        NAME           'False'        
61,54-61,55:        OP             ','            
61,56-61,61:        NAME           'flags'        
61,61-61,62:        OP             '='            
61,62-61,65:        NAME           'zmq'          
61,65-61,66:        OP             '.'            
61,66-61,73:        NAME           'SNDMORE'      
61,73-61,74:        OP             ')'            
61,74-61,75:        NEWLINE        '\n'           
62,12-62,12:        DEDENT         ''             
62,12-62,18:        NAME           'except'       
62,19-62,20:        OP             '('            
62,20-62,26:        NAME           'gevent'       
62,26-62,27:        OP             '.'            
62,27-62,39:        NAME           'GreenletExit' 
62,39-62,40:        OP             ','            
62,41-62,47:        NAME           'gevent'       
62,47-62,48:        OP             '.'            
62,48-62,55:        NAME           'Timeout'      
62,55-62,56:        OP             ')'            
62,57-62,59:        NAME           'as'           
62,60-62,61:        NAME           'e'            
62,61-62,62:        OP             ':'            
62,62-62,63:        NEWLINE        '\n'           
63,0-63,16:         INDENT         '                '
63,16-63,18:        NAME           'if'           
63,19-63,20:        NAME           'i'            
63,21-63,23:        OP             '=='           
63,24-63,25:        NUMBER         '0'            
63,25-63,26:        OP             ':'            
63,26-63,27:        NEWLINE        '\n'           
64,0-64,20:         INDENT         '                    '
64,20-64,25:        NAME           'raise'        
64,25-64,26:        NEWLINE        '\n'           
65,16-65,16:        DEDENT         ''             
65,16-65,20:        NAME           'self'         
65,20-65,21:        OP             '.'            
65,21-65,28:        NAME           '_socket'      
65,28-65,29:        OP             '.'            
65,29-65,33:        NAME           'send'         
65,33-65,34:        OP             '('            
65,34-65,39:        NAME           'parts'        
65,39-65,40:        OP             '['            
65,40-65,41:        NAME           'i'            
65,41-65,42:        OP             ']'            
65,42-65,43:        OP             ','            
65,44-65,48:        NAME           'copy'         
65,48-65,49:        OP             '='            
65,49-65,54:        NAME           'False'        
65,54-65,55:        OP             ','            
65,56-65,61:        NAME           'flags'        
65,61-65,62:        OP             '='            
65,62-65,65:        NAME           'zmq'          
65,65-65,66:        OP             '.'            
65,66-65,73:        NAME           'SNDMORE'      
65,73-65,74:        OP             ')'            
65,74-65,75:        NEWLINE        '\n'           
66,8-66,8:          DEDENT         ''             
66,8-66,8:          DEDENT         ''             
66,8-66,11:         NAME           'try'          
66,11-66,12:        OP             ':'            
66,12-66,13:        NEWLINE        '\n'           
67,0-67,12:         INDENT         '            ' 
67,12-67,16:        NAME           'self'         
67,16-67,17:        OP             '.'            
67,17-67,24:        NAME           '_socket'      
67,24-67,25:        OP             '.'            
67,25-67,29:        NAME           'send'         
67,29-67,30:        OP             '('            
67,30-67,35:        NAME           'parts'        
67,35-67,36:        OP             '['            
67,36-67,37:        OP             '-'            
67,37-67,38:        NUMBER         '1'            
67,38-67,39:        OP             ']'            
67,39-67,40:        OP             ','            
67,41-67,45:        NAME           'copy'         
67,45-67,46:        OP             '='            
67,46-67,51:        NAME           'False'        
67,51-67,52:        OP             ')'            
67,52-67,53:        NEWLINE        '\n'           
68,8-68,8:          DEDENT         ''             
68,8-68,14:         NAME           'except'       
68,15-68,16:        OP             '('            
68,16-68,22:        NAME           'gevent'       
68,22-68,23:        OP             '.'            
68,23-68,35:        NAME           'GreenletExit' 
68,35-68,36:        OP             ','            
68,37-68,43:        NAME           'gevent'       
68,43-68,44:        OP             '.'            
68,44-68,51:        NAME           'Timeout'      
68,51-68,52:        OP             ')'            
68,53-68,55:        NAME           'as'           
68,56-68,57:        NAME           'e'            
68,57-68,58:        OP             ':'            
68,58-68,59:        NEWLINE        '\n'           
69,0-69,12:         INDENT         '            ' 
69,12-69,16:        NAME           'self'         
69,16-69,17:        OP             '.'            
69,17-69,24:        NAME           '_socket'      
69,24-69,25:        OP             '.'            
69,25-69,29:        NAME           'send'         
69,29-69,30:        OP             '('            
69,30-69,35:        NAME           'parts'        
69,35-69,36:        OP             '['            
69,36-69,37:        OP             '-'            
69,37-69,38:        NUMBER         '1'            
69,38-69,39:        OP             ']'            
69,39-69,40:        OP             ','            
69,41-69,45:        NAME           'copy'         
69,45-69,46:        OP             '='            
69,46-69,51:        NAME           'False'        
69,51-69,52:        OP             ')'            
69,52-69,53:        NEWLINE        '\n'           
70,8-70,8:          DEDENT         ''             
70,8-70,10:         NAME           'if'           
70,11-70,12:        NAME           'e'            
70,12-70,13:        OP             ':'            
70,13-70,14:        NEWLINE        '\n'           
71,0-71,12:         INDENT         '            ' 
71,12-71,17:        NAME           'raise'        
71,18-71,19:        NAME           'e'            
71,19-71,20:        NEWLINE        '\n'           
72,0-72,1:          NL             '\n'           
73,4-73,4:          DEDENT         ''             
73,4-73,4:          DEDENT         ''             
73,4-73,7:          NAME           'def'          
73,8-73,16:         NAME           '__call__'     
73,16-73,17:        OP             '('            
73,17-73,21:        NAME           'self'         
73,21-73,22:        OP             ','            
73,23-73,28:        NAME           'parts'        
73,28-73,29:        OP             ','            
73,30-73,37:        NAME           'timeout'      
73,37-73,38:        OP             '='            
73,38-73,42:        NAME           'None'         
73,42-73,43:        OP             ')'            
73,43-73,44:        OP             ':'            
73,44-73,45:        NEWLINE        '\n'           
74,0-74,8:          INDENT         '        '     
74,8-74,10:         NAME           'if'           
74,11-74,18:        NAME           'timeout'      
74,18-74,19:        OP             ':'            
74,19-74,20:        NEWLINE        '\n'           
75,0-75,12:         INDENT         '            ' 
75,12-75,16:        NAME           'with'         
75,17-75,23:        NAME           'gevent'       
75,23-75,24:        OP             '.'            
75,24-75,31:        NAME           'Timeout'      
75,31-75,32:        OP             '('            
75,32-75,39:        NAME           'timeout'      
75,39-75,40:        OP             ')'            
75,40-75,41:        OP             ':'            
75,41-75,42:        NEWLINE        '\n'           
76,0-76,16:         INDENT         '                '
76,16-76,20:        NAME           'self'         
76,20-76,21:        OP             '.'            
76,21-76,26:        NAME           '_send'        
76,26-76,27:        OP             '('            
76,27-76,32:        NAME           'parts'        
76,32-76,33:        OP             ')'            
76,33-76,34:        NEWLINE        '\n'           
77,8-77,8:          DEDENT         ''             
77,8-77,8:          DEDENT         ''             
77,8-77,12:         NAME           'else'         
77,12-77,13:        OP             ':'            
77,13-77,14:        NEWLINE        '\n'           
78,0-78,12:         INDENT         '            ' 
78,12-78,16:        NAME           'self'         
78,16-78,17:        OP             '.'            
78,17-78,22:        NAME           '_send'        
78,22-78,23:        OP             '('            
78,23-78,28:        NAME           'parts'        
78,28-78,29:        OP             ')'            
78,29-78,30:        NEWLINE        '\n'           
79,0-79,1:          NL             '\n'           
80,0-80,1:          NL             '\n'           
81,0-81,0:          DEDENT         ''             
81,0-81,0:          DEDENT         ''             
81,0-81,0:          DEDENT         ''             
81,0-81,5:          NAME           'class'        
81,6-81,24:         NAME           'SequentialReceiver'
81,24-81,25:        OP             '('            
81,25-81,31:        NAME           'object'       
81,31-81,32:        OP             ')'            
81,32-81,33:        OP             ':'            
81,33-81,34:        NEWLINE        '\n'           
82,0-82,1:          NL             '\n'           
83,0-83,4:          INDENT         '    '         
83,4-83,7:          NAME           'def'          
83,8-83,16:         NAME           '__init__'     
83,16-83,17:        OP             '('            
83,17-83,21:        NAME           'self'         
83,21-83,22:        OP             ','            
83,23-83,29:        NAME           'socket'       
83,29-83,30:        OP             ')'            
83,30-83,31:        OP             ':'            
83,31-83,32:        NEWLINE        '\n'           
84,0-84,8:          INDENT         '        '     
84,8-84,12:         NAME           'self'         
84,12-84,13:        OP             '.'            
84,13-84,20:        NAME           '_socket'      
84,21-84,22:        OP             '='            
84,23-84,29:        NAME           'socket'       
84,29-84,30:        NEWLINE        '\n'           
85,0-85,1:          NL             '\n'           
86,4-86,4:          DEDENT         ''             
86,4-86,7:          NAME           'def'          
86,8-86,13:         NAME           '_recv'        
86,13-86,14:        OP             '('            
86,14-86,18:        NAME           'self'         
86,18-86,19:        OP             ')'            
86,19-86,20:        OP             ':'            
86,20-86,21:        NEWLINE        '\n'           
87,0-87,8:          INDENT         '        '     
87,8-87,9:          NAME           'e'            
87,10-87,11:        OP             '='            
87,12-87,16:        NAME           'None'         
87,16-87,17:        NEWLINE        '\n'           
88,8-88,13:         NAME           'parts'        
88,14-88,15:        OP             '='            
88,16-88,17:        OP             '['            
88,17-88,18:        OP             ']'            
88,18-88,19:        NEWLINE        '\n'           
89,8-89,13:         NAME           'while'        
89,14-89,18:        NAME           'True'         
89,18-89,19:        OP             ':'            
89,19-89,20:        NEWLINE        '\n'           
90,0-90,12:         INDENT         '            ' 
90,12-90,15:        NAME           'try'          
90,15-90,16:        OP             ':'            
90,16-90,17:        NEWLINE        '\n'           
91,0-91,16:         INDENT         '                '
91,16-91,20:        NAME           'part'         
91,21-91,22:        OP             '='            
91,23-91,27:        NAME           'self'         
91,27-91,28:        OP             '.'            
91,28-91,35:        NAME           '_socket'      
91,35-91,36:        OP             '.'            
91,36-91,40:        NAME           'recv'         
91,40-91,41:        OP             '('            
91,41-91,45:        NAME           'copy'         
91,45-91,46:        OP             '='            
91,46-91,51:        NAME           'False'        
91,51-91,52:        OP             ')'            
91,52-91,53:        NEWLINE        '\n'           
92,12-92,12:        DEDENT         ''             
92,12-92,18:        NAME           'except'       
92,19-92,20:        OP             '('            
92,20-92,26:        NAME           'gevent'       
92,26-92,27:        OP             '.'            
92,27-92,39:        NAME           'GreenletExit' 
92,39-92,40:        OP             ','            
92,41-92,47:        NAME           'gevent'       
92,47-92,48:        OP             '.'            
92,48-92,55:        NAME           'Timeout'      
92,55-92,56:        OP             ')'            
92,57-92,59:        NAME           'as'           
92,60-92,61:        NAME           'e'            
92,61-92,62:        OP             ':'            
92,62-92,63:        NEWLINE        '\n'           
93,0-93,16:         INDENT         '                '
93,16-93,18:        NAME           'if'           
93,19-93,22:        NAME           'len'          
93,22-93,23:        OP             '('            
93,23-93,28:        NAME           'parts'        
93,28-93,29:        OP             ')'            
93,30-93,32:        OP             '=='           
93,33-93,34:        NUMBER         '0'            
93,34-93,35:        OP             ':'            
93,35-93,36:        NEWLINE        '\n'           
94,0-94,20:         INDENT         '                    '
94,20-94,25:        NAME           'raise'        
94,25-94,26:        NEWLINE        '\n'           
95,16-95,16:        DEDENT         ''             
95,16-95,20:        NAME           'part'         
95,21-95,22:        OP             '='            
95,23-95,27:        NAME           'self'         
95,27-95,28:        OP             '.'            
95,28-95,35:        NAME           '_socket'      
95,35-95,36:        OP             '.'            
95,36-95,40:        NAME           'recv'         
95,40-95,41:        OP             '('            
95,41-95,45:        NAME           'copy'         
95,45-95,46:        OP             '='            
95,46-95,51:        NAME           'False'        
95,51-95,52:        OP             ')'            
95,52-95,53:        NEWLINE        '\n'           
96,12-96,12:        DEDENT         ''             
96,12-96,17:        NAME           'parts'        
96,17-96,18:        OP             '.'            
96,18-96,24:        NAME           'append'       
96,24-96,25:        OP             '('            
96,25-96,29:        NAME           'part'         
96,29-96,30:        OP             ')'            
96,30-96,31:        NEWLINE        '\n'           
97,12-97,14:        NAME           'if'           
97,15-97,18:        NAME           'not'          
97,19-97,23:        NAME           'part'         
97,23-97,24:        OP             '.'            
97,24-97,28:        NAME           'more'         
97,28-97,29:        OP             ':'            
97,29-97,30:        NEWLINE        '\n'           
98,0-98,16:         INDENT         '                '
98,16-98,21:        NAME           'break'        
98,21-98,22:        NEWLINE        '\n'           
99,8-99,8:          DEDENT         ''             
99,8-99,8:          DEDENT         ''             
99,8-99,10:         NAME           'if'           
99,11-99,12:        NAME           'e'            
99,12-99,13:        OP             ':'            
99,13-99,14:        NEWLINE        '\n'           
100,0-100,12:       INDENT         '            ' 
100,12-100,17:      NAME           'raise'        
100,18-100,19:      NAME           'e'            
100,19-100,20:      NEWLINE        '\n'           
101,8-101,8:        DEDENT         ''             
101,8-101,14:       NAME           'return'       
101,15-101,20:      NAME           'parts'        
101,20-101,21:      NEWLINE        '\n'           
102,0-102,1:        NL             '\n'           
103,4-103,4:        DEDENT         ''             
103,4-103,7:        NAME           'def'          
103,8-103,16:       NAME           '__call__'     
103,16-103,17:      OP             '('            
103,17-103,21:      NAME           'self'         
103,21-103,22:      OP             ','            
103,23-103,30:      NAME           'timeout'      
103,30-103,31:      OP             '='            
103,31-103,35:      NAME           'None'         
103,35-103,36:      OP             ')'            
103,36-103,37:      OP             ':'            
103,37-103,38:      NEWLINE        '\n'           
104,0-104,8:        INDENT         '        '     
104,8-104,10:       NAME           'if'           
104,11-104,18:      NAME           'timeout'      
104,18-104,19:      OP             ':'            
104,19-104,20:      NEWLINE        '\n'           
105,0-105,12:       INDENT         '            ' 
105,12-105,16:      NAME           'with'         
105,17-105,23:      NAME           'gevent'       
105,23-105,24:      OP             '.'            
105,24-105,31:      NAME           'Timeout'      
105,31-105,32:      OP             '('            
105,32-105,39:      NAME           'timeout'      
105,39-105,40:      OP             ')'            
105,40-105,41:      OP             ':'            
105,41-105,42:      NEWLINE        '\n'           
106,0-106,16:       INDENT         '                '
106,16-106,22:      NAME           'return'       
106,23-106,27:      NAME           'self'         
106,27-106,28:      OP             '.'            
106,28-106,33:      NAME           '_recv'        
106,33-106,34:      OP             '('            
106,34-106,35:      OP             ')'            
106,35-106,36:      NEWLINE        '\n'           
107,8-107,8:        DEDENT         ''             
107,8-107,8:        DEDENT         ''             
107,8-107,12:       NAME           'else'         
107,12-107,13:      OP             ':'            
107,13-107,14:      NEWLINE        '\n'           
108,0-108,12:       INDENT         '            ' 
108,12-108,18:      NAME           'return'       
108,19-108,23:      NAME           'self'         
108,23-108,24:      OP             '.'            
108,24-108,29:      NAME           '_recv'        
108,29-108,30:      OP             '('            
108,30-108,31:      OP             ')'            
108,31-108,32:      NEWLINE        '\n'           
109,0-109,1:        NL             '\n'           
110,0-110,1:        NL             '\n'           
111,0-111,0:        DEDENT         ''             
111,0-111,0:        DEDENT         ''             
111,0-111,0:        DEDENT         ''             
111,0-111,5:        NAME           'class'        
111,6-111,12:       NAME           'Sender'       
111,12-111,13:      OP             '('            
111,13-111,29:      NAME           'SequentialSender'
111,29-111,30:      OP             ')'            
111,30-111,31:      OP             ':'            
111,31-111,32:      NEWLINE        '\n'           
112,0-112,1:        NL             '\n'           
113,0-113,4:        INDENT         '    '         
113,4-113,7:        NAME           'def'          
113,8-113,16:       NAME           '__init__'     
113,16-113,17:      OP             '('            
113,17-113,21:      NAME           'self'         
113,21-113,22:      OP             ','            
113,23-113,29:      NAME           'socket'       
113,29-113,30:      OP             ')'            
113,30-113,31:      OP             ':'            
113,31-113,32:      NEWLINE        '\n'           
114,0-114,8:        INDENT         '        '     
114,8-114,12:       NAME           'self'         
114,12-114,13:      OP             '.'            
114,13-114,20:      NAME           '_socket'      
114,21-114,22:      OP             '='            
114,23-114,29:      NAME           'socket'       
114,29-114,30:      NEWLINE        '\n'           
115,8-115,12:       NAME           'self'         
115,12-115,13:      OP             '.'            
115,13-115,24:      NAME           '_send_queue'  
115,25-115,26:      OP             '='            
115,27-115,33:      NAME           'gevent'       
115,33-115,34:      OP             '.'            
115,34-115,39:      NAME           'queue'        
115,39-115,40:      OP             '.'            
115,40-115,47:      NAME           'Channel'      
115,47-115,48:      OP             '('            
115,48-115,49:      OP             ')'            
115,49-115,50:      NEWLINE        '\n'           
116,8-116,12:       NAME           'self'         
116,12-116,13:      OP             '.'            
116,13-116,23:      NAME           '_send_task'   
116,24-116,25:      OP             '='            
116,26-116,32:      NAME           'gevent'       
116,32-116,33:      OP             '.'            
116,33-116,38:      NAME           'spawn'        
116,38-116,39:      OP             '('            
116,39-116,43:      NAME           'self'         
116,43-116,44:      OP             '.'            
116,44-116,51:      NAME           '_sender'      
116,51-116,52:      OP             ')'            
116,52-116,53:      NEWLINE        '\n'           
117,0-117,1:        NL             '\n'           
118,4-118,4:        DEDENT         ''             
118,4-118,7:        NAME           'def'          
118,8-118,13:       NAME           'close'        
118,13-118,14:      OP             '('            
118,14-118,18:      NAME           'self'         
118,18-118,19:      OP             ')'            
118,19-118,20:      OP             ':'            
118,20-118,21:      NEWLINE        '\n'           
119,0-119,8:        INDENT         '        '     
119,8-119,10:       NAME           'if'           
119,11-119,15:      NAME           'self'         
119,15-119,16:      OP             '.'            
119,16-119,26:      NAME           '_send_task'   
119,26-119,27:      OP             ':'            
119,27-119,28:      NEWLINE        '\n'           
120,0-120,12:       INDENT         '            ' 
120,12-120,16:      NAME           'self'         
120,16-120,17:      OP             '.'            
120,17-120,27:      NAME           '_send_task'   
120,27-120,28:      OP             '.'            
120,28-120,32:      NAME           'kill'         
120,32-120,33:      OP             '('            
120,33-120,34:      OP             ')'            
120,34-120,35:      NEWLINE        '\n'           
121,0-121,1:        NL             '\n'           
122,4-122,4:        DEDENT         ''             
122,4-122,4:        DEDENT         ''             
122,4-122,7:        NAME           'def'          
122,8-122,15:       NAME           '_sender'      
122,15-122,16:      OP             '('            
122,16-122,20:      NAME           'self'         
122,20-122,21:      OP             ')'            
122,21-122,22:      OP             ':'            
122,22-122,23:      NEWLINE        '\n'           
123,0-123,8:        INDENT         '        '     
123,8-123,11:       NAME           'for'          
123,12-123,17:      NAME           'parts'        
123,18-123,20:      NAME           'in'           
123,21-123,25:      NAME           'self'         
123,25-123,26:      OP             '.'            
123,26-123,37:      NAME           '_send_queue'  
123,37-123,38:      OP             ':'            
123,38-123,39:      NEWLINE        '\n'           
124,0-124,12:       INDENT         '            ' 
124,12-124,17:      NAME           'super'        
124,17-124,18:      OP             '('            
124,18-124,24:      NAME           'Sender'       
124,24-124,25:      OP             ','            
124,26-124,30:      NAME           'self'         
124,30-124,31:      OP             ')'            
124,31-124,32:      OP             '.'            
124,32-124,37:      NAME           '_send'        
124,37-124,38:      OP             '('            
124,38-124,43:      NAME           'parts'        
124,43-124,44:      OP             ')'            
124,44-124,45:      NEWLINE        '\n'           
125,0-125,1:        NL             '\n'           
126,4-126,4:        DEDENT         ''             
126,4-126,4:        DEDENT         ''             
126,4-126,7:        NAME           'def'          
126,8-126,16:       NAME           '__call__'     
126,16-126,17:      OP             '('            
126,17-126,21:      NAME           'self'         
126,21-126,22:      OP             ','            
126,23-126,28:      NAME           'parts'        
126,28-126,29:      OP             ','            
126,30-126,37:      NAME           'timeout'      
126,37-126,38:      OP             '='            
126,38-126,42:      NAME           'None'         
126,42-126,43:      OP             ')'            
126,43-126,44:      OP             ':'            
126,44-126,45:      NEWLINE        '\n'           
127,0-127,8:        INDENT         '        '     
127,8-127,11:       NAME           'try'          
127,11-127,12:      OP             ':'            
127,12-127,13:      NEWLINE        '\n'           
128,0-128,12:       INDENT         '            ' 
128,12-128,16:      NAME           'self'         
128,16-128,17:      OP             '.'            
128,17-128,28:      NAME           '_send_queue'  
128,28-128,29:      OP             '.'            
128,29-128,32:      NAME           'put'          
128,32-128,33:      OP             '('            
128,33-128,38:      NAME           'parts'        
128,38-128,39:      OP             ','            
128,40-128,47:      NAME           'timeout'      
128,47-128,48:      OP             '='            
128,48-128,55:      NAME           'timeout'      
128,55-128,56:      OP             ')'            
128,56-128,57:      NEWLINE        '\n'           
129,8-129,8:        DEDENT         ''             
129,8-129,14:       NAME           'except'       
129,15-129,21:      NAME           'gevent'       
129,21-129,22:      OP             '.'            
129,22-129,27:      NAME           'queue'        
129,27-129,28:      OP             '.'            
129,28-129,32:      NAME           'Full'         
129,32-129,33:      OP             ':'            
129,33-129,34:      NEWLINE        '\n'           
130,0-130,12:       INDENT         '            ' 
130,12-130,17:      NAME           'raise'        
130,18-130,32:      NAME           'TimeoutExpired'
130,32-130,33:      OP             '('            
130,33-130,40:      NAME           'timeout'      
130,40-130,41:      OP             ')'            
130,41-130,42:      NEWLINE        '\n'           
131,0-131,1:        NL             '\n'           
132,0-132,1:        NL             '\n'           
133,0-133,0:        DEDENT         ''             
133,0-133,0:        DEDENT         ''             
133,0-133,0:        DEDENT         ''             
133,0-133,5:        NAME           'class'        
133,6-133,14:       NAME           'Receiver'     
133,14-133,15:      OP             '('            
133,15-133,33:      NAME           'SequentialReceiver'
133,33-133,34:      OP             ')'            
133,34-133,35:      OP             ':'            
133,35-133,36:      NEWLINE        '\n'           
134,0-134,1:        NL             '\n'           
135,0-135,4:        INDENT         '    '         
135,4-135,7:        NAME           'def'          
135,8-135,16:       NAME           '__init__'     
135,16-135,17:      OP             '('            
135,17-135,21:      NAME           'self'         
135,21-135,22:      OP             ','            
135,23-135,29:      NAME           'socket'       
135,29-135,30:      OP             ')'            
135,30-135,31:      OP             ':'            
135,31-135,32:      NEWLINE        '\n'           
136,0-136,8:        INDENT         '        '     
136,8-136,12:       NAME           'self'         
136,12-136,13:      OP             '.'            
136,13-136,20:      NAME           '_socket'      
136,21-136,22:      OP             '='            
136,23-136,29:      NAME           'socket'       
136,29-136,30:      NEWLINE        '\n'           
137,8-137,12:       NAME           'self'         
137,12-137,13:      OP             '.'            
137,13-137,24:      NAME           '_recv_queue'  
137,25-137,26:      OP             '='            
137,27-137,33:      NAME           'gevent'       
137,33-137,34:      OP             '.'            
137,34-137,39:      NAME           'queue'        
137,39-137,40:      OP             '.'            
137,40-137,47:      NAME           'Channel'      
137,47-137,48:      OP             '('            
137,48-137,49:      OP             ')'            
137,49-137,50:      NEWLINE        '\n'           
138,8-138,12:       NAME           'self'         
138,12-138,13:      OP             '.'            
138,13-138,23:      NAME           '_recv_task'   
138,24-138,25:      OP             '='            
138,26-138,32:      NAME           'gevent'       
138,32-138,33:      OP             '.'            
138,33-138,38:      NAME           'spawn'        
138,38-138,39:      OP             '('            
138,39-138,43:      NAME           'self'         
138,43-138,44:      OP             '.'            
138,44-138,51:      NAME           '_recver'      
138,51-138,52:      OP             ')'            
138,52-138,53:      NEWLINE        '\n'           
139,0-139,1:        NL             '\n'           
140,4-140,4:        DEDENT         ''             
140,4-140,7:        NAME           'def'          
140,8-140,13:       NAME           'close'        
140,13-140,14:      OP             '('            
140,14-140,18:      NAME           'self'         
140,18-140,19:      OP             ')'            
140,19-140,20:      OP             ':'            
140,20-140,21:      NEWLINE        '\n'           
141,0-141,8:        INDENT         '        '     
141,8-141,10:       NAME           'if'           
141,11-141,15:      NAME           'self'         
141,15-141,16:      OP             '.'            
141,16-141,26:      NAME           '_recv_task'   
141,26-141,27:      OP             ':'            
141,27-141,28:      NEWLINE        '\n'           
142,0-142,12:       INDENT         '            ' 
142,12-142,16:      NAME           'self'         
142,16-142,17:      OP             '.'            
142,17-142,27:      NAME           '_recv_task'   
142,27-142,28:      OP             '.'            
142,28-142,32:      NAME           'kill'         
142,32-142,33:      OP             '('            
142,33-142,34:      OP             ')'            
142,34-142,35:      NEWLINE        '\n'           
143,8-143,8:        DEDENT         ''             
143,8-143,12:       NAME           'self'         
143,12-143,13:      OP             '.'            
143,13-143,24:      NAME           '_recv_queue'  
143,25-143,26:      OP             '='            
143,27-143,31:      NAME           'None'         
143,31-143,32:      NEWLINE        '\n'           
144,0-144,1:        NL             '\n'           
145,4-145,4:        DEDENT         ''             
145,4-145,7:        NAME           'def'          
145,8-145,15:       NAME           '_recver'      
145,15-145,16:      OP             '('            
145,16-145,20:      NAME           'self'         
145,20-145,21:      OP             ')'            
145,21-145,22:      OP             ':'            
145,22-145,23:      NEWLINE        '\n'           
146,0-146,8:        INDENT         '        '     
146,8-146,13:       NAME           'while'        
146,14-146,18:      NAME           'True'         
146,18-146,19:      OP             ':'            
146,19-146,20:      NEWLINE        '\n'           
147,0-147,12:       INDENT         '            ' 
147,12-147,17:      NAME           'parts'        
147,18-147,19:      OP             '='            
147,20-147,25:      NAME           'super'        
147,25-147,26:      OP             '('            
147,26-147,34:      NAME           'Receiver'     
147,34-147,35:      OP             ','            
147,36-147,40:      NAME           'self'         
147,40-147,41:      OP             ')'            
147,41-147,42:      OP             '.'            
147,42-147,47:      NAME           '_recv'        
147,47-147,48:      OP             '('            
147,48-147,49:      OP             ')'            
147,49-147,50:      NEWLINE        '\n'           
148,12-148,16:      NAME           'self'         
148,16-148,17:      OP             '.'            
148,17-148,28:      NAME           '_recv_queue'  
148,28-148,29:      OP             '.'            
148,29-148,32:      NAME           'put'          
148,32-148,33:      OP             '('            
148,33-148,38:      NAME           'parts'        
148,38-148,39:      OP             ')'            
148,39-148,40:      NEWLINE        '\n'           
149,0-149,1:        NL             '\n'           
150,4-150,4:        DEDENT         ''             
150,4-150,4:        DEDENT         ''             
150,4-150,7:        NAME           'def'          
150,8-150,16:       NAME           '__call__'     
150,16-150,17:      OP             '('            
150,17-150,21:      NAME           'self'         
150,21-150,22:      OP             ','            
150,23-150,30:      NAME           'timeout'      
150,30-150,31:      OP             '='            
150,31-150,35:      NAME           'None'         
150,35-150,36:      OP             ')'            
150,36-150,37:      OP             ':'            
150,37-150,38:      NEWLINE        '\n'           
151,0-151,8:        INDENT         '        '     
151,8-151,11:       NAME           'try'          
151,11-151,12:      OP             ':'            
151,12-151,13:      NEWLINE        '\n'           
152,0-152,12:       INDENT         '            ' 
152,12-152,18:      NAME           'return'       
152,19-152,23:      NAME           'self'         
152,23-152,24:      OP             '.'            
152,24-152,35:      NAME           '_recv_queue'  
152,35-152,36:      OP             '.'            
152,36-152,39:      NAME           'get'          
152,39-152,40:      OP             '('            
152,40-152,47:      NAME           'timeout'      
152,47-152,48:      OP             '='            
152,48-152,55:      NAME           'timeout'      
152,55-152,56:      OP             ')'            
152,56-152,57:      NEWLINE        '\n'           
153,8-153,8:        DEDENT         ''             
153,8-153,14:       NAME           'except'       
153,15-153,21:      NAME           'gevent'       
153,21-153,22:      OP             '.'            
153,22-153,27:      NAME           'queue'        
153,27-153,28:      OP             '.'            
153,28-153,33:      NAME           'Empty'        
153,33-153,34:      OP             ':'            
153,34-153,35:      NEWLINE        '\n'           
154,0-154,12:       INDENT         '            ' 
154,12-154,17:      NAME           'raise'        
154,18-154,32:      NAME           'TimeoutExpired'
154,32-154,33:      OP             '('            
154,33-154,40:      NAME           'timeout'      
154,40-154,41:      OP             ')'            
154,41-154,42:      NEWLINE        '\n'           
155,0-155,1:        NL             '\n'           
156,0-156,1:        NL             '\n'           
157,0-157,0:        DEDENT         ''             
157,0-157,0:        DEDENT         ''             
157,0-157,0:        DEDENT         ''             
157,0-157,5:        NAME           'class'        
157,6-157,11:       NAME           'Event'        
157,11-157,12:      OP             '('            
157,12-157,18:      NAME           'object'       
157,18-157,19:      OP             ')'            
157,19-157,20:      OP             ':'            
157,20-157,21:      NEWLINE        '\n'           
158,0-158,1:        NL             '\n'           
159,0-159,4:        INDENT         '    '         
159,4-159,13:       NAME           '__slots__'    
159,14-159,15:      OP             '='            
159,16-159,17:      OP             '['            
159,17-159,24:      STRING         "'_name'"      
159,24-159,25:      OP             ','            
159,26-159,33:      STRING         "'_args'"      
159,33-159,34:      OP             ','            
159,35-159,44:      STRING         "'_header'"    
159,44-159,45:      OP             ','            
159,46-159,57:      STRING         "'_identity'"  
159,57-159,58:      OP             ']'            
159,58-159,59:      NEWLINE        '\n'           
160,0-160,1:        NL             '\n'           
161,4-161,7:        NAME           'def'          
161,8-161,16:       NAME           '__init__'     
161,16-161,17:      OP             '('            
161,17-161,21:      NAME           'self'         
161,21-161,22:      OP             ','            
161,23-161,27:      NAME           'name'         
161,27-161,28:      OP             ','            
161,29-161,33:      NAME           'args'         
161,33-161,34:      OP             ','            
161,35-161,42:      NAME           'context'      
161,42-161,43:      OP             ','            
161,44-161,50:      NAME           'header'       
161,50-161,51:      OP             '='            
161,51-161,55:      NAME           'None'         
161,55-161,56:      OP             ')'            
161,56-161,57:      OP             ':'            
161,57-161,58:      NEWLINE        '\n'           
162,0-162,8:        INDENT         '        '     
162,8-162,12:       NAME           'self'         
162,12-162,13:      OP             '.'            
162,13-162,18:      NAME           '_name'        
162,19-162,20:      OP             '='            
162,21-162,25:      NAME           'name'         
162,25-162,26:      NEWLINE        '\n'           
163,8-163,12:       NAME           'self'         
163,12-163,13:      OP             '.'            
163,13-163,18:      NAME           '_args'        
163,19-163,20:      OP             '='            
163,21-163,25:      NAME           'args'         
163,25-163,26:      NEWLINE        '\n'           
164,8-164,10:       NAME           'if'           
164,11-164,17:      NAME           'header'       
164,18-164,20:      NAME           'is'           
164,21-164,25:      NAME           'None'         
164,25-164,26:      OP             ':'            
164,26-164,27:      NEWLINE        '\n'           
165,0-165,12:       INDENT         '            ' 
165,12-165,16:      NAME           'self'         
165,16-165,17:      OP             '.'            
165,17-165,24:      NAME           '_header'      
165,25-165,26:      OP             '='            
165,27-165,28:      OP             '{'            
165,28-165,40:      STRING         "'message_id'" 
165,40-165,41:      OP             ':'            
165,42-165,49:      NAME           'context'      
165,49-165,50:      OP             '.'            
165,50-165,59:      NAME           'new_msgid'    
165,59-165,60:      OP             '('            
165,60-165,61:      OP             ')'            
165,61-165,62:      OP             ','            
165,63-165,66:      STRING         "'v'"          
165,66-165,67:      OP             ':'            
165,68-165,69:      NUMBER         '3'            
165,69-165,70:      OP             '}'            
165,70-165,71:      NEWLINE        '\n'           
166,8-166,8:        DEDENT         ''             
166,8-166,12:       NAME           'else'         
166,12-166,13:      OP             ':'            
166,13-166,14:      NEWLINE        '\n'           
167,0-167,12:       INDENT         '            ' 
167,12-167,16:      NAME           'self'         
167,16-167,17:      OP             '.'            
167,17-167,24:      NAME           '_header'      
167,25-167,26:      OP             '='            
167,27-167,33:      NAME           'header'       
167,33-167,34:      NEWLINE        '\n'           
168,8-168,8:        DEDENT         ''             
168,8-168,12:       NAME           'self'         
168,12-168,13:      OP             '.'            
168,13-168,22:      NAME           '_identity'    
168,23-168,24:      OP             '='            
168,25-168,29:      NAME           'None'         
168,29-168,30:      NEWLINE        '\n'           
169,0-169,1:        NL             '\n'           
170,4-170,4:        DEDENT         ''             
170,4-170,5:        OP             '@'            
170,5-170,13:       NAME           'property'     
170,13-170,14:      NEWLINE        '\n'           
171,4-171,7:        NAME           'def'          
171,8-171,14:       NAME           'header'       
171,14-171,15:      OP             '('            
171,15-171,19:      NAME           'self'         
171,19-171,20:      OP             ')'            
171,20-171,21:      OP             ':'            
171,21-171,22:      NEWLINE        '\n'           
172,0-172,8:        INDENT         '        '     
172,8-172,14:       NAME           'return'       
172,15-172,19:      NAME           'self'         
172,19-172,20:      OP             '.'            
172,20-172,27:      NAME           '_header'      
172,27-172,28:      NEWLINE        '\n'           
173,0-173,1:        NL             '\n'           
174,4-174,4:        DEDENT         ''             
174,4-174,5:        OP             '@'            
174,5-174,13:       NAME           'property'     
174,13-174,14:      NEWLINE        '\n'           
175,4-175,7:        NAME           'def'          
175,8-175,12:       NAME           'name'         
175,12-175,13:      OP             '('            
175,13-175,17:      NAME           'self'         
175,17-175,18:      OP             ')'            
175,18-175,19:      OP             ':'            
175,19-175,20:      NEWLINE        '\n'           
176,0-176,8:        INDENT         '        '     
176,8-176,14:       NAME           'return'       
176,15-176,19:      NAME           'self'         
176,19-176,20:      OP             '.'            
176,20-176,25:      NAME           '_name'        
176,25-176,26:      NEWLINE        '\n'           
177,0-177,1:        NL             '\n'           
178,4-178,4:        DEDENT         ''             
178,4-178,5:        OP             '@'            
178,5-178,9:        NAME           'name'         
178,9-178,10:       OP             '.'            
178,10-178,16:      NAME           'setter'       
178,16-178,17:      NEWLINE        '\n'           
179,4-179,7:        NAME           'def'          
179,8-179,12:       NAME           'name'         
179,12-179,13:      OP             '('            
179,13-179,17:      NAME           'self'         
179,17-179,18:      OP             ','            
179,19-179,20:      NAME           'v'            
179,20-179,21:      OP             ')'            
179,21-179,22:      OP             ':'            
179,22-179,23:      NEWLINE        '\n'           
180,0-180,8:        INDENT         '        '     
180,8-180,12:       NAME           'self'         
180,12-180,13:      OP             '.'            
180,13-180,18:      NAME           '_name'        
180,19-180,20:      OP             '='            
180,21-180,22:      NAME           'v'            
180,22-180,23:      NEWLINE        '\n'           
181,0-181,1:        NL             '\n'           
182,4-182,4:        DEDENT         ''             
182,4-182,5:        OP             '@'            
182,5-182,13:       NAME           'property'     
182,13-182,14:      NEWLINE        '\n'           
183,4-183,7:        NAME           'def'          
183,8-183,12:       NAME           'args'         
183,12-183,13:      OP             '('            
183,13-183,17:      NAME           'self'         
183,17-183,18:      OP             ')'            
183,18-183,19:      OP             ':'            
183,19-183,20:      NEWLINE        '\n'           
184,0-184,8:        INDENT         '        '     
184,8-184,14:       NAME           'return'       
184,15-184,19:      NAME           'self'         
184,19-184,20:      OP             '.'            
184,20-184,25:      NAME           '_args'        
184,25-184,26:      NEWLINE        '\n'           
185,0-185,1:        NL             '\n'           
186,4-186,4:        DEDENT         ''             
186,4-186,5:        OP             '@'            
186,5-186,13:       NAME           'property'     
186,13-186,14:      NEWLINE        '\n'           
187,4-187,7:        NAME           'def'          
187,8-187,16:       NAME           'identity'     
187,16-187,17:      OP             '('            
187,17-187,21:      NAME           'self'         
187,21-187,22:      OP             ')'            
187,22-187,23:      OP             ':'            
187,23-187,24:      NEWLINE        '\n'           
188,0-188,8:        INDENT         '        '     
188,8-188,14:       NAME           'return'       
188,15-188,19:      NAME           'self'         
188,19-188,20:      OP             '.'            
188,20-188,29:      NAME           '_identity'    
188,29-188,30:      NEWLINE        '\n'           
189,0-189,1:        NL             '\n'           
190,4-190,4:        DEDENT         ''             
190,4-190,5:        OP             '@'            
190,5-190,13:       NAME           'identity'     
190,13-190,14:      OP             '.'            
190,14-190,20:      NAME           'setter'       
190,20-190,21:      NEWLINE        '\n'           
191,4-191,7:        NAME           'def'          
191,8-191,16:       NAME           'identity'     
191,16-191,17:      OP             '('            
191,17-191,21:      NAME           'self'         
191,21-191,22:      OP             ','            
191,23-191,24:      NAME           'v'            
191,24-191,25:      OP             ')'            
191,25-191,26:      OP             ':'            
191,26-191,27:      NEWLINE        '\n'           
192,0-192,8:        INDENT         '        '     
192,8-192,12:       NAME           'self'         
192,12-192,13:      OP             '.'            
192,13-192,22:      NAME           '_identity'    
192,23-192,24:      OP             '='            
192,25-192,26:      NAME           'v'            
192,26-192,27:      NEWLINE        '\n'           
193,0-193,1:        NL             '\n'           
194,4-194,4:        DEDENT         ''             
194,4-194,7:        NAME           'def'          
194,8-194,12:       NAME           'pack'         
194,12-194,13:      OP             '('            
194,13-194,17:      NAME           'self'         
194,17-194,18:      OP             ')'            
194,18-194,19:      OP             ':'            
194,19-194,20:      NEWLINE        '\n'           
195,0-195,8:        INDENT         '        '     
195,8-195,14:       NAME           'return'       
195,15-195,22:      NAME           'msgpack'      
195,22-195,23:      OP             '.'            
195,23-195,29:      NAME           'Packer'       
195,29-195,30:      OP             '('            
195,30-195,42:      NAME           'use_bin_type' 
195,42-195,43:      OP             '='            
195,43-195,47:      NAME           'True'         
195,47-195,48:      OP             ')'            
195,48-195,49:      OP             '.'            
195,49-195,53:      NAME           'pack'         
195,53-195,54:      OP             '('            
195,54-195,55:      OP             '('            
195,55-195,59:      NAME           'self'         
195,59-195,60:      OP             '.'            
195,60-195,67:      NAME           '_header'      
195,67-195,68:      OP             ','            
195,69-195,73:      NAME           'self'         
195,73-195,74:      OP             '.'            
195,74-195,79:      NAME           '_name'        
195,79-195,80:      OP             ','            
195,81-195,85:      NAME           'self'         
195,85-195,86:      OP             '.'            
195,86-195,91:      NAME           '_args'        
195,91-195,92:      OP             ')'            
195,92-195,93:      OP             ')'            
195,93-195,94:      NEWLINE        '\n'           
196,0-196,1:        NL             '\n'           
197,4-197,4:        DEDENT         ''             
197,4-197,5:        OP             '@'            
197,5-197,17:       NAME           'staticmethod' 
197,17-197,18:      NEWLINE        '\n'           
198,4-198,7:        NAME           'def'          
198,8-198,14:       NAME           'unpack'       
198,14-198,15:      OP             '('            
198,15-198,19:      NAME           'blob'         
198,19-198,20:      OP             ')'            
198,20-198,21:      OP             ':'            
198,21-198,22:      NEWLINE        '\n'           
199,0-199,8:        INDENT         '        '     
199,8-199,16:       NAME           'unpacker'     
199,17-199,18:      OP             '='            
199,19-199,26:      NAME           'msgpack'      
199,26-199,27:      OP             '.'            
199,27-199,35:      NAME           'Unpacker'     
199,35-199,36:      OP             '('            
199,36-199,44:      NAME           'encoding'     
199,44-199,45:      OP             '='            
199,45-199,52:      STRING         "'utf-8'"      
199,52-199,53:      OP             ')'            
199,53-199,54:      NEWLINE        '\n'           
200,8-200,16:       NAME           'unpacker'     
200,16-200,17:      OP             '.'            
200,17-200,21:      NAME           'feed'         
200,21-200,22:      OP             '('            
200,22-200,26:      NAME           'blob'         
200,26-200,27:      OP             ')'            
200,27-200,28:      NEWLINE        '\n'           
201,8-201,20:       NAME           'unpacked_msg' 
201,21-201,22:      OP             '='            
201,23-201,31:      NAME           'unpacker'     
201,31-201,32:      OP             '.'            
201,32-201,38:      NAME           'unpack'       
201,38-201,39:      OP             '('            
201,39-201,40:      OP             ')'            
201,40-201,41:      NEWLINE        '\n'           
202,0-202,1:        NL             '\n'           
203,8-203,11:       NAME           'try'          
203,11-203,12:      OP             ':'            
203,12-203,13:      NEWLINE        '\n'           
204,0-204,12:       INDENT         '            ' 
204,12-204,13:      OP             '('            
204,13-204,19:      NAME           'header'       
204,19-204,20:      OP             ','            
204,21-204,25:      NAME           'name'         
204,25-204,26:      OP             ','            
204,27-204,31:      NAME           'args'         
204,31-204,32:      OP             ')'            
204,33-204,34:      OP             '='            
204,35-204,47:      NAME           'unpacked_msg' 
204,47-204,48:      NEWLINE        '\n'           
205,8-205,8:        DEDENT         ''             
205,8-205,14:       NAME           'except'       
205,15-205,24:      NAME           'Exception'    
205,25-205,27:      NAME           'as'           
205,28-205,29:      NAME           'e'            
205,29-205,30:      OP             ':'            
205,30-205,31:      NEWLINE        '\n'           
206,0-206,12:       INDENT         '            ' 
206,12-206,17:      NAME           'raise'        
206,18-206,27:      NAME           'Exception'    
206,27-206,28:      OP             '('            
206,28-206,59:      STRING         '\'invalid msg format "{0}": {1}\''
206,59-206,60:      OP             '.'            
206,60-206,66:      NAME           'format'       
206,66-206,67:      OP             '('            
206,67-206,68:      NL             '\n'           
207,16-207,28:      NAME           'unpacked_msg' 
207,28-207,29:      OP             ','            
207,30-207,31:      NAME           'e'            
207,31-207,32:      OP             ')'            
207,32-207,33:      OP             ')'            
207,33-207,34:      NEWLINE        '\n'           
208,0-208,1:        NL             '\n'           
209,8-209,32:       COMMENT        '# Backward compatibility'
209,32-209,33:      NL             '\n'           
210,8-210,8:        DEDENT         ''             
210,8-210,10:       NAME           'if'           
210,11-210,14:      NAME           'not'          
210,15-210,25:      NAME           'isinstance'   
210,25-210,26:      OP             '('            
210,26-210,32:      NAME           'header'       
210,32-210,33:      OP             ','            
210,34-210,38:      NAME           'dict'         
210,38-210,39:      OP             ')'            
210,39-210,40:      OP             ':'            
210,40-210,41:      NEWLINE        '\n'           
211,0-211,12:       INDENT         '            ' 
211,12-211,18:      NAME           'header'       
211,19-211,20:      OP             '='            
211,21-211,22:      OP             '{'            
211,22-211,23:      OP             '}'            
211,23-211,24:      NEWLINE        '\n'           
212,0-212,1:        NL             '\n'           
213,8-213,8:        DEDENT         ''             
213,8-213,14:       NAME           'return'       
213,15-213,20:      NAME           'Event'        
213,20-213,21:      OP             '('            
213,21-213,25:      NAME           'name'         
213,25-213,26:      OP             ','            
213,27-213,31:      NAME           'args'         
213,31-213,32:      OP             ','            
213,33-213,37:      NAME           'None'         
213,37-213,38:      OP             ','            
213,39-213,45:      NAME           'header'       
213,45-213,46:      OP             ')'            
213,46-213,47:      NEWLINE        '\n'           
214,0-214,1:        NL             '\n'           
215,4-215,4:        DEDENT         ''             
215,4-215,7:        NAME           'def'          
215,8-215,15:       NAME           '__str__'      
215,15-215,16:      OP             '('            
215,16-215,20:      NAME           'self'         
215,20-215,21:      OP             ','            
215,22-215,33:      NAME           'ignore_args'  
215,33-215,34:      OP             '='            
215,34-215,39:      NAME           'False'        
215,39-215,40:      OP             ')'            
215,40-215,41:      OP             ':'            
215,41-215,42:      NEWLINE        '\n'           
216,0-216,8:        INDENT         '        '     
216,8-216,10:       NAME           'if'           
216,11-216,22:      NAME           'ignore_args'  
216,22-216,23:      OP             ':'            
216,23-216,24:      NEWLINE        '\n'           
217,0-217,12:       INDENT         '            ' 
217,12-217,16:      NAME           'args'         
217,17-217,18:      OP             '='            
217,19-217,26:      STRING         "'[...]'"      
217,26-217,27:      NEWLINE        '\n'           
218,8-218,8:        DEDENT         ''             
218,8-218,12:       NAME           'else'         
218,12-218,13:      OP             ':'            
218,13-218,14:      NEWLINE        '\n'           
219,0-219,12:       INDENT         '            ' 
219,12-219,16:      NAME           'args'         
219,17-219,18:      OP             '='            
219,19-219,23:      NAME           'self'         
219,23-219,24:      OP             '.'            
219,24-219,29:      NAME           '_args'        
219,29-219,30:      NEWLINE        '\n'           
220,12-220,15:      NAME           'try'          
220,15-220,16:      OP             ':'            
220,16-220,17:      NEWLINE        '\n'           
221,0-221,16:       INDENT         '                '
221,16-221,20:      NAME           'args'         
221,21-221,22:      OP             '='            
221,23-221,32:      STRING         "'<<{0}>>'"    
221,32-221,33:      OP             '.'            
221,33-221,39:      NAME           'format'       
221,39-221,40:      OP             '('            
221,40-221,43:      NAME           'str'          
221,43-221,44:      OP             '('            
221,44-221,48:      NAME           'self'         
221,48-221,49:      OP             '.'            
221,49-221,55:      NAME           'unpack'       
221,55-221,56:      OP             '('            
221,56-221,60:      NAME           'self'         
221,60-221,61:      OP             '.'            
221,61-221,66:      NAME           '_args'        
221,66-221,67:      OP             ')'            
221,67-221,68:      OP             ')'            
221,68-221,69:      OP             ')'            
221,69-221,70:      NEWLINE        '\n'           
222,12-222,12:      DEDENT         ''             
222,12-222,18:      NAME           'except'       
222,19-222,28:      NAME           'Exception'    
222,28-222,29:      OP             ':'            
222,29-222,30:      NEWLINE        '\n'           
223,0-223,16:       INDENT         '                '
223,16-223,20:      NAME           'pass'         
223,20-223,21:      NEWLINE        '\n'           
224,8-224,8:        DEDENT         ''             
224,8-224,8:        DEDENT         ''             
224,8-224,10:       NAME           'if'           
224,11-224,15:      NAME           'self'         
224,15-224,16:      OP             '.'            
224,16-224,25:      NAME           '_identity'    
224,25-224,26:      OP             ':'            
224,26-224,27:      NEWLINE        '\n'           
225,0-225,12:       INDENT         '            ' 
225,12-225,20:      NAME           'identity'     
225,21-225,22:      OP             '='            
225,23-225,27:      STRING         "', '"         
225,27-225,28:      OP             '.'            
225,28-225,32:      NAME           'join'         
225,32-225,33:      OP             '('            
225,33-225,37:      NAME           'repr'         
225,37-225,38:      OP             '('            
225,38-225,39:      NAME           'x'            
225,39-225,40:      OP             '.'            
225,40-225,45:      NAME           'bytes'        
225,45-225,46:      OP             ')'            
225,47-225,50:      NAME           'for'          
225,51-225,52:      NAME           'x'            
225,53-225,55:      NAME           'in'           
225,56-225,60:      NAME           'self'         
225,60-225,61:      OP             '.'            
225,61-225,70:      NAME           '_identity'    
225,70-225,71:      OP             ')'            
225,71-225,72:      NEWLINE        '\n'           
226,12-226,18:      NAME           'return'       
226,19-226,38:      STRING         "'<{0}> {1} {2} {3}'"
226,38-226,39:      OP             '.'            
226,39-226,45:      NAME           'format'       
226,45-226,46:      OP             '('            
226,46-226,54:      NAME           'identity'     
226,54-226,55:      OP             ','            
226,56-226,60:      NAME           'self'         
226,60-226,61:      OP             '.'            
226,61-226,66:      NAME           '_name'        
226,66-226,67:      OP             ','            
226,67-226,68:      NL             '\n'           
227,20-227,24:      NAME           'self'         
227,24-227,25:      OP             '.'            
227,25-227,32:      NAME           '_header'      
227,32-227,33:      OP             ','            
227,34-227,38:      NAME           'args'         
227,38-227,39:      OP             ')'            
227,39-227,40:      NEWLINE        '\n'           
228,8-228,8:        DEDENT         ''             
228,8-228,14:       NAME           'return'       
228,15-228,28:      STRING         "'{0} {1} {2}'"
228,28-228,29:      OP             '.'            
228,29-228,35:      NAME           'format'       
228,35-228,36:      OP             '('            
228,36-228,40:      NAME           'self'         
228,40-228,41:      OP             '.'            
228,41-228,46:      NAME           '_name'        
228,46-228,47:      OP             ','            
228,48-228,52:      NAME           'self'         
228,52-228,53:      OP             '.'            
228,53-228,60:      NAME           '_header'      
228,60-228,61:      OP             ','            
228,62-228,66:      NAME           'args'         
228,66-228,67:      OP             ')'            
228,67-228,68:      NEWLINE        '\n'           
229,0-229,1:        NL             '\n'           
230,0-230,1:        NL             '\n'           
231,0-231,0:        DEDENT         ''             
231,0-231,0:        DEDENT         ''             
231,0-231,5:        NAME           'class'        
231,6-231,12:       NAME           'Events'       
231,12-231,13:      OP             '('            
231,13-231,24:      NAME           'ChannelBase'  
231,24-231,25:      OP             ')'            
231,25-231,26:      OP             ':'            
231,26-231,27:      NEWLINE        '\n'           
232,0-232,4:        INDENT         '    '         
232,4-232,7:        NAME           'def'          
232,8-232,16:       NAME           '__init__'     
232,16-232,17:      OP             '('            
232,17-232,21:      NAME           'self'         
232,21-232,22:      OP             ','            
232,23-232,38:      NAME           'zmq_socket_type'
232,38-232,39:      OP             ','            
232,40-232,47:      NAME           'context'      
232,47-232,48:      OP             '='            
232,48-232,52:      NAME           'None'         
232,52-232,53:      OP             ')'            
232,53-232,54:      OP             ':'            
232,54-232,55:      NEWLINE        '\n'           
233,0-233,8:        INDENT         '        '     
233,8-233,12:       NAME           'self'         
233,12-233,13:      OP             '.'            
233,13-233,19:      NAME           '_debug'       
233,20-233,21:      OP             '='            
233,22-233,27:      NAME           'False'        
233,27-233,28:      NEWLINE        '\n'           
234,8-234,12:       NAME           'self'         
234,12-234,13:      OP             '.'            
234,13-234,29:      NAME           '_zmq_socket_type'
234,30-234,31:      OP             '='            
234,32-234,47:      NAME           'zmq_socket_type'
234,47-234,48:      NEWLINE        '\n'           
235,8-235,12:       NAME           'self'         
235,12-235,13:      OP             '.'            
235,13-235,21:      NAME           '_context'     
235,22-235,23:      OP             '='            
235,24-235,31:      NAME           'context'      
235,32-235,34:      NAME           'or'           
235,35-235,42:      NAME           'Context'      
235,42-235,43:      OP             '.'            
235,43-235,55:      NAME           'get_instance' 
235,55-235,56:      OP             '('            
235,56-235,57:      OP             ')'            
235,57-235,58:      NEWLINE        '\n'           
236,8-236,12:       NAME           'self'         
236,12-236,13:      OP             '.'            
236,13-236,20:      NAME           '_socket'      
236,21-236,22:      OP             '='            
236,23-236,27:      NAME           'self'         
236,27-236,28:      OP             '.'            
236,28-236,36:      NAME           '_context'     
236,36-236,37:      OP             '.'            
236,37-236,43:      NAME           'socket'       
236,43-236,44:      OP             '('            
236,44-236,59:      NAME           'zmq_socket_type'
236,59-236,60:      OP             ')'            
236,60-236,61:      NEWLINE        '\n'           
237,0-237,1:        NL             '\n'           
238,8-238,10:       NAME           'if'           
238,11-238,26:      NAME           'zmq_socket_type'
238,27-238,29:      NAME           'in'           
238,30-238,31:      OP             '('            
238,31-238,34:      NAME           'zmq'          
238,34-238,35:      OP             '.'            
238,35-238,39:      NAME           'PUSH'         
238,39-238,40:      OP             ','            
238,41-238,44:      NAME           'zmq'          
238,44-238,45:      OP             '.'            
238,45-238,48:      NAME           'PUB'          
238,48-238,49:      OP             ','            
238,50-238,53:      NAME           'zmq'          
238,53-238,54:      OP             '.'            
238,54-238,60:      NAME           'DEALER'       
238,60-238,61:      OP             ','            
238,62-238,65:      NAME           'zmq'          
238,65-238,66:      OP             '.'            
238,66-238,72:      NAME           'ROUTER'       
238,72-238,73:      OP             ')'            
238,73-238,74:      OP             ':'            
238,74-238,75:      NEWLINE        '\n'           
239,0-239,12:       INDENT         '            ' 
239,12-239,16:      NAME           'self'         
239,16-239,17:      OP             '.'            
239,17-239,22:      NAME           '_send'        
239,23-239,24:      OP             '='            
239,25-239,31:      NAME           'Sender'       
239,31-239,32:      OP             '('            
239,32-239,36:      NAME           'self'         
239,36-239,37:      OP             '.'            
239,37-239,44:      NAME           '_socket'      
239,44-239,45:      OP             ')'            
239,45-239,46:      NEWLINE        '\n'           
240,8-240,8:        DEDENT         ''             
240,8-240,12:       NAME           'elif'         
240,13-240,28:      NAME           'zmq_socket_type'
240,29-240,31:      NAME           'in'           
240,32-240,33:      OP             '('            
240,33-240,36:      NAME           'zmq'          
240,36-240,37:      OP             '.'            
240,37-240,40:      NAME           'REQ'          
240,40-240,41:      OP             ','            
240,42-240,45:      NAME           'zmq'          
240,45-240,46:      OP             '.'            
240,46-240,49:      NAME           'REP'          
240,49-240,50:      OP             ')'            
240,50-240,51:      OP             ':'            
240,51-240,52:      NEWLINE        '\n'           
241,0-241,12:       INDENT         '            ' 
241,12-241,16:      NAME           'self'         
241,16-241,17:      OP             '.'            
241,17-241,22:      NAME           '_send'        
241,23-241,24:      OP             '='            
241,25-241,41:      NAME           'SequentialSender'
241,41-241,42:      OP             '('            
241,42-241,46:      NAME           'self'         
241,46-241,47:      OP             '.'            
241,47-241,54:      NAME           '_socket'      
241,54-241,55:      OP             ')'            
241,55-241,56:      NEWLINE        '\n'           
242,8-242,8:        DEDENT         ''             
242,8-242,12:       NAME           'else'         
242,12-242,13:      OP             ':'            
242,13-242,14:      NEWLINE        '\n'           
243,0-243,12:       INDENT         '            ' 
243,12-243,16:      NAME           'self'         
243,16-243,17:      OP             '.'            
243,17-243,22:      NAME           '_send'        
243,23-243,24:      OP             '='            
243,25-243,29:      NAME           'None'         
243,29-243,30:      NEWLINE        '\n'           
244,0-244,1:        NL             '\n'           
245,8-245,8:        DEDENT         ''             
245,8-245,10:       NAME           'if'           
245,11-245,26:      NAME           'zmq_socket_type'
245,27-245,29:      NAME           'in'           
245,30-245,31:      OP             '('            
245,31-245,34:      NAME           'zmq'          
245,34-245,35:      OP             '.'            
245,35-245,39:      NAME           'PULL'         
245,39-245,40:      OP             ','            
245,41-245,44:      NAME           'zmq'          
245,44-245,45:      OP             '.'            
245,45-245,48:      NAME           'SUB'          
245,48-245,49:      OP             ','            
245,50-245,53:      NAME           'zmq'          
245,53-245,54:      OP             '.'            
245,54-245,60:      NAME           'DEALER'       
245,60-245,61:      OP             ','            
245,62-245,65:      NAME           'zmq'          
245,65-245,66:      OP             '.'            
245,66-245,72:      NAME           'ROUTER'       
245,72-245,73:      OP             ')'            
245,73-245,74:      OP             ':'            
245,74-245,75:      NEWLINE        '\n'           
246,0-246,12:       INDENT         '            ' 
246,12-246,16:      NAME           'self'         
246,16-246,17:      OP             '.'            
246,17-246,22:      NAME           '_recv'        
246,23-246,24:      OP             '='            
246,25-246,33:      NAME           'Receiver'     
246,33-246,34:      OP             '('            
246,34-246,38:      NAME           'self'         
246,38-246,39:      OP             '.'            
246,39-246,46:      NAME           '_socket'      
246,46-246,47:      OP             ')'            
246,47-246,48:      NEWLINE        '\n'           
247,8-247,8:        DEDENT         ''             
247,8-247,12:       NAME           'elif'         
247,13-247,28:      NAME           'zmq_socket_type'
247,29-247,31:      NAME           'in'           
247,32-247,33:      OP             '('            
247,33-247,36:      NAME           'zmq'          
247,36-247,37:      OP             '.'            
247,37-247,40:      NAME           'REQ'          
247,40-247,41:      OP             ','            
247,42-247,45:      NAME           'zmq'          
247,45-247,46:      OP             '.'            
247,46-247,49:      NAME           'REP'          
247,49-247,50:      OP             ')'            
247,50-247,51:      OP             ':'            
247,51-247,52:      NEWLINE        '\n'           
248,0-248,12:       INDENT         '            ' 
248,12-248,16:      NAME           'self'         
248,16-248,17:      OP             '.'            
248,17-248,22:      NAME           '_recv'        
248,23-248,24:      OP             '='            
248,25-248,43:      NAME           'SequentialReceiver'
248,43-248,44:      OP             '('            
248,44-248,48:      NAME           'self'         
248,48-248,49:      OP             '.'            
248,49-248,56:      NAME           '_socket'      
248,56-248,57:      OP             ')'            
248,57-248,58:      NEWLINE        '\n'           
249,8-249,8:        DEDENT         ''             
249,8-249,12:       NAME           'else'         
249,12-249,13:      OP             ':'            
249,13-249,14:      NEWLINE        '\n'           
250,0-250,12:       INDENT         '            ' 
250,12-250,16:      NAME           'self'         
250,16-250,17:      OP             '.'            
250,17-250,22:      NAME           '_recv'        
250,23-250,24:      OP             '='            
250,25-250,29:      NAME           'None'         
250,29-250,30:      NEWLINE        '\n'           
251,0-251,1:        NL             '\n'           
252,4-252,4:        DEDENT         ''             
252,4-252,4:        DEDENT         ''             
252,4-252,5:        OP             '@'            
252,5-252,13:       NAME           'property'     
252,13-252,14:      NEWLINE        '\n'           
253,4-253,7:        NAME           'def'          
253,8-253,25:       NAME           'recv_is_supported'
253,25-253,26:      OP             '('            
253,26-253,30:      NAME           'self'         
253,30-253,31:      OP             ')'            
253,31-253,32:      OP             ':'            
253,32-253,33:      NEWLINE        '\n'           
254,0-254,8:        INDENT         '        '     
254,8-254,14:       NAME           'return'       
254,15-254,19:      NAME           'self'         
254,19-254,20:      OP             '.'            
254,20-254,25:      NAME           '_recv'        
254,26-254,28:      NAME           'is'           
254,29-254,32:      NAME           'not'          
254,33-254,37:      NAME           'None'         
254,37-254,38:      NEWLINE        '\n'           
255,0-255,1:        NL             '\n'           
256,4-256,4:        DEDENT         ''             
256,4-256,5:        OP             '@'            
256,5-256,13:       NAME           'property'     
256,13-256,14:      NEWLINE        '\n'           
257,4-257,7:        NAME           'def'          
257,8-257,25:       NAME           'emit_is_supported'
257,25-257,26:      OP             '('            
257,26-257,30:      NAME           'self'         
257,30-257,31:      OP             ')'            
257,31-257,32:      OP             ':'            
257,32-257,33:      NEWLINE        '\n'           
258,0-258,8:        INDENT         '        '     
258,8-258,14:       NAME           'return'       
258,15-258,19:      NAME           'self'         
258,19-258,20:      OP             '.'            
258,20-258,25:      NAME           '_send'        
258,26-258,28:      NAME           'is'           
258,29-258,32:      NAME           'not'          
258,33-258,37:      NAME           'None'         
258,37-258,38:      NEWLINE        '\n'           
259,0-259,1:        NL             '\n'           
260,4-260,4:        DEDENT         ''             
260,4-260,7:        NAME           'def'          
260,8-260,15:       NAME           '__del__'      
260,15-260,16:      OP             '('            
260,16-260,20:      NAME           'self'         
260,20-260,21:      OP             ')'            
260,21-260,22:      OP             ':'            
260,22-260,23:      NEWLINE        '\n'           
261,0-261,8:        INDENT         '        '     
261,8-261,11:       NAME           'try'          
261,11-261,12:      OP             ':'            
261,12-261,13:      NEWLINE        '\n'           
262,0-262,12:       INDENT         '            ' 
262,12-262,14:      NAME           'if'           
262,15-262,18:      NAME           'not'          
262,19-262,23:      NAME           'self'         
262,23-262,24:      OP             '.'            
262,24-262,31:      NAME           '_socket'      
262,31-262,32:      OP             '.'            
262,32-262,38:      NAME           'closed'       
262,38-262,39:      OP             ':'            
262,39-262,40:      NEWLINE        '\n'           
263,0-263,16:       INDENT         '                '
263,16-263,20:      NAME           'self'         
263,20-263,21:      OP             '.'            
263,21-263,26:      NAME           'close'        
263,26-263,27:      OP             '('            
263,27-263,28:      OP             ')'            
263,28-263,29:      NEWLINE        '\n'           
264,8-264,8:        DEDENT         ''             
264,8-264,8:        DEDENT         ''             
264,8-264,14:       NAME           'except'       
264,15-264,16:      OP             '('            
264,16-264,30:      NAME           'AttributeError'
264,30-264,31:      OP             ','            
264,32-264,41:      NAME           'TypeError'    
264,41-264,42:      OP             ')'            
264,42-264,43:      OP             ':'            
264,43-264,44:      NEWLINE        '\n'           
265,0-265,12:       INDENT         '            ' 
265,12-265,16:      NAME           'pass'         
265,16-265,17:      NEWLINE        '\n'           
266,0-266,1:        NL             '\n'           
267,4-267,4:        DEDENT         ''             
267,4-267,4:        DEDENT         ''             
267,4-267,7:        NAME           'def'          
267,8-267,13:       NAME           'close'        
267,13-267,14:      OP             '('            
267,14-267,18:      NAME           'self'         
267,18-267,19:      OP             ')'            
267,19-267,20:      OP             ':'            
267,20-267,21:      NEWLINE        '\n'           
268,0-268,8:        INDENT         '        '     
268,8-268,11:       NAME           'try'          
268,11-268,12:      OP             ':'            
268,12-268,13:      NEWLINE        '\n'           
269,0-269,12:       INDENT         '            ' 
269,12-269,16:      NAME           'self'         
269,16-269,17:      OP             '.'            
269,17-269,22:      NAME           '_send'        
269,22-269,23:      OP             '.'            
269,23-269,28:      NAME           'close'        
269,28-269,29:      OP             '('            
269,29-269,30:      OP             ')'            
269,30-269,31:      NEWLINE        '\n'           
270,8-270,8:        DEDENT         ''             
270,8-270,14:       NAME           'except'       
270,15-270,29:      NAME           'AttributeError'
270,29-270,30:      OP             ':'            
270,30-270,31:      NEWLINE        '\n'           
271,0-271,12:       INDENT         '            ' 
271,12-271,16:      NAME           'pass'         
271,16-271,17:      NEWLINE        '\n'           
272,8-272,8:        DEDENT         ''             
272,8-272,11:       NAME           'try'          
272,11-272,12:      OP             ':'            
272,12-272,13:      NEWLINE        '\n'           
273,0-273,12:       INDENT         '            ' 
273,12-273,16:      NAME           'self'         
273,16-273,17:      OP             '.'            
273,17-273,22:      NAME           '_recv'        
273,22-273,23:      OP             '.'            
273,23-273,28:      NAME           'close'        
273,28-273,29:      OP             '('            
273,29-273,30:      OP             ')'            
273,30-273,31:      NEWLINE        '\n'           
274,8-274,8:        DEDENT         ''             
274,8-274,14:       NAME           'except'       
274,15-274,29:      NAME           'AttributeError'
274,29-274,30:      OP             ':'            
274,30-274,31:      NEWLINE        '\n'           
275,0-275,12:       INDENT         '            ' 
275,12-275,16:      NAME           'pass'         
275,16-275,17:      NEWLINE        '\n'           
276,8-276,8:        DEDENT         ''             
276,8-276,12:       NAME           'self'         
276,12-276,13:      OP             '.'            
276,13-276,20:      NAME           '_socket'      
276,20-276,21:      OP             '.'            
276,21-276,26:      NAME           'close'        
276,26-276,27:      OP             '('            
276,27-276,28:      OP             ')'            
276,28-276,29:      NEWLINE        '\n'           
277,0-277,1:        NL             '\n'           
278,4-278,4:        DEDENT         ''             
278,4-278,5:        OP             '@'            
278,5-278,13:       NAME           'property'     
278,13-278,14:      NEWLINE        '\n'           
279,4-279,7:        NAME           'def'          
279,8-279,13:       NAME           'debug'        
279,13-279,14:      OP             '('            
279,14-279,18:      NAME           'self'         
279,18-279,19:      OP             ')'            
279,19-279,20:      OP             ':'            
279,20-279,21:      NEWLINE        '\n'           
280,0-280,8:        INDENT         '        '     
280,8-280,14:       NAME           'return'       
280,15-280,19:      NAME           'self'         
280,19-280,20:      OP             '.'            
280,20-280,26:      NAME           '_debug'       
280,26-280,27:      NEWLINE        '\n'           
281,0-281,1:        NL             '\n'           
282,4-282,4:        DEDENT         ''             
282,4-282,5:        OP             '@'            
282,5-282,10:       NAME           'debug'        
282,10-282,11:      OP             '.'            
282,11-282,17:      NAME           'setter'       
282,17-282,18:      NEWLINE        '\n'           
283,4-283,7:        NAME           'def'          
283,8-283,13:       NAME           'debug'        
283,13-283,14:      OP             '('            
283,14-283,18:      NAME           'self'         
283,18-283,19:      OP             ','            
283,20-283,21:      NAME           'v'            
283,21-283,22:      OP             ')'            
283,22-283,23:      OP             ':'            
283,23-283,24:      NEWLINE        '\n'           
284,0-284,8:        INDENT         '        '     
284,8-284,10:       NAME           'if'           
284,11-284,12:      NAME           'v'            
284,13-284,15:      OP             '!='           
284,16-284,20:      NAME           'self'         
284,20-284,21:      OP             '.'            
284,21-284,27:      NAME           '_debug'       
284,27-284,28:      OP             ':'            
284,28-284,29:      NEWLINE        '\n'           
285,0-285,12:       INDENT         '            ' 
285,12-285,16:      NAME           'self'         
285,16-285,17:      OP             '.'            
285,17-285,23:      NAME           '_debug'       
285,24-285,25:      OP             '='            
285,26-285,27:      NAME           'v'            
285,27-285,28:      NEWLINE        '\n'           
286,12-286,14:      NAME           'if'           
286,15-286,19:      NAME           'self'         
286,19-286,20:      OP             '.'            
286,20-286,26:      NAME           '_debug'       
286,26-286,27:      OP             ':'            
286,27-286,28:      NEWLINE        '\n'           
287,0-287,16:       INDENT         '                '
287,16-287,22:      NAME           'logger'       
287,22-287,23:      OP             '.'            
287,23-287,28:      NAME           'debug'        
287,28-287,29:      OP             '('            
287,29-287,44:      STRING         "'debug enabled'"
287,44-287,45:      OP             ')'            
287,45-287,46:      NEWLINE        '\n'           
288,12-288,12:      DEDENT         ''             
288,12-288,16:      NAME           'else'         
288,16-288,17:      OP             ':'            
288,17-288,18:      NEWLINE        '\n'           
289,0-289,16:       INDENT         '                '
289,16-289,22:      NAME           'logger'       
289,22-289,23:      OP             '.'            
289,23-289,28:      NAME           'debug'        
289,28-289,29:      OP             '('            
289,29-289,45:      STRING         "'debug disabled'"
289,45-289,46:      OP             ')'            
289,46-289,47:      NEWLINE        '\n'           
290,0-290,1:        NL             '\n'           
291,4-291,4:        DEDENT         ''             
291,4-291,4:        DEDENT         ''             
291,4-291,4:        DEDENT         ''             
291,4-291,7:        NAME           'def'          
291,8-291,25:       NAME           '_resolve_endpoint'
291,25-291,26:      OP             '('            
291,26-291,30:      NAME           'self'         
291,30-291,31:      OP             ','            
291,32-291,40:      NAME           'endpoint'     
291,40-291,41:      OP             ','            
291,42-291,49:      NAME           'resolve'      
291,49-291,50:      OP             '='            
291,50-291,54:      NAME           'True'         
291,54-291,55:      OP             ')'            
291,55-291,56:      OP             ':'            
291,56-291,57:      NEWLINE        '\n'           
292,0-292,8:        INDENT         '        '     
292,8-292,10:       NAME           'if'           
292,11-292,18:      NAME           'resolve'      
292,18-292,19:      OP             ':'            
292,19-292,20:      NEWLINE        '\n'           
293,0-293,12:       INDENT         '            ' 
293,12-293,20:      NAME           'endpoint'     
293,21-293,22:      OP             '='            
293,23-293,27:      NAME           'self'         
293,27-293,28:      OP             '.'            
293,28-293,36:      NAME           '_context'     
293,36-293,37:      OP             '.'            
293,37-293,58:      NAME           'hook_resolve_endpoint'
293,58-293,59:      OP             '('            
293,59-293,67:      NAME           'endpoint'     
293,67-293,68:      OP             ')'            
293,68-293,69:      NEWLINE        '\n'           
294,8-294,8:        DEDENT         ''             
294,8-294,10:       NAME           'if'           
294,11-294,21:      NAME           'isinstance'   
294,21-294,22:      OP             '('            
294,22-294,30:      NAME           'endpoint'     
294,30-294,31:      OP             ','            
294,32-294,33:      OP             '('            
294,33-294,38:      NAME           'tuple'        
294,38-294,39:      OP             ','            
294,40-294,44:      NAME           'list'         
294,44-294,45:      OP             ')'            
294,45-294,46:      OP             ')'            
294,46-294,47:      OP             ':'            
294,47-294,48:      NEWLINE        '\n'           
295,0-295,12:       INDENT         '            ' 
295,12-295,13:      NAME           'r'            
295,14-295,15:      OP             '='            
295,16-295,17:      OP             '['            
295,17-295,18:      OP             ']'            
295,18-295,19:      NEWLINE        '\n'           
296,12-296,15:      NAME           'for'          
296,16-296,28:      NAME           'sub_endpoint' 
296,29-296,31:      NAME           'in'           
296,32-296,40:      NAME           'endpoint'     
296,40-296,41:      OP             ':'            
296,41-296,42:      NEWLINE        '\n'           
297,0-297,16:       INDENT         '                '
297,16-297,17:      NAME           'r'            
297,17-297,18:      OP             '.'            
297,18-297,24:      NAME           'extend'       
297,24-297,25:      OP             '('            
297,25-297,29:      NAME           'self'         
297,29-297,30:      OP             '.'            
297,30-297,47:      NAME           '_resolve_endpoint'
297,47-297,48:      OP             '('            
297,48-297,60:      NAME           'sub_endpoint' 
297,60-297,61:      OP             ','            
297,62-297,69:      NAME           'resolve'      
297,69-297,70:      OP             ')'            
297,70-297,71:      OP             ')'            
297,71-297,72:      NEWLINE        '\n'           
298,12-298,12:      DEDENT         ''             
298,12-298,18:      NAME           'return'       
298,19-298,20:      NAME           'r'            
298,20-298,21:      NEWLINE        '\n'           
299,8-299,8:        DEDENT         ''             
299,8-299,14:       NAME           'return'       
299,15-299,16:      OP             '['            
299,16-299,24:      NAME           'endpoint'     
299,24-299,25:      OP             ']'            
299,25-299,26:      NEWLINE        '\n'           
300,0-300,1:        NL             '\n'           
301,4-301,4:        DEDENT         ''             
301,4-301,7:        NAME           'def'          
301,8-301,15:       NAME           'connect'      
301,15-301,16:      OP             '('            
301,16-301,20:      NAME           'self'         
301,20-301,21:      OP             ','            
301,22-301,30:      NAME           'endpoint'     
301,30-301,31:      OP             ','            
301,32-301,39:      NAME           'resolve'      
301,39-301,40:      OP             '='            
301,40-301,44:      NAME           'True'         
301,44-301,45:      OP             ')'            
301,45-301,46:      OP             ':'            
301,46-301,47:      NEWLINE        '\n'           
302,0-302,8:        INDENT         '        '     
302,8-302,9:        NAME           'r'            
302,10-302,11:      OP             '='            
302,12-302,13:      OP             '['            
302,13-302,14:      OP             ']'            
302,14-302,15:      NEWLINE        '\n'           
303,8-303,11:       NAME           'for'          
303,12-303,21:      NAME           'endpoint_'    
303,22-303,24:      NAME           'in'           
303,25-303,29:      NAME           'self'         
303,29-303,30:      OP             '.'            
303,30-303,47:      NAME           '_resolve_endpoint'
303,47-303,48:      OP             '('            
303,48-303,56:      NAME           'endpoint'     
303,56-303,57:      OP             ','            
303,58-303,65:      NAME           'resolve'      
303,65-303,66:      OP             ')'            
303,66-303,67:      OP             ':'            
303,67-303,68:      NEWLINE        '\n'           
304,0-304,12:       INDENT         '            ' 
304,12-304,13:      NAME           'r'            
304,13-304,14:      OP             '.'            
304,14-304,20:      NAME           'append'       
304,20-304,21:      OP             '('            
304,21-304,25:      NAME           'self'         
304,25-304,26:      OP             '.'            
304,26-304,33:      NAME           '_socket'      
304,33-304,34:      OP             '.'            
304,34-304,41:      NAME           'connect'      
304,41-304,42:      OP             '('            
304,42-304,51:      NAME           'endpoint_'    
304,51-304,52:      OP             ')'            
304,52-304,53:      OP             ')'            
304,53-304,54:      NEWLINE        '\n'           
305,12-305,18:      NAME           'logger'       
305,18-305,19:      OP             '.'            
305,19-305,24:      NAME           'debug'        
305,24-305,25:      OP             '('            
305,25-305,54:      STRING         "'connected to %s (status=%s)'"
305,54-305,55:      OP             ','            
305,56-305,65:      NAME           'endpoint_'    
305,65-305,66:      OP             ','            
305,67-305,68:      NAME           'r'            
305,68-305,69:      OP             '['            
305,69-305,70:      OP             '-'            
305,70-305,71:      NUMBER         '1'            
305,71-305,72:      OP             ']'            
305,72-305,73:      OP             ')'            
305,73-305,74:      NEWLINE        '\n'           
306,8-306,8:        DEDENT         ''             
306,8-306,14:       NAME           'return'       
306,15-306,16:      NAME           'r'            
306,16-306,17:      NEWLINE        '\n'           
307,0-307,1:        NL             '\n'           
308,4-308,4:        DEDENT         ''             
308,4-308,7:        NAME           'def'          
308,8-308,12:       NAME           'bind'         
308,12-308,13:      OP             '('            
308,13-308,17:      NAME           'self'         
308,17-308,18:      OP             ','            
308,19-308,27:      NAME           'endpoint'     
308,27-308,28:      OP             ','            
308,29-308,36:      NAME           'resolve'      
308,36-308,37:      OP             '='            
308,37-308,41:      NAME           'True'         
308,41-308,42:      OP             ')'            
308,42-308,43:      OP             ':'            
308,43-308,44:      NEWLINE        '\n'           
309,0-309,8:        INDENT         '        '     
309,8-309,9:        NAME           'r'            
309,10-309,11:      OP             '='            
309,12-309,13:      OP             '['            
309,13-309,14:      OP             ']'            
309,14-309,15:      NEWLINE        '\n'           
310,8-310,11:       NAME           'for'          
310,12-310,21:      NAME           'endpoint_'    
310,22-310,24:      NAME           'in'           
310,25-310,29:      NAME           'self'         
310,29-310,30:      OP             '.'            
310,30-310,47:      NAME           '_resolve_endpoint'
310,47-310,48:      OP             '('            
310,48-310,56:      NAME           'endpoint'     
310,56-310,57:      OP             ','            
310,58-310,65:      NAME           'resolve'      
310,65-310,66:      OP             ')'            
310,66-310,67:      OP             ':'            
310,67-310,68:      NEWLINE        '\n'           
311,0-311,12:       INDENT         '            ' 
311,12-311,13:      NAME           'r'            
311,13-311,14:      OP             '.'            
311,14-311,20:      NAME           'append'       
311,20-311,21:      OP             '('            
311,21-311,25:      NAME           'self'         
311,25-311,26:      OP             '.'            
311,26-311,33:      NAME           '_socket'      
311,33-311,34:      OP             '.'            
311,34-311,38:      NAME           'bind'         
311,38-311,39:      OP             '('            
311,39-311,48:      NAME           'endpoint_'    
311,48-311,49:      OP             ')'            
311,49-311,50:      OP             ')'            
311,50-311,51:      NEWLINE        '\n'           
312,12-312,18:      NAME           'logger'       
312,18-312,19:      OP             '.'            
312,19-312,24:      NAME           'debug'        
312,24-312,25:      OP             '('            
312,25-312,50:      STRING         "'bound to %s (status=%s)'"
312,50-312,51:      OP             ','            
312,52-312,61:      NAME           'endpoint_'    
312,61-312,62:      OP             ','            
312,63-312,64:      NAME           'r'            
312,64-312,65:      OP             '['            
312,65-312,66:      OP             '-'            
312,66-312,67:      NUMBER         '1'            
312,67-312,68:      OP             ']'            
312,68-312,69:      OP             ')'            
312,69-312,70:      NEWLINE        '\n'           
313,8-313,8:        DEDENT         ''             
313,8-313,14:       NAME           'return'       
313,15-313,16:      NAME           'r'            
313,16-313,17:      NEWLINE        '\n'           
314,0-314,1:        NL             '\n'           
315,4-315,4:        DEDENT         ''             
315,4-315,7:        NAME           'def'          
315,8-315,18:       NAME           'disconnect'   
315,18-315,19:      OP             '('            
315,19-315,23:      NAME           'self'         
315,23-315,24:      OP             ','            
315,25-315,33:      NAME           'endpoint'     
315,33-315,34:      OP             ','            
315,35-315,42:      NAME           'resolve'      
315,42-315,43:      OP             '='            
315,43-315,47:      NAME           'True'         
315,47-315,48:      OP             ')'            
315,48-315,49:      OP             ':'            
315,49-315,50:      NEWLINE        '\n'           
316,0-316,8:        INDENT         '        '     
316,8-316,9:        NAME           'r'            
316,10-316,11:      OP             '='            
316,12-316,13:      OP             '['            
316,13-316,14:      OP             ']'            
316,14-316,15:      NEWLINE        '\n'           
317,8-317,11:       NAME           'for'          
317,12-317,21:      NAME           'endpoint_'    
317,22-317,24:      NAME           'in'           
317,25-317,29:      NAME           'self'         
317,29-317,30:      OP             '.'            
317,30-317,47:      NAME           '_resolve_endpoint'
317,47-317,48:      OP             '('            
317,48-317,56:      NAME           'endpoint'     
317,56-317,57:      OP             ','            
317,58-317,65:      NAME           'resolve'      
317,65-317,66:      OP             ')'            
317,66-317,67:      OP             ':'            
317,67-317,68:      NEWLINE        '\n'           
318,0-318,12:       INDENT         '            ' 
318,12-318,13:      NAME           'r'            
318,13-318,14:      OP             '.'            
318,14-318,20:      NAME           'append'       
318,20-318,21:      OP             '('            
318,21-318,25:      NAME           'self'         
318,25-318,26:      OP             '.'            
318,26-318,33:      NAME           '_socket'      
318,33-318,34:      OP             '.'            
318,34-318,44:      NAME           'disconnect'   
318,44-318,45:      OP             '('            
318,45-318,54:      NAME           'endpoint_'    
318,54-318,55:      OP             ')'            
318,55-318,56:      OP             ')'            
318,56-318,57:      NEWLINE        '\n'           
319,12-319,19:      NAME           'logging'      
319,19-319,20:      OP             '.'            
319,20-319,25:      NAME           'debug'        
319,25-319,26:      OP             '('            
319,26-319,60:      STRING         "'disconnected from %s (status=%s)'"
319,60-319,61:      OP             ','            
319,62-319,71:      NAME           'endpoint_'    
319,71-319,72:      OP             ','            
319,73-319,74:      NAME           'r'            
319,74-319,75:      OP             '['            
319,75-319,76:      OP             '-'            
319,76-319,77:      NUMBER         '1'            
319,77-319,78:      OP             ']'            
319,78-319,79:      OP             ')'            
319,79-319,80:      NEWLINE        '\n'           
320,8-320,8:        DEDENT         ''             
320,8-320,14:       NAME           'return'       
320,15-320,16:      NAME           'r'            
320,16-320,17:      NEWLINE        '\n'           
321,0-321,1:        NL             '\n'           
322,4-322,4:        DEDENT         ''             
322,4-322,7:        NAME           'def'          
322,8-322,17:       NAME           'new_event'    
322,17-322,18:      OP             '('            
322,18-322,22:      NAME           'self'         
322,22-322,23:      OP             ','            
322,24-322,28:      NAME           'name'         
322,28-322,29:      OP             ','            
322,30-322,34:      NAME           'args'         
322,34-322,35:      OP             ','            
322,36-322,43:      NAME           'xheader'      
322,43-322,44:      OP             '='            
322,44-322,48:      NAME           'None'         
322,48-322,49:      OP             ')'            
322,49-322,50:      OP             ':'            
322,50-322,51:      NEWLINE        '\n'           
323,0-323,8:        INDENT         '        '     
323,8-323,13:       NAME           'event'        
323,14-323,15:      OP             '='            
323,16-323,21:      NAME           'Event'        
323,21-323,22:      OP             '('            
323,22-323,26:      NAME           'name'         
323,26-323,27:      OP             ','            
323,28-323,32:      NAME           'args'         
323,32-323,33:      OP             ','            
323,34-323,41:      NAME           'context'      
323,41-323,42:      OP             '='            
323,42-323,46:      NAME           'self'         
323,46-323,47:      OP             '.'            
323,47-323,55:      NAME           '_context'     
323,55-323,56:      OP             ')'            
323,56-323,57:      NEWLINE        '\n'           
324,8-324,10:       NAME           'if'           
324,11-324,18:      NAME           'xheader'      
324,18-324,19:      OP             ':'            
324,19-324,20:      NEWLINE        '\n'           
325,0-325,12:       INDENT         '            ' 
325,12-325,17:      NAME           'event'        
325,17-325,18:      OP             '.'            
325,18-325,24:      NAME           'header'       
325,24-325,25:      OP             '.'            
325,25-325,31:      NAME           'update'       
325,31-325,32:      OP             '('            
325,32-325,39:      NAME           'xheader'      
325,39-325,40:      OP             ')'            
325,40-325,41:      NEWLINE        '\n'           
326,8-326,8:        DEDENT         ''             
326,8-326,14:       NAME           'return'       
326,15-326,20:      NAME           'event'        
326,20-326,21:      NEWLINE        '\n'           
327,0-327,1:        NL             '\n'           
328,4-328,4:        DEDENT         ''             
328,4-328,7:        NAME           'def'          
328,8-328,18:       NAME           'emit_event'   
328,18-328,19:      OP             '('            
328,19-328,23:      NAME           'self'         
328,23-328,24:      OP             ','            
328,25-328,30:      NAME           'event'        
328,30-328,31:      OP             ','            
328,32-328,39:      NAME           'timeout'      
328,39-328,40:      OP             '='            
328,40-328,44:      NAME           'None'         
328,44-328,45:      OP             ')'            
328,45-328,46:      OP             ':'            
328,46-328,47:      NEWLINE        '\n'           
329,0-329,8:        INDENT         '        '     
329,8-329,10:       NAME           'if'           
329,11-329,15:      NAME           'self'         
329,15-329,16:      OP             '.'            
329,16-329,22:      NAME           '_debug'       
329,22-329,23:      OP             ':'            
329,23-329,24:      NEWLINE        '\n'           
330,0-330,12:       INDENT         '            ' 
330,12-330,18:      NAME           'logger'       
330,18-330,19:      OP             '.'            
330,19-330,24:      NAME           'debug'        
330,24-330,25:      OP             '('            
330,25-330,33:      STRING         "'--> %s'"     
330,33-330,34:      OP             ','            
330,35-330,40:      NAME           'event'        
330,40-330,41:      OP             ')'            
330,41-330,42:      NEWLINE        '\n'           
331,8-331,8:        DEDENT         ''             
331,8-331,10:       NAME           'if'           
331,11-331,16:      NAME           'event'        
331,16-331,17:      OP             '.'            
331,17-331,25:      NAME           'identity'     
331,25-331,26:      OP             ':'            
331,26-331,27:      NEWLINE        '\n'           
332,0-332,12:       INDENT         '            ' 
332,12-332,17:      NAME           'parts'        
332,18-332,19:      OP             '='            
332,20-332,24:      NAME           'list'         
332,24-332,25:      OP             '('            
332,25-332,30:      NAME           'event'        
332,30-332,31:      OP             '.'            
332,31-332,39:      NAME           'identity'     
332,40-332,42:      NAME           'or'           
332,43-332,47:      NAME           'list'         
332,47-332,48:      OP             '('            
332,48-332,49:      OP             ')'            
332,49-332,50:      OP             ')'            
332,50-332,51:      NEWLINE        '\n'           
333,12-333,17:      NAME           'parts'        
333,17-333,18:      OP             '.'            
333,18-333,24:      NAME           'extend'       
333,24-333,25:      OP             '('            
333,25-333,26:      OP             '['            
333,26-333,28:      STRING         "''"           
333,28-333,29:      OP             ','            
333,30-333,35:      NAME           'event'        
333,35-333,36:      OP             '.'            
333,36-333,40:      NAME           'pack'         
333,40-333,41:      OP             '('            
333,41-333,42:      OP             ')'            
333,42-333,43:      OP             ']'            
333,43-333,44:      OP             ')'            
333,44-333,45:      NEWLINE        '\n'           
334,8-334,8:        DEDENT         ''             
334,8-334,12:       NAME           'elif'         
334,13-334,17:      NAME           'self'         
334,17-334,18:      OP             '.'            
334,18-334,34:      NAME           '_zmq_socket_type'
334,35-334,37:      NAME           'in'           
334,38-334,39:      OP             '('            
334,39-334,42:      NAME           'zmq'          
334,42-334,43:      OP             '.'            
334,43-334,49:      NAME           'DEALER'       
334,49-334,50:      OP             ','            
334,51-334,54:      NAME           'zmq'          
334,54-334,55:      OP             '.'            
334,55-334,61:      NAME           'ROUTER'       
334,61-334,62:      OP             ')'            
334,62-334,63:      OP             ':'            
334,63-334,64:      NEWLINE        '\n'           
335,0-335,12:       INDENT         '            ' 
335,12-335,17:      NAME           'parts'        
335,18-335,19:      OP             '='            
335,20-335,21:      OP             '('            
335,21-335,23:      STRING         "''"           
335,23-335,24:      OP             ','            
335,25-335,30:      NAME           'event'        
335,30-335,31:      OP             '.'            
335,31-335,35:      NAME           'pack'         
335,35-335,36:      OP             '('            
335,36-335,37:      OP             ')'            
335,37-335,38:      OP             ')'            
335,38-335,39:      NEWLINE        '\n'           
336,8-336,8:        DEDENT         ''             
336,8-336,12:       NAME           'else'         
336,12-336,13:      OP             ':'            
336,13-336,14:      NEWLINE        '\n'           
337,0-337,12:       INDENT         '            ' 
337,12-337,17:      NAME           'parts'        
337,18-337,19:      OP             '='            
337,20-337,21:      OP             '('            
337,21-337,26:      NAME           'event'        
337,26-337,27:      OP             '.'            
337,27-337,31:      NAME           'pack'         
337,31-337,32:      OP             '('            
337,32-337,33:      OP             ')'            
337,33-337,34:      OP             ','            
337,34-337,35:      OP             ')'            
337,35-337,36:      NEWLINE        '\n'           
338,8-338,8:        DEDENT         ''             
338,8-338,12:       NAME           'self'         
338,12-338,13:      OP             '.'            
338,13-338,18:      NAME           '_send'        
338,18-338,19:      OP             '('            
338,19-338,24:      NAME           'parts'        
338,24-338,25:      OP             ','            
338,26-338,33:      NAME           'timeout'      
338,33-338,34:      OP             ')'            
338,34-338,35:      NEWLINE        '\n'           
339,0-339,1:        NL             '\n'           
340,4-340,4:        DEDENT         ''             
340,4-340,7:        NAME           'def'          
340,8-340,12:       NAME           'recv'         
340,12-340,13:      OP             '('            
340,13-340,17:      NAME           'self'         
340,17-340,18:      OP             ','            
340,19-340,26:      NAME           'timeout'      
340,26-340,27:      OP             '='            
340,27-340,31:      NAME           'None'         
340,31-340,32:      OP             ')'            
340,32-340,33:      OP             ':'            
340,33-340,34:      NEWLINE        '\n'           
341,0-341,8:        INDENT         '        '     
341,8-341,13:       NAME           'parts'        
341,14-341,15:      OP             '='            
341,16-341,20:      NAME           'self'         
341,20-341,21:      OP             '.'            
341,21-341,26:      NAME           '_recv'        
341,26-341,27:      OP             '('            
341,27-341,34:      NAME           'timeout'      
341,34-341,35:      OP             '='            
341,35-341,42:      NAME           'timeout'      
341,42-341,43:      OP             ')'            
341,43-341,44:      NEWLINE        '\n'           
342,8-342,10:       NAME           'if'           
342,11-342,14:      NAME           'len'          
342,14-342,15:      OP             '('            
342,15-342,20:      NAME           'parts'        
342,20-342,21:      OP             ')'            
342,22-342,23:      OP             '>'            
342,24-342,25:      NUMBER         '2'            
342,25-342,26:      OP             ':'            
342,26-342,27:      NEWLINE        '\n'           
343,0-343,12:       INDENT         '            ' 
343,12-343,20:      NAME           'identity'     
343,21-343,22:      OP             '='            
343,23-343,28:      NAME           'parts'        
343,28-343,29:      OP             '['            
343,29-343,30:      NUMBER         '0'            
343,30-343,31:      OP             ':'            
343,31-343,32:      OP             '-'            
343,32-343,33:      NUMBER         '2'            
343,33-343,34:      OP             ']'            
343,34-343,35:      NEWLINE        '\n'           
344,12-344,16:      NAME           'blob'         
344,17-344,18:      OP             '='            
344,19-344,24:      NAME           'parts'        
344,24-344,25:      OP             '['            
344,25-344,26:      OP             '-'            
344,26-344,27:      NUMBER         '1'            
344,27-344,28:      OP             ']'            
344,28-344,29:      NEWLINE        '\n'           
345,8-345,8:        DEDENT         ''             
345,8-345,12:       NAME           'elif'         
345,13-345,16:      NAME           'len'          
345,16-345,17:      OP             '('            
345,17-345,22:      NAME           'parts'        
345,22-345,23:      OP             ')'            
345,24-345,26:      OP             '=='           
345,27-345,28:      NUMBER         '2'            
345,28-345,29:      OP             ':'            
345,29-345,30:      NEWLINE        '\n'           
346,0-346,12:       INDENT         '            ' 
346,12-346,20:      NAME           'identity'     
346,21-346,22:      OP             '='            
346,23-346,28:      NAME           'parts'        
346,28-346,29:      OP             '['            
346,29-346,30:      NUMBER         '0'            
346,30-346,31:      OP             ':'            
346,31-346,32:      OP             '-'            
346,32-346,33:      NUMBER         '1'            
346,33-346,34:      OP             ']'            
346,34-346,35:      NEWLINE        '\n'           
347,12-347,16:      NAME           'blob'         
347,17-347,18:      OP             '='            
347,19-347,24:      NAME           'parts'        
347,24-347,25:      OP             '['            
347,25-347,26:      OP             '-'            
347,26-347,27:      NUMBER         '1'            
347,27-347,28:      OP             ']'            
347,28-347,29:      NEWLINE        '\n'           
348,8-348,8:        DEDENT         ''             
348,8-348,12:       NAME           'else'         
348,12-348,13:      OP             ':'            
348,13-348,14:      NEWLINE        '\n'           
349,0-349,12:       INDENT         '            ' 
349,12-349,20:      NAME           'identity'     
349,21-349,22:      OP             '='            
349,23-349,27:      NAME           'None'         
349,27-349,28:      NEWLINE        '\n'           
350,12-350,16:      NAME           'blob'         
350,17-350,18:      OP             '='            
350,19-350,24:      NAME           'parts'        
350,24-350,25:      OP             '['            
350,25-350,26:      NUMBER         '0'            
350,26-350,27:      OP             ']'            
350,27-350,28:      NEWLINE        '\n'           
351,8-351,8:        DEDENT         ''             
351,8-351,13:       NAME           'event'        
351,14-351,15:      OP             '='            
351,16-351,21:      NAME           'Event'        
351,21-351,22:      OP             '.'            
351,22-351,28:      NAME           'unpack'       
351,28-351,29:      OP             '('            
351,29-351,51:      NAME           'get_pyzmq_frame_buffer'
351,51-351,52:      OP             '('            
351,52-351,56:      NAME           'blob'         
351,56-351,57:      OP             ')'            
351,57-351,58:      OP             ')'            
351,58-351,59:      NEWLINE        '\n'           
352,8-352,13:       NAME           'event'        
352,13-352,14:      OP             '.'            
352,14-352,22:      NAME           'identity'     
352,23-352,24:      OP             '='            
352,25-352,33:      NAME           'identity'     
352,33-352,34:      NEWLINE        '\n'           
353,8-353,10:       NAME           'if'           
353,11-353,15:      NAME           'self'         
353,15-353,16:      OP             '.'            
353,16-353,22:      NAME           '_debug'       
353,22-353,23:      OP             ':'            
353,23-353,24:      NEWLINE        '\n'           
354,0-354,12:       INDENT         '            ' 
354,12-354,18:      NAME           'logger'       
354,18-354,19:      OP             '.'            
354,19-354,24:      NAME           'debug'        
354,24-354,25:      OP             '('            
354,25-354,33:      STRING         "'<-- %s'"     
354,33-354,34:      OP             ','            
354,35-354,40:      NAME           'event'        
354,40-354,41:      OP             ')'            
354,41-354,42:      NEWLINE        '\n'           
355,8-355,8:        DEDENT         ''             
355,8-355,14:       NAME           'return'       
355,15-355,20:      NAME           'event'        
355,20-355,21:      NEWLINE        '\n'           
356,0-356,1:        NL             '\n'           
357,4-357,4:        DEDENT         ''             
357,4-357,7:        NAME           'def'          
357,8-357,18:       NAME           'setsockopt'   
357,18-357,19:      OP             '('            
357,19-357,23:      NAME           'self'         
357,23-357,24:      OP             ','            
357,25-357,26:      OP             '*'            
357,26-357,30:      NAME           'args'         
357,30-357,31:      OP             ')'            
357,31-357,32:      OP             ':'            
357,32-357,33:      NEWLINE        '\n'           
358,0-358,8:        INDENT         '        '     
358,8-358,14:       NAME           'return'       
358,15-358,19:      NAME           'self'         
358,19-358,20:      OP             '.'            
358,20-358,27:      NAME           '_socket'      
358,27-358,28:      OP             '.'            
358,28-358,38:      NAME           'setsockopt'   
358,38-358,39:      OP             '('            
358,39-358,40:      OP             '*'            
358,40-358,44:      NAME           'args'         
358,44-358,45:      OP             ')'            
358,45-358,46:      NEWLINE        '\n'           
359,0-359,1:        NL             '\n'           
360,4-360,4:        DEDENT         ''             
360,4-360,5:        OP             '@'            
360,5-360,13:       NAME           'property'     
360,13-360,14:      NEWLINE        '\n'           
361,4-361,7:        NAME           'def'          
361,8-361,15:       NAME           'context'      
361,15-361,16:      OP             '('            
361,16-361,20:      NAME           'self'         
361,20-361,21:      OP             ')'            
361,21-361,22:      OP             ':'            
361,22-361,23:      NEWLINE        '\n'           
362,0-362,8:        INDENT         '        '     
362,8-362,14:       NAME           'return'       
362,15-362,19:      NAME           'self'         
362,19-362,20:      OP             '.'            
362,20-362,28:      NAME           '_context'     
362,28-362,29:      NEWLINE        '\n'           
363,0-363,0:        DEDENT         ''             
363,0-363,0:        DEDENT         ''             
363,0-363,0:        ENDMARKER      ''             
