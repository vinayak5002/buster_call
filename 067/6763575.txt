#!/usr/bin/env pypy3
from collections import Counter, deque, defaultdict
from itertools import permutations, combinations, accumulate, product, chain
from functools import lru_cache
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heapify, heappush, heappop
from array import array
from decimal import Decimal
from copy import deepcopy
from pprint import pprint
from string import ascii_uppercase, ascii_lowercase, ascii_letters
from math import factorial, floor, ceil, sqrt, log, log2, log10
from math import sin, cos, tan, asin, acos, atan, degrees, radians
import math
import sys
sys.setrecursionlimit(1<<30)

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

if __name__ == '__main__':

    while True:
        N = int(readline())
        if N == 0:
            break
        A = [list(map(int, readline().split())) for _ in range(N)][::-1]
        score = 0
        flag = True
        while flag:
            flag = False
            for i in range(N):
                cur = 0
                cnt = 1
                for j in range(1, 5):
                    a = A[i][j]
                    if a == A[i][cur]:
                        cnt +=1
                    else:
                        if cnt >= 3:
                            break
                        else:
                            cur = j
                            cnt = 1
                if A[i][cur] == 0:
                    break
                if cnt >= 3:
                    flag = True
                    score += A[i][cur] * cnt
                    for j in range(cur, cur+cnt):
                        A[i][j] = 0
            zA = list(zip(*A))
            nA = [[0] * N for _ in range(5)]
            for i in range(5):
                cnt = 0
                for j in range(N):
                    if zA[i][j] != 0:
                        nA[i][cnt] = zA[i][j]
                        cnt += 1
            A = [list(s) for s in list(zip(*nA))]
        print(score)

