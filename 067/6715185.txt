#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return true; } return false; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return true; } return false; }
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define mp make_pair
#define si(x) int(x.size())
const int mod=998244353,MAX=1005,INF=1<<30;

int main(){
    
    std::ifstream in("text.txt");
    std::cin.rdbuf(in.rdbuf());
    cin.tie(0);
    ios::sync_with_stdio(false);
    
    while(1){
        int N;cin>>N;
        if(N==0) break;
        vector<int> L(N),R(N);
        for(int i=0;i<N;i++) cin>>L[i]>>R[i];
        map<int,ll> MA;
        if(L[0]/10==R[0]/10){
            if(L[0]<10){
                MA[(1<<3)]=R[0]-L[0]+1;
            }else{
                MA[(1<<0)]=1;
            }
        }else{
            for(int x=1;x<10;x++){
                int nex=0;
                if(L[0]/10==0){
                    if(L[0]%10<=x) nex|=(1<<3);
                    if(L[0]/10<x&&x<R[0]/10) nex|=(1<<2);
                    if(R[0]/10==x) nex|=(1<<1);
                }else{
                    if(L[0]/10==x) nex|=(1<<0);
                    if(L[0]/10<x&&x<R[0]/10) nex|=(1<<2);
                    if(R[0]/10==x) nex|=(1<<1);
                }
                if(nex) MA[nex]++;
            }
        }
        //for(auto x:MA) cout<<x.fi<<" "<<x.se<<endl;
        ll ans=0;
        
        for(int t=0;t<2*N;t++){
            map<int,ll> NE;
            for(auto a:MA){
                int bit=a.fi;
                
                for(int x=0;x<10;x++){
                    int nex=0;
                    for(int i=0;i<N;i++){
                        if(bit>>(4*i)&1){
                            if(L[i]/10==R[i]/10){
                                if(L[i]%10<=x&&x<=R[i]%10){
                                    nex|=(1<<(4*i+3));
                                }
                            }else{
                                if(L[i]%10<=x){
                                    nex|=(1<<(4*i+3));
                                }
                            }
                        }
                        if(bit>>(4*i+1)&1){
                            if(x<=R[i]%10){
                                nex|=(1<<(4*i+3));
                            }
                        }
                        if(bit>>(4*i+2)&1){
                            nex|=(1<<(4*i+3));
                        }
                        if(bit>>(4*i+3)&1){
                            if(i<N-1){
                                if(L[i+1]/10==R[i+1]/10){
                                    if(L[i+1]<10){
                                        if(L[i+1]%10<=x&&x<=R[i+1]%10) nex|=(1<<(4*(i+1)+3));
                                    }else{
                                        if(L[i+1]/10==x) nex|=(1<<(4*(i+1)));
                                    }
                                }else{
                                    if(L[i+1]/10==0){
                                        if(L[i+1]%10<=x) nex|=(1<<(4*(i+1)+3));
                                        if(L[i+1]/10<x&&x<R[i+1]/10) nex|=(1<<(4*(i+1)+2));
                                        if(R[i+1]/10==x) nex|=(1<<(4*(i+1)+1));
                                    }else{
                                        if(L[i+1]/10==x) nex|=(1<<(4*(i+1)));
                                        if(L[i+1]/10<x&&x<R[i+1]/10) nex|=(1<<(4*(i+1)+2));
                                        if(R[i+1]/10==x) nex|=(1<<(4*(i+1)+1));
                                    }
                                }
                            }
                        }
                    }
                    
                    if(nex) NE[nex]+=a.se;
                }
                
                if(bit>>(4*N-1)&1) ans+=a.se;
            }
            
            swap(MA,NE);
        }
        
        cout<<ans<<"\n";
    }
}

