//C program for Binary search 
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
 
int main()
{
  //First array 
  int num_1Array, num_2Array,total_target = 0,temp;
  scanf("%d",&num_1Array);
  int TOP = 0, MID, BOTTOM = num_1Array;
  if (num_1Array < 0 || num_1Array >= 100001)
    {
      printf("Input error \n ");
      return EXIT_FAILURE;      
    }
  int Array1[num_1Array];
  for(int i = 0; i < num_1Array ; i++)
    {
      int value_read = scanf("%d", &Array1[i]);
      if (value_read != 1)
        {
          printf("Input error %d \n ", i);
          return EXIT_FAILURE;
        }
      if (Array1[i] < 0 || Array1[i] > pow(10,9))
        {
          printf("input exceed range from 0-10^9");
          return EXIT_FAILURE;
        }
    }
  //Second array --> changed to variable for easier navigation 
  scanf("%d",&num_2Array);
  if (num_2Array < 0 || num_2Array >= 50001)
    {
      printf("Input error \n ");
      return EXIT_FAILURE;      
    }
  int Array2;
  for(int j = 0; j < num_2Array ; j++)
    {
      int value_read = scanf("%d", &Array2);
      if (value_read != 1)
        {
          printf("Input error %d \n ", j);
          return EXIT_FAILURE;
        }
      if (Array2 < 0 || Array2 > pow(10,9))
        {
          printf("input exceed range from 0-10^9");
          return EXIT_FAILURE;
        }
  //Binary searching array1 and array2(variable)    
      while (TOP < BOTTOM)
        {
          MID = (BOTTOM + TOP) / 2;
          if (Array2 > Array1[MID])
            {
              TOP = MID + 1;
            }
          else
            {
              if (Array2 < Array1[MID])
                {
                  BOTTOM = MID;
                }
              else
                {
                  total_target++;
                  break;
                }
            }
        }
    }  
  printf("%d",total_target);
  printf("\n");
  return EXIT_SUCCESS; 
}
