#include <iostream>
using namespace std;

// From から to にコピー
void copy_array(int *to, int *from, int n)
{
    for (int i = 0; i < n; i++)
	to[i] = from[i];
}

// 配列に改行を付加して印字
void print_array(int A[], int n)
{
    for (int i = 0; i < n - 1; i++) 
	cout << A[i] << " ";
    cout << A[n-1] << endl;
}

// A[0]<...<A[n1-1], A[n1]<...<A[n1+n2-1] を合併して昇順に並べる
// 比較数を返す
int merge(int A[], int n1, int n2)
{
    int A1[n1];
    int A2[n2];
    copy_array(A1, A, n1);
    copy_array(A2, A + n1, n2);
    int cnt = 0;
    for (int i1 = 0, i2 = 0; i1 < n1 || i2 < n2; ) {
	cnt++;
	if (A1[i1] <= A2[i2]) {
	    A[i1 + i2] = A1[i1];
	    i1++;
	} else {
	    A[i1 + i2] = A2[i2];
	    i2++;
	}
    }

    return cnt;   // cnt = n1 + n2
}

// マージ・ソート。 比較数を返す。
int mergeSort(int A[], int n)
{
    if (n == 1)
	return 0;

    int n1 = n/2;
    int n2 = n - n1;
    int cnt1 = mergeSort(A, n1);
    int cnt2 = mergeSort(A + n1, n2);
    int cnt3 = merge(A, n1, n2);

    return cnt1 + cnt2 + cnt3;
}

int main()
{
    int n; 
    cin >> n;
    int A[n];
    for (int i = 0; i < n; i++)
	cin >> A[i];

    int cnt = mergeSort(A, n);
    print_array(A, n);
    cout << cnt << endl;
    return 0;
}


