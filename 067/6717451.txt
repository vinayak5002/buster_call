#include <iostream>
#include <stdio.h>
#include <limits>
#include <queue>

#define MAX 101

using namespace std;

int M[MAX][MAX],d[MAX];
int n;

void bfs(int s) {
	queue<int> Q;
	Q.push(s);

	for (int i = 0; i < n; i++) {
		d[n] = numeric_limits<int>::infinity();
	}
	d[s] = 0;

	int u;
	while (!Q.empty()) {
		u = Q.front();
		Q.pop();
		for (int v = 0; v < n; v++) {
			if (M[u][v] == 0)continue;
			if (d[v] != numeric_limits<int>::infinity())continue;
			d[v] = d[u] + 1;
			Q.push(v);
		}
	}
	for (int i = 0; i < n; i++) {
		if (i == 0) {
			cout << i + 1 << " " << d[i] << endl;
		}
		else {
			cout << i + 1 << " " << ((d[i] == numeric_limits<int>::infinity() ? (-1) : d[i])) << endl;
		}
	}

}

int main() {

	int u,k,v;

	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			M[i][j] = 0;
		}
	}

	for (int i = 0; i < n; i++) {
		scanf("%d" "%d", &u, &k);
		u--;
		for (int j = 0; j < k; j++) {
			scanf("%d", &v);
			v--;
			M[u][v] = 1;
		}
	}



	bfs(0);

	return 0;
}
