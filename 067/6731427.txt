#include<bits/stdc++.h>
#define int ll
#define rep(i, N) for(int i = 0; i < (int)N; ++i)
#define rep1(i, N) for(int i = 1; i <= (int)N; ++i)
#define per(i, N) for(int i = N-1; i >= 0; --i)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define bit(n, k) ((n) >> k)
#define pcnt(n) (__builtin_popcount(n))
#define TakAo(ans) ans ? cout << "Takahashi\n" : cout << "Aoki\n"
#define YesNo(ans) ans ? cout << "Yes\n" : cout << "No\n"
#define endl '\n'
#define fi first
#define se second
#define mkpr make_pair
#define mktpl make_tuple
#define eb emplace_back

using namespace std;
using ll = int64_t;
using ull = uint64_t;
using ld = long double;
using point = struct{ ll x, y; };
using State = string::const_iterator;
template<class T> using max_heap = priority_queue<T>;
template<class T> using min_heap = priority_queue<T, vector<T>, greater<T>>;
template<class T> using vec = vector<T>;
template<class T> using vvec = vec<vec<T>>;
template<class T> using vvvec = vec<vvec<T>>;
template<class T> using vvvvec = vvec<vvec<T>>;

constexpr ld EPS = 1e-10;
constexpr int INF = 1001001001;
constexpr ll LINF = 1001001001001001001ll;
constexpr ll MOD = (0) ? 998244353 : 1e9+7;
constexpr int NIL = -1;
constexpr int pm[2] = {1, -1};
constexpr int dy[4] = {0, 1, 0, -1};
constexpr int dx[4] = {1, 0, -1, 0};

ll cel(ll a, ll b){ return (a + b - 1) / b;}
ll Gcd(ll a, ll b){ return b ? Gcd(b, a % b) : abs(a);}
template<class T> T powi(T x, ll exp){
    return exp > 0 ? (exp & 1 ? x : 1) * powi(x * x, exp >> 1) : 1;
}
ll modpow(ll x, ll exp, ll mod){
    x %= mod;
    return exp > 0 ? (exp & 1 ? x : 1) * modpow(x * x, exp >> 1, mod) % mod : 1;
}
template<class T> bool chmin(T &a, T b){ return a > b ? (a = b, true) : 0;}
template<class T>bool chmax(T &a, T b){ return a < b ? (a = b, true) : 0;}

using Pair = pair<int, int>;
using Tpl = tuple<int, int, int>;

void Main(){
    while(1){
        ll W, H, v, t, x, y, p, q;
        cin >> W >> H >> v >> t >> x >> y >> p >> q;

        ll ans = 0;
        ll X[4] = {p, -p, -p, p};
        ll Y[4] = {q, q, -q, -q};

        ll k, yu, yd;
        ll vt2 = v * t * v * t;

        rep(i, 4){
            ll L, R, mid;

            for(k = 0;; k++){
                ll valx2 = X[i] - x + 2 * W * k;
                valx2 = abs(valx2);
                if(valx2 > v * t) break;
                valx2 = valx2 * valx2;

                L = 0, R = 1e9;
                while(L < R - 1){
                    mid = (L + R) / 2;
                    ll valy = Y[i] - y + 2 * H * mid;
                    valy = abs(valy);
                    if(valy > v * t) R = mid;
                    else if(valx2 + valy * valy <= vt2) L = mid;
                    else R = mid;
                }
                yu = L;
                L = 0, R = 1e9;
                while(L < R - 1){
                    mid = (L + R) / 2;
                    ll valy = Y[i] - y + 2 * H * (-mid);
                    valy = abs(valy);
                    if(valy > v * t) R = mid;
                    else if(valx2 + valy * valy <= vt2) L = mid;
                    else R = mid;
                }
                yd = -L;

                if(yu == yd){
                    int cnt = 0;
                    rep(j, 5){
                        ll valy = Y[i] - y + 2 * H * (2 - j);
                        valy = abs(valy);
                        if(valy > v * t){
                            cnt++; continue;
                        }
                        if(valx2 + valy * valy > vt2){
                            cnt++; continue;
                        }
                    }
                    if(cnt == 5) break;
                }

                ans += yu - yd + 1;
                //cout << yu << " " << yd << " | ";
            }

            for(k = -1;; k--){
                ll valx2 = X[i] - x + 2 * W * k;
                valx2 = abs(valx2);
                if(valx2 > v * t) break;
                valx2 = valx2 * valx2;

                L = 0, R = 1e9;
                while(L < R - 1){
                    mid = (L + R) / 2;
                    ll valy = Y[i] - y + 2 * H * mid;
                    valy = abs(valy);
                    if(valy > v * t) R = mid;
                    else if(valx2 + valy * valy <= vt2) L = mid;
                    else R = mid;
                }
                yu = L;
                L = 0, R = 1e9;
                while(L < R - 1){
                    mid = (L + R) / 2;
                    ll valy = Y[i] - y + 2 * H * (-mid);
                    valy = abs(valy);
                    if(valy > v * t) R = mid;
                    else if(valx2 + valy * valy <= vt2) L = mid;
                    else R = mid;
                }
                yd = -L;

                if(yu == yd){
                    int cnt = 0;
                    rep(j, 5){
                        ll valy = Y[i] - y + 2 * H * (2 - j);
                        valy = abs(valy);
                        if(valy > v * t){
                            cnt++; continue;
                        }
                        if(valx2 + valy * valy > vt2){
                            cnt++; continue;
                        }
                    }
                    if(cnt == 5) break;
                }

                ans += yu - yd + 1;
                //cout << yu << " " << yd << " | ";
            }
        }

        cout << ans << endl;
        break;
    }
}
 
signed main(){
    cin.tie(nullptr);
    ios_base::sync_with_stdio(false);
    cout << fixed << setprecision(10);
    Main();
    return 0;
}
