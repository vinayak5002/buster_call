#include <bits/stdc++.h>
using namespace std;

set<char> bo;

string make(string s) {
    string res;
    res += s.front();
    for (int i = 0 ; i < s.size() ; i++) {
        if (bo.count(s[i]) and i + 1 < s.size()) res += s[i + 1];
    }

    return res;
}

int solve(int n) {
    vector<string> codes(n);
    int maxsize = 0;
    for (int i = 0 ; i < n ; i++) {
        string s; cin >> s;
        codes[i] = make(s);
        maxsize = max(maxsize, (int)codes[i].size());
        // cout << codes[i] << endl;
    }

    int res = -1;
    for (int i = maxsize ; i >= 1 ; i--) {
        set<string> st;
        for (auto s : codes) st.emplace(s.substr(0, min((int)s.size(), i)));
        if (st.size() == n) res = i;
        // if (st.size() == n) for (auto s : codes) cout << s.substr(0, min((int)s.size(), i)) << endl;
        // cout << endl;
    }

    return res;
}

int main() {
    bo.insert('a'); bo.insert('i'); bo.insert('u'); bo.insert('e'); bo.insert('o');
    while(1) {
        int n; cin >> n;
        if (!n) break;
        cout << solve(n) << endl;
    }
}

