#include <bits/stdc++.h>
////#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    

    while(1){
        ll N;
        cin>>N;
        if(N==0)return 0;
        vector<set<ll>> S(N);
        rep(i,N){
            ll M;
            cin>>M;
            S[i].insert(i+1);
            rep(j,M){
                ll A;
                cin>>A;
                S[i].insert(A);
            }
        }
        vector<ll> C(N,0);
        ll K;
        cin>>K;
        rep(k,K){
            ll P;
            cin>>P;
            rep(n,N){
                C[n]+=S[n].count(P);
            }
        }    
        ll an=-1;
        rep(i,N){
            if(C[i]==K){
                if(an!=-1){
                    an=-2;
                }
                else{
                    an=i+1;
                }
            }
        }
        cout<<(an<0?-1:an)<<endl;
    }
    

}

