#include <iostream> // cout, endl, cin
#include <string> // string, to_string, stoi
#include <vector> // vector
#include <algorithm> // min, max, swap, sort, reverse, lower_bound, upper_bound
#include <utility> // pair, make_pair
#include <tuple> // tuple, make_tuple
#include <cstdint> // int64_t, int*_t
#include <cstdio> // printf
#include <map> // map
#include <queue> // queue, priority_queue
#include <set> // set
#include <stack> // stack
#include <deque> // deque
#include <unordered_map> // unordered_map
#include <unordered_set> // unordered_set
#include <bitset> // bitset
#include <cctype> // isupper, islower, isdigit, toupper, tolower
#include <iomanip>
#include <climits>
#include <cmath>
#include <functional>
#include <numeric>
#include <array>
#include <regex>

//#include<atcoder/modint>
//using namespace atcoder;

#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define rep1(i, n) for (int i = 1; i <= (int)(n); i++)
#define repl(i,l,r) for (int i = l; i < (int)(r); i++)
#define all(a) a.begin(),a.end()
#define Pii pair<int,int>
#define Pll pair<long,long>
#define INFi 1000000001
#define INFl 1000000000000000001
#define ll long long
using namespace std;


struct edge{long to,cost,k;};

template<class T> inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template<class T> inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}

template<class T> void printArray(vector<T>&A){
    for(T&a:A){
        cout<<a<<" ";
    }
    cout<<endl;
}
template<class T> void printArrayln(vector<T>&A){
    for(T&a:A){
        cout<<a<<endl;
    }
}


template<class T1,class T2> std::ostream &operator<<(std::ostream &out, const pair<T1,T2> &A){
    cout<<"{"<<A.first<<","<<A.second<<"}";
    return out;
}

template<class T> std::ostream &operator<<(std::ostream &out, const vector<T> &A){
    for(const T &a:A){
        cout<<a<<" ";
    }
    return out;
}

int digitsSum(const string S){
    int s=0;
    for(const char&c:S)s+=c-'0';
    return s;
}


template<class T>
void zip(vector<T>&A,vector<pair<T,int>>&R){
    R.clear();
    if(A.size()==0)return;
    R.push_back({A[0],1});
    for(int i=1;i<A.size();i++){
        if(A[i]==A[i-1]){
            R.back().second++;
        }else{
            R.push_back({A[i],1});
        }
    }
}

//long型気をつけて
void szip(string S,vector<char>&A,vector<long>&C){
    A.clear();
    C.clear();
    if(S=="")return;
    A.push_back(S[0]);
    C.push_back(1);
    for(int i=1;i<S.size();i++){
        if(S[i]==S[i-1]){
            C.back()++;
        }else{
            A.push_back(S[i]);
            C.push_back(1);
        }
    }
}


map<long,long> mp;

bool solve(){
    long N;cin>>N;
    if(N==0)return false;
    bool prime=true;
    for(long i=2;i*i<=N;i++){
        if(N%i==0)prime=false;
    }
    if(prime){
        cout<<N+2<<endl;
        return true;
    }
    if(mp.count(N)){
        cout<<mp[N]<<endl;
        return true;
    }
    long m = INFl;
    bool find=false;
    long a=1;
    while(a*a*a<N)a++;
    for(;a>=1;a--){
        if(N%a==0){
            long b=1;
            while(b*b<N/a)b++;
            for(;b>=1;b--){
                if((N/a)%b==0){
                    long c = N/a/b;
                    m=a+b+c;
                    find=true;
                }
                if(find)break;
            }
        }
        if(find)break;
    }
    mp[N]=m;
    cout<<m<<endl;
    return true;
}

int main(void){
    while(solve());
}


