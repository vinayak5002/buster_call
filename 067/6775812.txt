#include<stdio.h>
#include<stdbool.h>

struct Card
{
	char suit;   //トランプの絵柄//
	char value;  //トランプの数字//
};

//バブルソート//
void bubbleSort( struct Card A[], int N )
{
	int i, j;
	struct Card temp;
	
	for( i = 0; i < N; i++ )
	{
		for( j = N-1; j >= i + 1; j-- )
		{
			if( A[j].value < A[j-1].value )
			{
				temp = A[j];
				A[j] = A[j-1];
				A[j-1] = temp;
			}
		}
	}
}

//選択ソート//
void selectionSort( struct Card A[], int N )
{
	int i, j, min;
	struct Card temp;
	
	for( i = 0; i < N; i++ )
	{
		min = i;
		for( j = i; j < N; j++ )
		{
			if( A[j].value < A[min].value )
			{
				min = j;
			}
		}
		temp = A[i];
		A[i] = A[min];
		A[min] = temp;
	}
}

//出力//
void print( struct Card A[], int N )
{
	int i;
	
	for( i = 0; i < N-1; i++ )
	{
		printf( "%c%c ", A[i].suit, A[i].value );
	}
	printf( "%c%c\n", A[N-1].suit, A[N-1].value );
	
}

//バブルソート選択ソートの比較//
bool isStable( struct Card C1[], struct Card C2[], int N )
{
	int i;
	
	for( i = 0; i < N; i++ )
	{
		if( C1[i].suit != C2[i].suit )
		{
			return 0;
		}
	}
	return 1;
}

int main( void )
{
	struct Card C1[100], C2[100];
	int i, N;
	
	scanf( "%d", &N );
	
	for( i = 0; i < N; i++ )
	{
		scanf( " %c %c", &C1[i].suit, &C1[i].value );
	}
	
	for( i = 0; i < N; i++ )
	{
		C2[i] = C1[i];
	}
	
	bubbleSort(C1, N);
	selectionSort(C2, N);
	
	print(C1, N);
	
	printf( "Stable\n" );
	
	print(C2, N);
	
	if( isStable(C1, C2, N) )
	{
		printf( "Stable\n" );
	}
	else
	{
		printf( "Not stable\n" );
	}
	
	return 0;
}

