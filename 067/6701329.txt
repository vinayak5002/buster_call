#include <bits/stdc++.h>
using namespace std ;
#define MAX 100000
#define NIL -2000000002
int n;
vector<int> hp; 

int get_key (int id) {
    return hp[id];
}

int get_parent(int id){
    int id_p = id / 2 ; //何も書かないでもfloorになる。
    if ( id_p > 0 ) {return get_key(id_p);} 
    else {return NIL;}
}

int get_left(int id){
    int id_p = id * 2 ; //何も書かないでもfloorになる。
    if ( id_p < hp.size() ) {return get_key(id_p);} 
    else {return NIL;}
}

int get_right(int id){
    int id_p = id * 2 + 1 ; //何も書かないでもfloorになる。
    if ( id_p < hp.size() ) {return get_key(id_p);} 
    else {return NIL;}
}


int main() {
    int c;
	scanf("%d",&n);
	hp.push_back(NIL); //0番にNILを入れておく。
	for (int i=0; i < n ; i++ ) {
		cin >> c ;
        hp.push_back(c);
    }	

	for (int i=1; i <= n ; i++ ) {
        int k = get_key(i);
        int p = get_parent(i);
        int l = get_left(i);
        int r = get_right(i);
        cout << "node " << i << ": key = " << k << ", " ;
        if ( p != NIL) {
            cout << "parent key = " << p << ", " ;
        }
        if ( l != NIL) {
            cout << "left key = " << l << ", " ;
        }
        if ( r != NIL) {
            cout << "right key = " << r << ", " ;
        }
        cout << endl;
    }	

    //cout << hp.size() << endl;
	return 0 ;
}

