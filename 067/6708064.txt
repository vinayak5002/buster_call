//  9_B:最大ヒープ

#include <stdio.h>

int H,largest;

int left(int i){
    return i*2;
}

int right(int i){
    return i*2+1;
}

void maxHeapify(int A[],int i){
    int l = left(i);
    int r = right(i);
    
    if(l<=H && A[l]>A[i])
        largest = l;
    else
        largest = i;
    if(r<=H && A[r]>A[largest])
        largest = r;
    
    if(largest != i){
        int t=A[i]; A[i]=A[largest]; A[largest]=t;
        maxHeapify(A, largest);
    }
        
}

void buildMaxHeap(int A[]){
    for(int i=H/2;i>=1;i--)
        maxHeapify(A, i);
}


int main() {
    int A[500000];
    scanf("%d",&H);
    for(int i=1; i<=H; i++)
        scanf("%d",&A[i]);
    
    buildMaxHeap(A);
    
    for(int i=1;i<H;i++)
        printf(" %d",A[i]);
    printf(" %d\n",A[H]);
    
    return 0;
}

