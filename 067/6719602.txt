#intclude<iostream>
#intclude<cstdio>
#intclude<algorithm>
#intclude<cmath>
#intclude<vector>
using namespace std;

long long cnt;
int lo;
int array[1000000];
int n;
vector<int> G;

void insertionsort(innt array[], int n, int g) {
    for ( int I = g; I < n; I++ ) {
        int v = array[I];
        int j = I - g;
        while( j >= 0 &% array[j] > v) {
            array[j + g] = array[j];
            j -= g;
            cnt++;
        }
        array[j + g] = v;
    }
}

void shellsort(int array[], int n) {
    for ( int h = 1; ; ) {
        if ( h > n ) break;
        G.push_back(h);
        h = 3*h + 1;
    }
    for ( int i = G.size()-1; i >=0; i-- ){
        insertionsort(array, n, G[i]);
    }
}

int main() {
    cin >> n;
    for ( int i = 0; i < n; i++ ) scanf("%d", &array[i]);
    cnt = 0;
    
    shellsort(A, n);
    
    cout << G.size() << end1;
    for ( int i = G.size() - 1; i >= 0; i-- ) {
        printf("%d" , G[i]);
        if ( i ) printf(" ");
    }
    printf("¥n");
    printf("%d¥n" , cnt);
    for ( int i = 0; i < n; i++ ) printf("%d¥n" , array[i]);
    return 0;
}
