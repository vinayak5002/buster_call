import math

#n = int(input())
n = 2

def coho(p1, p2, ind):

	## シータを求める
	#i = math.atan2(p1[0]-p2[0]/p1[1]-p2[1])
	#i = math.atan2(abs(p1[1]-p2[1]), abs(p1[0]-p2[0]))
	i = math.atan((p2[1]-p1[1])/(p2[0]-p1[0]))

	s = ((p2[0]-p1[0])/3 + p1[0], (p2[1]-p1[1])/3 + p1[1])
	t = ((p2[0]-p1[0])*2/3 + p1[0], (p2[1]-p1[1])*2/3 + p1[1])

	halflength = (math.sqrt((abs(p1[0]-p2[0])/2)**2 + (abs(p1[1]-p2[1])/2)**2)) * 2 / math.sqrt(3)
	u = (halflength * math.cos(i+math.pi/6) + p1[0], halflength * math.sin(i+math.pi/6) + p1[1])	

	#p = (abs(p1[0]-p2[0])- abs(p1[0]-p2[0])/(math.sqrt(3)), abs(p1[1]-p2[1])*2 + p1[1])
	#u = (abs(p1[0]-p[0])/2 + p1[0], abs(p1[1]-p[1])/2 + p1[1])

	if ind == n:
		print(p1[0], p1[1])
		print(s[0], s[1])
		print(u[0], u[1])
		print(t[0], t[1])

		#print("i;" + str(i))

	else:
		coho(p1, s, ind+1)
		coho(s, u, ind+1)
		coho(u, t, ind+1)
		coho(t, p2, ind+1)

p1 = (0, 0)
p2 = (100, 0)

coho(p1, p2, 1)
print(p2[0], p2[1])

