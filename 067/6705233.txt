#include <bits/stdc++.h>
using namespace std;
int main(){
  int N;
  cin >> N;
  vector<char> S(N);
  vector<int> V(N);
  for (int i = 0; i < N; i++){
    cin >> S[i] >> V[i];
  }
  vector< vector<char> > O(9, vector<char>(4));
  vector<int> C(9, 0);
  for (int i = 0; i < N; i++){
    O[V[i] - 1][C[V[i] - 1]] = S[i];
    C[V[i] - 1]++;
  }
  vector<char> BS(N);
  vector<int> BV(N);
  for (int i = 0; i < N; i++){
    BS[i] = S[i];
    BV[i] = V[i];
  }
  for (int i = 0; i < N; i++){
    for (int j = N - 1; j > i; j--){
      if (BV[j] < BV[j - 1]){
        swap(BS[j], BS[j - 1]);
        swap(BV[j], BV[j - 1]);
      }
    }
  }
  for (int i = 0; i < N; i++){
    cout << BS[i] << BV[i];
    if (i < N - 1){
      cout << ' ';
    }
  }
  cout << endl;
  bool stable;
  stable = true;
  vector<int> BC(9, 0);
  for (int i = 0; i < N; i++){
    if (O[BV[i] - 1][BC[BV[i] - 1]] != BS[i]){
      stable = false;
    }
    BC[BV[i] - 1]++;
  }
  if (stable){
    cout << "Stable" << endl;
  } else {
    cout << "Not stable" << endl;
  }
  vector<char> SS(N);
  vector<int> SV(N);
  for (int i = 0; i < N; i++){
    SS[i] = S[i];
    SV[i] = V[i];
  }
  for (int i = 0; i < N; i++){
    int m = i;
    for (int j = i; j < N; j++){
      if (SV[j] < SV[m]){
        m = j;
      }
    }
    swap(SS[i], SS[m]);
    swap(SV[i], SV[m]);
  }
  for (int i = 0; i < N; i++){
    cout << SS[i] << SV[i];
    if (i < N - 1){
      cout << ' ';
    }
  }
  cout << endl;
  stable = true;
  vector<int> SC(9, 0);
  for (int i = 0; i < N; i++){
    if (O[SV[i] - 1][SC[SV[i] - 1]] != SS[i]){
      stable = false;
    }
    SC[SV[i] - 1]++
  }
  if (stable){
    cout << "Stable" << endl;
  } else {
    cout << "Not stable" << endl;
  }
}

