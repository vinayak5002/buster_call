# # AOJ 1160 ICPC 2009
import sys
sys.setrecursionlimit(10**7)

def dfs(y, x):
    island[y][x] = 0
    D = [[-1, -1], [-1, 0], [-1, 1],
            [0, -1], [0, 1],
            [1, -1], [1, 0], [1, 1]]
    for d in range(len(D)):
        mx = x + D[d][0]
        my = y + D[d][1]
        if 0 <= mx < w and 0 <= my < h \
            and island[my][mx] == 1:
                dfs(my, mx)
                    

res = []
while True:
    w, h = map(int, input().split())
    if w == 0 and h == 0:
        break
    island = []
    for i in range(h):
        arr = list(map(int, input().split()))
        island.append(arr)
        
    ans = 0
    for i in range(h):
        for j in range(w):
            if island[i][j] == 1:
                dfs(i, j)
                ans += 1
    # print(ans)
    res.append(ans)
      
for data in res:
    print(data)
