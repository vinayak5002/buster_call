from collections import Counter, deque, defaultdict
from itertools import permutations, combinations, accumulate, product, chain
from functools import lru_cache
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heapify, heappush, heappop
from array import array
from decimal import Decimal
from copy import deepcopy
from pprint import pprint
from string import ascii_uppercase, ascii_lowercase, ascii_letters
from math import factorial, floor, ceil, sqrt, log, log2, log10
import math
import sys
sys.setrecursionlimit(1<<30)

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

def prime_factorize(x):
    res = list()
    while x % 2 == 0:
        x //= 2
        res.append(2)
    for i in range(3, ceil(sqrt(x))+1, 2):
        while x % i == 0:
            x //= i
            res.append(i)
    if x != 1:
        res.append(x)
    return res

if __name__ == '__main__':
    N = int(readline())
    print(f'{N}:', *prime_factorize(N))

