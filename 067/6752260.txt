#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ld = long double;
using P = pair<int, int>;
using Graph = vector<vector<ll>>;
using vi = vector<int>;
using vl = vector<long>;
using vll = vector<long long>;
using vvi = vector<vi>;
using vvl = vector<vl>;
using vvll = vector<vll>;
using vs = vector<string>;
using vc = vector<char>;
using vvc = vector<vc>;
using pll = pair<long long, long long>;
using vpll = vector<pll>;
const long double EPS = 1e-18;
const long long INF = 1e18;
const long double PI = acos(-1.0L);
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); i++)
#define rep(i, n) for (ll i = (0); i < (ll)(n); i++)
#define rrep(i, n) for (ll i = (1); i < (ll)(n + 1); i++)
#define repd(i, n) for (ll i = n - 1; i >= 0; i--)
#define rrepd(i, n) for (ll i = n; i >= 1; i--)
#define ALL(n) begin(n), end(n)
#define IN(a, x, b) (a <= x && x < b)
#define INIT                          \
    std::ios::sync_with_stdio(false); \
    std::cin.tie(0);
template <class T>
inline T CHMAX(T& a, const T b) {
    return a = (a < b) ? b : a;
}
template <class T>
inline T CHMIN(T& a, const T b) {
    return a = (a > b) ? b : a;
}

int main() {
    ll N, W;
    cin >> N >> W;
    vll v(N), w(N);
    rep(i, N) { cin >> v[i] >> w[i]; }
    vpll ps(1 << (N / 2));
    ll n2 = N / 2;
    for (ll i = 0; i < (1 << n2); i++) {
        ll sw = 0;
        ll sv = 0;
        rep(j, n2) {
            if (i & (1 << j)) {
                sw += w[j];
                sv += v[j];
            }
        }
        ps[i] = make_pair(sw, sv);
    }
    sort(ALL(ps));
    ll m = 1;
    for (ll i = 1; i < (1 << n2); i++) {
        if (ps[m - 1].second < ps[i].second) {
            ps[m] = ps[i];
            m++;
        }
    }
    ll res = 0;
    for (ll i = 0; i < (1 << (N - n2)); i++) {
        ll sw = 0;
        ll sv = 0;
        rep(j, N - n2) {
            if (i & (1 << j)) {
                sw += w[n2 + j];
                sv += v[n2 + j];
            }
        }
        if (sw <= W) {
            ll tv = (lower_bound(ps.begin(), ps.begin() + m,
                                 make_pair(W - sw, INF)) -
                     1)
                        ->second;
            CHMAX(res, sv + tv);
        }
    }
    cout << res << endl;
}
