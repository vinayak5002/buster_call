#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    while(cin >> n, n){
        int ans = -1;
        vector<array<string,2>> a(n);
        for(int i = 0; i < n; i++){
            cin >> a[i][0] >> a[i][1];
        }
        string from, to;
        cin >> from >> to;
        map<string,int> mp;
        queue<string> nxt;
        mp[from] = 0;
        nxt.push(from);
        auto f = [&](string s, string t, string u){
            string res, res2;
            int tn = t.size();
            for(int i = 0; i < s.size(); i++){
                res += s[i];
                if(res.size() < tn)continue;
                if(res.substr(res.size() - tn, tn) == t){
                    for(int j = 0; j < tn; j++)res.pop_back();
                    res += u;
                    res += "{";
                }
            }
            for(int i = 0; i < res.size(); i++){
                if(res[i] == '{')continue;
                res2 += res[i];
            }
            return res2;
        };
        while(!nxt.empty()){
            string s;
            s = nxt.front();
            nxt.pop();
            if(s.size() > to.size())continue;
            int d = mp[s];
            if(s == to){
                ans = d;
                break;
            }
            for(int i = 0; i < n; i++){
                string t = f(s, a[i][0], a[i][1]);
                if(mp.find(t) == mp.end()){
                    mp[t] = d + 1;
                    nxt.push(t);
                }
            }
        }
        cout << ans << '\n';
    }
}
