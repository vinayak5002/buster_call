const readline = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
});

readline.question('Who are you?', name => {
    console.log(`Hey there ${name}!`);
    readline.close();
});


let newString = "";
let arrayOfStrings = [];

const superFunction = (array) => {
    // console.log(array);
    do {
        // console.log(array, '[',array.length,']');

        const min = Math.min(...array);
        // console.log('min: [',min,']');
        // console.log('minIndex: [',array.indexOf(min),']');
        array = array.map((el, index) => {
            // console.log('map el:',el,'index: ',index); 
            if (array.indexOf(min) == index) {
                return el
            } else {
                return el - min
            }
        })
        // console.log('after minus', array);
        const numberOfZeros = array.filter((el) => {
            // console.log('filter', el); 
            return el === 0 ? true : false
        }).length;
        if (numberOfZeros > 0) {
            for (let i = 0; i < numberOfZeros; i++) {
                // console.log(array[i])
                array.splice(array.indexOf(0), 1)
            }
        }

    } while (array.length != 1)

    return array[0]
}
while (true) {

    readline.on('line', (line) => {
        newString = line;
        if (newString != "0 0 0 0") {
            // console.log(newString.split(' '));
            console.log(superFunction(newString.split(' ').map((el) => {
                return Number(el)
            })));
            // newString.split(' ').test = test.map((el)=>{return Number(el)})
            // arrayOfStrings.push(newString.split(' ').map((el)=>{return Number(el)}));
        } else {
            break;
        }
        readline.close();
    });

}

// console.log(superFunction(arrayOfStrings[0]));
// console.log(superFunction(arrayOfStrings[1]));
// console.log(superFunction(arrayOfStrings[2]));
// console.log(superFunction(arrayOfStrings[3]));
