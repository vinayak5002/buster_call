#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <vector>

int main()
{

    long long INF = 1000000000000000000;
    int V, E, r;
    std::cin >> V >> E >> r;

    std::map<int, std::set<std::pair<long long, int>>> links;

    for (int i = 0; i < E; ++i) {

        int s, t;
        long long d;
        std::cin >> s >> t >> d;
        links[s].insert({d, t});
    }

    std::vector<std::pair<long long, bool>> ans(V, {INF, false});
    std::priority_queue<std::pair<long long, int>> cand;

    ans.at(r) = {0, true};
    for (auto p : links[r]) {
        ans.at(p.second).first = p.first;
        cand.push({-p.first, p.second});
    }

    while (!cand.empty()) {
        auto base = cand.top();
        int v = base.second;
        cand.pop();
        if (ans.at(v).second) {
            continue;
        }
        ans.at(v).second = true;
        for (auto edge : links[v]) {
            int u = edge.second;
            if (!ans.at(u).second && ans.at(u).first > ans.at(v).first + edge.first) {
                ans.at(u).first = ans.at(v).first + edge.first;
                cand.push({-ans.at(u).first, u});
            }
        }
    }

    for (auto a : ans) {
        if (a.second) {
            std::cout << a.first << std::endl;
        } else {
            std::cout << "INF" << std::endl;
        }
    }
}
