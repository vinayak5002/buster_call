#include <iostream>
#include <algorithm>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<list>
using namespace std;
#define rep(i,n) for(int i=0;i<n;++i)

//return i!=n
//線形探索、二分探索はデータ数が増えると検索時間がかかるようになるがハッシュは同じ時間で出来る。


int main() {
	int n; cin >> n;
	string str; int x;
	list<int> lst;
	rep(i, n) {
		cin >> str;
		if (str == "insert") {
			cin >> x;
			lst.push_front(x);
		}
		else if (str == "delete") {
			cin >> x;
			for (list<int>::iterator it = lst.begin(); it != lst.end(); it++) {
				if (*it == x) {
					lst.erase(it);
					break;
				}
			}
		}
		else if (str == "deleteFirst") {
			lst.pop_front();
		}
		else {
			lst.pop_back();
		}
	}
	for (list<int>::iterator it = lst.begin(); it != lst.end(); it++) {
		if(it==--lst.end()) cout<<*it<<endl;
		else cout<<*it<<" ";
	}
	
}
	
