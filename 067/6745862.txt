#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < n; i++)
#define rep2(i, x, n) for (int i = x; i <= n; i++)
#define rep3(i, x, n) for (int i = x; i >= n; i--)
#define each(e, v) for (auto &e : v)
#define pb push_back
#define eb emplace_back
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define sz(x) (int)x.size()
using ll = long long;
using pii = pair<int, int>;
using pil = pair<int, ll>;
using pli = pair<ll, int>;
using pll = pair<ll, ll>;

template <typename T>
bool chmax(T &x, const T &y) {
    return (x < y) ? (x = y, true) : false;
}

template <typename T>
bool chmin(T &x, const T &y) {
    return (x > y) ? (x = y, true) : false;
}

template <typename T>
int flg(T x, int i) {
    return (x >> i) & 1;
}

template <typename T>
void print(const vector<T> &v, T x = 0) {
    int n = v.size();
    for (int i = 0; i < n; i++) cout << v[i] + x << (i == n - 1 ? '\n' : ' ');
    if (v.empty()) cout << '\n';
}

template <typename T>
void printn(const vector<T> &v, T x = 0) {
    int n = v.size();
    for (int i = 0; i < n; i++) cout << v[i] + x << '\n';
}

template <typename T>
int lb(const vector<T> &v, T x) {
    return lower_bound(begin(v), end(v), x) - begin(v);
}

template <typename T>
int ub(const vector<T> &v, T x) {
    return upper_bound(begin(v), end(v), x) - begin(v);
}

template <typename T>
void rearrange(vector<T> &v) {
    sort(begin(v), end(v));
    v.erase(unique(begin(v), end(v)), end(v));
}

template <typename T>
vector<int> id_sort(const vector<T> &v, bool greater = false) {
    int n = v.size();
    vector<int> ret(n);
    iota(begin(ret), end(ret), 0);
    sort(begin(ret), end(ret), [&](int i, int j) { return greater ? v[i] > v[j] : v[i] < v[j]; });
    return ret;
}

template <typename S, typename T>
pair<S, T> operator+(const pair<S, T> &p, const pair<S, T> &q) {
    return make_pair(p.first + q.first, p.second + q.second);
}

template <typename S, typename T>
pair<S, T> operator-(const pair<S, T> &p, const pair<S, T> &q) {
    return make_pair(p.first - q.first, p.second - q.second);
}

template <typename S, typename T>
istream &operator>>(istream &is, pair<S, T> &p) {
    S a;
    T b;
    is >> a >> b;
    p = make_pair(a, b);
    return is;
}

template <typename S, typename T>
ostream &operator<<(ostream &os, const pair<S, T> &p) {
    return os << p.first << ' ' << p.second;
}

struct io_setup {
    io_setup() {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout << fixed << setprecision(15);
    }
} io_setup;

const int inf = (1 << 30) - 1;
const ll INF = (1LL << 60) - 1;
const int MOD = 1000000007;
// const int MOD = 998244353;

int main() {
    string S;
    cin >> S;
    int N = sz(S);

    vector<int> v(N);
    rep(i, N) v[i] = S[i] - '0';

    vector<vector<int>> dp(N + 1, vector<int>(N + 1, inf));
    vector<vector<pii>> pre1(N + 1, vector<pii>(N + 1, pii(-1, -1))), pre2(N + 1, vector<pii>(N + 1, pii(-1, -1)));
    dp[0][0] = 0;

    rep(i, N + 1) rep(j, N + 1) {
        rep(s, 10) rep(t, 10) {
            int pi, pj;
            {
                int a = s, l = t;
                if (a == 0) {
                    if (i == 0) continue;
                    pi = i - 1;
                    if (v[N - i] != l) continue;
                } else {
                    if (i < l) continue;
                    pi = i - l;
                    if (N - i - a < 0) continue;
                    if (S.substr(N - i - a, l) != S.substr(N - i, l)) continue;
                }
            }
            {
                int a = t, l = s;
                if (a == 0) {
                    if (j == 0) continue;
                    pj = j - 1;
                    if (v[j - 1] != l) continue;
                } else {
                    if (j < l) continue;
                    pj = j - l;
                    if (j < a + l) continue;
                    if (S.substr(j - a - l, l) != S.substr(j - l, l)) continue;
                }
            }
            if (chmin(dp[i][j], dp[pi][pj] + 2)) {
                pre1[i][j] = pii(s, t);
                pre2[i][j] = pii(pi, pj);
            }
        }
    }

    int i = N, j = N;
    assert(dp[N][N] < inf / 2);
    // cout << dp[N][N] << '\n';
    string ans;

    while (i != 0 || j != 0) {
        auto [a, l] = pre1[i][j];
        ans += char('0' + a);
        ans += char('0' + l);
        auto [pi, pj] = pre2[i][j];
        i = pi, j = pj;
    }

    // reverse(all(ans));
    cout << ans << '\n';
}
