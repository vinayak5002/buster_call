# -*- coding: utf-8 -*-
import sys
import math
from collections import deque
 
 
def sir():
    return sys.stdin.readline().rstrip()
 
def ini():
    return int(sir())
 
def fli():
    return float(sir())
 
def mir():
    return map(int, sys.stdin.readline().split())
 
def mfr():
    return map(float, sys.stdin.readline().split())

def binary_search(l, n):
    length = len(l)
    now = length//2
    upper = length-1
    lower = 0

    while True:
        if upper == lower and n != l[now]:
            return None
        elif n == l[now]:
            return now
        elif n < l[now]:
            upper = now
        else:
            lower = now
        now = (upper+lower)//2
        
 
def main():
    N = ini()
    S = list(mir())
    Q = ini()
    T = set(mir())

    count = 0
    for t in T:
       if binary_search(S, t) is not None:
           count += 1

    print(count)

if __name__ == '__main__':
    main()
