using namespace std;
#include "bits/stdc++.h"

// add your library with double quotation #include"" here.
//#include "atcoder/all"
//using namespace atcoder;

// define your macros here.
#define MOD 1000000007
#define PI 3.14159265358979323846264338327950288419
#define IINF 1001001001
#define LINF 1001001001001001001LL

#define ll long long
#define VLL vector<ll>
#define PLL pair<ll, ll>
#define pb push_back
#define mpair make_pair
#define pm(first, second) pb(mpair((first), (second)))
#define pff first.first
#define pfs first.second
#define psf second.first
#define pss second.second

#define REP(i,n) for(ll i = 0; i < (ll)(n); i++)
#define REPS(i, n) for(ll i = 1; i <= (ll)(n); i++)
#define RREP(i, n) for(int i = ((ll)(n)-1); i >= 0; i--)
#define RREPS(i, n) for(int i = ((ll)(n)); i > 0; i--)
#define FOR(i, a, b) for(ll i = (a); i < (b); i++)
#define SZ(x) ((ll)(x).size())
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define MAX(a, b) max((ll)(a), (ll)(b))
#define MIN(a, b) min((ll)(a), (ll)(b))
#define DCEIL(a, b) (((a)+(b)-1)/(b))
#define UNIQUE(x) (x).erase(unique((x).begin(), (x).end()), (x).end())
#define outyn(flag) cout << ((flag)? "Yes": "No") << endl
#define outYN(flag) cout << ((flag)? "YES": "NO") << endl
#define out(output) cout << (output) << endl

template<class T>bool chmax(T &a, const T &b) { return a < b && (a = b, true); }
template<class T>bool chmin(T &a, const T &b) { return a > b && (a = b, true); }
ll qp(ll a, ll b){ll ans=1;do{if(b&1)ans=1LL*ans*a;a=1LL*a*a;}while(b>>=1);return ans;}
ll qp(ll a, ll b, ll mo){ll ans=1;do{if(b&1)ans=1LL*ans*a%mo;a=1LL*a*a%mo;}while(b>>=1);return ans;}
int DX[4] = {1, 0, -1, 0};
int DY[4] = {0, 1, 0, -1};

#define int long long

int opnot(int x){
    return -(x-1)+1;
}
int opand(int x, int y){
    if(x*y == 0) return 0;
    if(x == 1 || y == 1) return 1;
    return 2;
}
int opor(int x, int y){
    if(x == 2 || y == 2) return 2;
    if(x == 1 || y == 1) return 1;
    return 0;
}
int formula(string &s, int &pos){
    if(s[pos] == '-'){
        pos++;
        return opnot(formula(s, pos));
    }
    if(s[pos] == '('){
        pos++;
        int a = formula(s, pos);
        char op = s[pos];
        pos++;
        int b = formula(s, pos);
        pos++;
        if(op == '*') return opand(a, b);
        return opor(a, b);
    }
    char c = s[pos];
    pos++;
    return c - '0';
}
void solve(){
    // write your solution here.

    string S, s;
    int ans, pos;
    while(true){
        cin >> S;
        if(S == ".") return;
        
        ans = 0;
        REP(i, 3) REP(j, 3) REP(k, 3){
            s = S;
            REP(l, SZ(s)){
                switch(s[l]){
                case 'P':
                    s[l] = '0'+i;
                    break;
                case 'Q':
                    s[l] = '0'+j;
                    break;
                case 'R':
                    s[l] = '0'+k;
                    break;
                }
            }

            pos = 0;
            if(formula(s, pos) == 2) ans++;
        }
        out(ans);
    }
    
}
#undef int

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    // Fasterize input/output script
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    //cout << fixed << setprecision(100);
    // scanf/printf user should delete this fasterize input/output script

    int t = 1;
    //cin >> t; // comment out if solving multi testcase
    for(int testCase = 1;testCase <= t;++testCase){
        solve();
    }
    return 0;
}
