#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}



void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int H,W,N;
	cin>>H>>W>>N;
	vector<vector<int>> p(H,vector<int>(W));
	rep(i,H){
		string S;
		cin>>S;
		rep(j,W){
			if(S[j]=='#') p[i][j]=-1;
			if(S[j]=='@') p[i][j]=1;
		}
	}
	vector<vector<int>> ans(H,vector<int>(W));
	vector<int> dx={1,-1,0,0},dy={0,0,1,-1};
	rep(roop,N){
		int a,b;
		cin>>a>>b;
		a--,b--;
		assert(p[a][b]==0);
		vector<pair<int,int>> order={{a,b}},n_order;
		int ind=0,val=0;
		vector<vector<int>> dist(H,vector<int>(W,INF));
		dist[a][b]=0;
		while(!order.empty()){
			ind=0;
			while(ind!=(int)(order.size())){
				//if(dist[order[ind].first][order[ind].second]!=val) continue;
				rep(k,4){
					int s=order[ind].first+dx[k];
					int t=order[ind].second+dy[k];
					if(min(s,t)==-1||s==H||t==W) continue;
					if(dist[s][t]==INF){
						if(p[s][t]==-1) continue;
						if(p[s][t]==1){
							dist[s][t]=1+val;
							n_order.push_back({s,t});
						}else{
							dist[s][t]=val;
							order.push_back({s,t});
						}
					}
				}
				ind++;
			}
			swap(order,n_order);
			n_order={};
			val++;
		}
		rep(i,H) rep(j,W) chmax(ans[i][j],dist[i][j]);
	}
	int V=INF,A=-2,B=-2;
	rep(i,H) rep(j,W){
		if(p[i][j]==0&&chmin(V,ans[i][j])) A=i,B=j;
	}
	cout<<A+1<<" "<<B+1<<"\n";
}


