#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
static const int MAX = 100000;

int n;
int A[MAX + 1];
int L[MAX + 1], P[MAX + 1];

int lis() {
   L[0] = 0;
   P[0] = -1;
   int k = 0;
   int max = 0;
   for( int i = 1; i <= n; i++) {
   	    k = 0;
     	for( int j = 1; j < i; j++) {
     		if( A[j] < A[i] && L[k] < L[j] ) k = j;
     	}
     	L[i] = L[k] + 1;
     	P[i] = k;
     	if( L[max] < L[i] ) max = i;
   }
  int i = max;
  while( P[i] != -1){
  		cout << A[i] << " ";
  		i = P[i];
  }
   return L[max];
}
int lis2() {
    L[0] = A[0];
    int len ;
    vector<int> L;
    L.push_back(A[0]);
    for( int i = 1; i < n; i++ ) {
        len = L.size();
      	if( L[len-1] < A[i]) {
      		L.push_back( A[i] );
       	}
        else *lower_bound(L.begin(), L.end(), A[i]) = A[i];
    }
    return L.size();
}
int main() {
	cin >> n;
	//
    for(int i = 0; i < n; i++ ) cin >> A[i];
    cout << lis2() << endl;
	
	return 0;
}
