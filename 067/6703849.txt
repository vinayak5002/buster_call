#include <bits/stdc++.h>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define rrep(i,a,b) for(int i=b-1;i>=a;i--)
#define all(x) (x).begin(),(x).end()
#define pb(x) push_back(x);
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a = b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a = b; return 1; } return 0; }
typedef long long ll;
typedef long double lld;
using namespace std;
const ll mod=998244353;
//const ll mod=1e9+7;
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
const string zton="0123456789";
const string atoz="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
const ll inf=(1ll<<60);
ll gcd(ll a,ll b){
    ll r;
    r=a%b;
    if(r==0){
        return b;
    }
    else{
        return gcd(b,r);
    }
}
typedef pair<int,int> P;

bool solve(){
    int n,w,h;cin >> n >> w >> h;
    if(n+h+w==0)return false;
    map<int,P> cake;
    cake[0]={w,h};
    rep(i,0,n){
        int id,s;cin >> id >> s;
        id--;
        P p=cake[id];
        s%=(p.first+p.second);
        if(p.first>=s){
            P s1={s,p.second};
            P s2={p.first-s,p.second};
            if(s>(p.first-s))swap(s1,s2);
            cake[id]=s1;
            cake[i+1]=s2;
        }
        else{
            s-=p.first;
            P s1={p.first,s};
            P s2={p.first,p.second-s};
            if(s>p.second-s)swap(s1,s2);
            cake[id]=s1;
            cake[i+1]=s2;
        }
    }
    vector<int> ans;
    for(auto p_:cake){
        P p=p_.second;
        ans.pb(p.first*p.second)
    }
    sort(all(ans));
    for(int s:ans)cout << s << " ";
    cout << endl;
    return true;
}

int main(void){
    bool f=true;
    do{
        f=solve();
    }while(f);
}
