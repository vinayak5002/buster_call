#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const int mod=10007;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N,K;
	cin>>N>>K;
	vector<int> C(N),R(N);
	rep(i,N) cin>>C[i]>>R[i];
	vector<vector<int>> G(N,vector<int>(N));
	rep(i,K){
		int a,b;
		cin>>a>>b;
		a--,b--;
		G[a].push_back(b);
		G[b].push_back(a);
	}
	_pq<pair<int,int>> pq;
	pq.push({0,0});
	vector<int> ans(N,INF);
	ans[0]=0;
	while(!pq.empty()){
		int S,time;
		tie(time,S)=pq.top();
		pq.pop();
		if(ans[S]<time) continue;
		vector<int> order={S},seen(N,INF);
		seen[S]=0;
		int ind=0;
		while((int)order.size()!=ind){
			int a=order[ind];
			for(auto x:G[a]){
				if(seen[x]==INF){
					seen[x]=seen[a]+1;
					if(seen[x]<=R[S]){
						order.push_back(x);
						if(chmin(ans[x],time+C[S])){
							pq.push({ans[x],x});
						}
					}
				}
			}
			ind++;
		}
	}
	cout<<ans[N-1]<<"\n";
}

