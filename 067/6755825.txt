#include <bits/stdc++.h>
// #pragma GCC target("avx2")
// #pragma GCC optimize("O3")
// #pragma GCC optimize("unroll-loops")

using namespace std;
using ll = long long;
template <typename T>
using min_priority_queue = priority_queue<T, vector<T>, greater<T>>;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using Graph = vector<vector<int>>;

const ll INF = 1LL << 60;

template <class T>
void chmax(T& a, T b) {
    if (b > a) a = b;
}
template <class T>
void chmin(T& a, T b) {
    if (b < a) a = b;
}

template <typename T, typename S>
std::ostream& operator<<(std::ostream& os, const pair<T, S>& x) noexcept {
    return os << "(" << x.first << ", " << x.second << ")";
}

template <typename T>
void print_vector(vector<T> a) {
    cout << '[';
    for (int i = 0; i < a.size(); i++) {
        cout << a[i];
        if (i != a.size() - 1) {
            cout << ", ";
        }
    }
    cout << ']' << "\n";
}

int main() {
    ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    ll N;
    cin >> N;
    vector<ll> A(N);
    for (int i = 0; i < N; i++) {
        cin >> A[i];
    }
    unordered_set<ll> us;
    for (int bit = 0; bit < (1 << N); ++bit) {
        ll tmp = 0;
        for (int i = 0; i < N; ++i) {
            if (bit & (1 << i)) {
                tmp += A[i];
            }
        }
        us.insert(tmp);
    }
    ll Q;
    cin >> Q;
    for (int j = 0; j < Q; j++) {
        ll m;
        cin >> m;
        if (us.count(m)) {
            std::cout << "yes"
                      << "\n";
        } else {
            std::cout << "no"
                      << "\n";
        }
    }
    return 0;
}
