import sys
import math
from collections import defaultdict, deque

sys.setrecursionlimit(10 ** 6)
stdin = sys.stdin

INF = float('inf')
MAX = 10 ** 6

ni = lambda: int(ns())
na = lambda: list(map(int, stdin.readline().split()))
ns = lambda: stdin.readline().strip()

i = 1
all = []
while True:
    v = i * (i + 1) * (i + 2) // 6
    all.append(v)
    if v >= MAX:
        break
    i += 1

dp = [INF] * (MAX + 1)
dp2 = [INF] * (MAX + 1)
dp[0] = 0
dp2[0] = 0

for i in range(1, MAX + 1):
    for _, v in enumerate(all):
        if i - v >= 0:
            if dp[i] > dp[i - v] + 1:
                dp[i] = dp[i - v] + 1
            if v & 1:
                if dp2[i] > dp2[i - v] + 1:
                    dp2[i] = dp2[i - v] + 1

while True:
    N = ni()
    if N == 0:
        break
    print(dp[N], dp2[N])

