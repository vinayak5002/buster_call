#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}



void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N;
	cin>>N;
	int M=26;
	vector<vector<bool>> p(N,vector<bool>(M*M));
	rep(i,N){
		int K;
		cin>>K;
		rep(j,K){
			string S;
			cin>>S;
			p[i][(int)(S[0]-'a')*M+(int)(S[1]-'a')]=1;
		}
	}
	vector<vector<bool>> ok(N,vector<bool>(N));
	rep(i,N) rep(j,N){
		if(i==j) continue;
		rep(k,M*M){
			if(p[i][k]&p[j][k]) ok[i][j]=1;
		}
	}
	ll ans=0;
	rep(i,N) rep(j,N){
		if(i==j) continue;
		ll A=0,B=0,C=0;
		rep(k,N){
			if(k==i||k==j) continue;
			if(ok[i][k]) A++;
			if(ok[j][k]) B++;
			if(ok[i][k]&&ok[j][k]) C++;
		}
		ans+=(A-C)*(B-C)*C;
		ans+=C*(C-1)*(A+B-C-C);
		ans+=C*(C-1)*(C-2);
	}
	cout<<ans<<"\n";
}


