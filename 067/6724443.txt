#include <bits/stdc++.h>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define rrep(i,a,b) for(int i=b-1;i>=a;i--)
#define all(x) (x).begin(),(x).end()
#define pb(x) push_back(x);
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a = b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a = b; return 1; } return 0; }
typedef long long ll;
typedef long double lld;
using namespace std;
const ll mod=998244353;
//const ll mod=1e9+7;
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
const string zton="0123456789";
const string atoz="abcdefghijklmnopqrstuvwxyz";
const string ATOZ="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
const ll inf=(1ll<<60);
// const int inf=(1ll<<30);
lld dist(lld x1,lld x2,lld y1,lld y2){
    lld res=(x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);
    res=sqrt(abs(res));
    return res;
}
ll gcd(ll a,ll b){
    if(a==0||b==0)return a+b;
    ll r;
    r=a%b;
    if(r==0){
        return b;
    }
    else{
        return gcd(b,r);
    }
}
typedef pair<ll,int> P;

int N;
ll x[2010][2],y[2010][2];
vector<ll> xp,yp;
map<ll,int> inv_xp,inv_yp;

void pushx(){
    set<ll> s;
    s.insert(inf);
    s.insert(-inf);
    rep(i,0,N){
        rep(j,0,2)s.insert(x[i][j]);
    }
    int cnt=0;
    for(ll i:s){
        xp.pb(i);
        inv_xp[i]=cnt;
        cnt++;
    }
    return;
}
void pushy(){
    set<ll> s;
    s.insert(inf);
    s.insert(-inf);
    rep(i,0,N){
        rep(j,0,2)s.insert(y[i][j]);
    }
    int cnt=0;
    for(ll i:s){
        yp.pb(i);
        inv_yp[i]=cnt;
        cnt++;
    }
    return;
}
int main(void){
    cin >> N;
    rep(i,0,N)cin >> x[i][0] >> y[i][0] >> x[i][1] >> y[i][1];
    pushx();pushy();
    int h=xp.size();
    int w=yp.size();
    int imos[h][w];rep(i,0,h)rep(j,0,w)imos[i][j]=0;
    rep(i,0,N){
        int x1=inv_xp[x[i][0]];
        int y1=inv_yp[y[i][0]];
        int x2=inv_xp[x[i][1]];
        int y2=inv_yp[y[i][1]];
        // cout << x1 << " " << x2 << " " << y1 << " " << y2 << endl;
        imos[x1][y1]++;
        imos[x2][y2]++;
        imos[x1][y2]--;
        imos[x2][y1]--;
    }
    rep(i,0,h){
        rep(j,1,w)imos[i][j]+=imos[i][j-1];
    }
    rep(j,0,w){
        rep(i,1,h)imos[i][j]+=imos[i-1][j];
    }
    ll ans=0;
    rep(i,0,h){
        // rep(j,0,w)cout << imos[i][j] << " ";
        // cout << endl;
        rep(j,0,w){
            if(imos[i][j]>0){
                ans+=(xp[i+1]-xp[i])*(yp[j+1]-yp[j]);
            }
        }
    }
    cout << ans << endl;
}
