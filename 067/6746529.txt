#include <bits/stdc++.h>
#include <atcoder/dsu>
#include <atcoder/modint>
using namespace atcoder;
using mint = modint1000000007;
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

struct UnionFind{
    vector<int> p;
    UnionFind(int n) {
        p.resize(n, -1);
    }

    int find(int x) {
        if (p[x] == -1)
            return x;
        else 
            return find(p[x]);
    }

    void unite(int x, int y) {
        x = find(x);
        y = find(y);
        if (x == y)
            return;
        p[x] = y;
    }
};


int main()
{
    int n, q, com, x, y;
    cin >> n >> q;
    UnionFind uf(n);
    for (int i=0; i<q; i++) {
        cin >> com >> x >> y;
        if (com == 0) 
            uf.unite(x, y);
        if (com == 1) {
            if (uf.find(x) == uf.find(y)) 
                cout << 1 << endl;
            else
                cout << 0 << endl;
        }
    }
    return 0;
}
