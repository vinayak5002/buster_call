#include <bits/stdc++.h>

template <class T> bool chmax(T &a, const T &b){ bool ret = a < b; if(ret) a = b; return ret; }
template <class T> bool chmin(T &a, const T &b){ bool ret = a > b; if(ret) a = b; return ret; }

using lint = long long;
using std::cin, std::cout, std::cerr, std::endl;

lint a, e, s, r;

// レーベンシュタイン距離
lint dist(std::string x, std::string y){
	lint m = x.size(), n = y.size();
	std::vector dp(m + 1, std::vector<lint>(n + 1)); // dp[i][j] は x[:i] -> y[:j] のコスト
	for(lint i = 0; i <= m; i++){
		for(lint j = 0; j <= n; j++){
			if(i == 0){
				// 追加だけ
				dp[i][j] = a * j;
			}else if(j == 0){
				// 削除だけ
				dp[i][j] = e * i;
			}else{
				dp[i][j] = LLONG_MAX;
				// x[:i] -> x[:i - 1]（削除）-> y[:j]
				chmin(dp[i][j], dp[i - 1][j] + e);
				// x[:i] -> y[:j - 1] -> y[:j]（追加）
				chmin(dp[i][j], dp[i][j - 1] + a);
				// x[:i - 1] -> y[:j - 1] と同じように編集後，最後の文字を書き換え
				chmin(dp[i][j], dp[i - 1][j - 1] + s * (x[i - 1] != y[j - 1]));
			}
		}
	}
	// cerr << x << ", " << y << " : " << dp[m][n] << endl;
	return dp[m][n];
}

int main(){
	std::string x, y;
	while(cin >> x, x != "#"){
		cin >> y >> a >> e >> s >> r;
		lint m = x.size(), n = y.size();
		lint ans = LLONG_MAX;
		for(lint i = 0; i < m; i++){
			for(lint j = 0; j < m - i; j++){
				// cerr << x << ", " << y << " : " << i << " erase " << j << " rotate" << endl;
				chmin(ans, dist(x, y) + i * e + j * r);
				x.push_back(x[0]);
				x.erase(0, 1);
			}
			x.erase(0, 1);
		}
		cout << ans << endl;
	}
}
