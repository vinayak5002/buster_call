fn main() {
    let word: String = read();
    let mut total = 0;
    loop {
        let target: Vec<String> = read_vec();
        if target.len() == 1 && target[0] == "END_OF_TEXT" {
            break;
        }
        for t in target {
            if t.to_lowercase() == word {
                total += 1;
            }
        }
    }
    println!("{}", total);
}

fn read<T: std::str::FromStr>() -> T {
    let mut s = String::new();
    std::io::stdin().read_line(&mut s).ok().unwrap();
    s.trim().parse().ok().unwrap()
}

fn read_vec<T: std::str::FromStr>() -> Vec<T> {
    read::<String>()
        .split_whitespace()
        .map(|e| e.parse().ok().unwrap())
        .collect()
}

