#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;
typedef vector<bool> vb;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<P> vp;
typedef vector<vp> graph;
typedef vector<char> vc;
typedef vector<vc> vvc;
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
// const ll MOD = 1000000007;
const ll MOD = 998244353;
const ll INF = 1000000000000000000;
void yn(bool ok) { cout << (ok ? "yes\n" : "no\n"); }
void Yn(bool ok) { cout << (ok ? "Yes\n" : "No\n"); }
void YN(bool ok) { cout << (ok ? "YES\n" : "NO\n"); }
template <class T>
inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template <class T>
inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}
ll dx[8] = {-1, 0, 1, 0, 1, 1, -1, -1}, dy[8] = {0, 1, 0, -1, 1, -1, 1, -1};
vl used(400000);
void solve() {
    ll n;
    cin >> n;
    if (n == 1) exit(0);
    vl res;
    for (int i = 7; i <= n + 10; i += 7) {
        if (n % (i - 1) == 0 && used[i - 1] == 2) {
            if ((n / (i - 1) % 7) == 1 || (n / (i - 1) % 7) == 6)
                res.push_back(i - 1);
        }
        if (n % (i + 1) == 0 && used[i + 1] == 2) {
            if ((n / (i + 1) % 7) == 1 || (n / (i + 1) % 7) == 6)
                res.push_back(i + 1);
        }
    }
    cout << n << ": ";
    for (int i = 0; i < res.size(); i++)
        if (i != res.size() - 1)
            cout << res[i] << ' ';
        else
            cout << res[i] << endl;
}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    ll t = 1;
    // cin >> t;
    for (int i = 7; i <= 300000; i += 7) {
        if (!used[i - 1]) {
            used[i - 1] = 2;
            for (int j = 2;; j++) {
                if ((i - 1) * j > 300000) break;
                used[(i - 1) * j] = 1;
            }
        }
        if (!used[i + 1]) {
            used[i + 1] = 2;
            for (int j = 2;; j++) {
                if ((i + 1) * j > 300000) break;
                used[(i + 1) * j] = 1;
            }
        }
    }
    for (int i = 1;; i++) solve();
    return 0;
}
