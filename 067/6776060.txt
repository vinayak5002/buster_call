import cmath
def norm(c):
    a = abs(c)
    return a*a
def dot_product(a, b):
    return (a.conjugate()*b).real
def cross_product(a,b):
    return (a.conjugate()*b).imag
def projection(p, b):
    return b*dot_product(p,b)/norm(b)

P=[]
try:
    while True:
        x1,y1,x2,y2,x3,y3,xp,yp=map(float,input().split())
        P.append([complex(x1,y1),complex(x2,y2),complex(x3,y3),complex(xp,yp)])
except EOFError:
    pass

L=len(P)
for i in range(L):
    C1,C2,C3,Cp=P[i][0],P[i][1],P[i][2],P[i][3]
    if cross_product(C1-Cp,C2-Cp)*cross_product(C2-Cp,C3-Cp)>0 and cross_product(C2-Cp,C3-Cp)*cross_product(C3-Cp,C1-Cp)>0:
        print("YES")
    else:
        print("NO")

