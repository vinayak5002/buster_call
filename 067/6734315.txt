def dfs(s):
    if visited[s] != 1:
        visited[s] = 1
        stack[s] = 1
        for t in d_pass[s]:
            if stack[t] == 1:
                print("1")
                exit()
            else:
                dfs(t)
    stack[s] = 0


v, e = list(map(int, input().split()))
d_pass = [[] for i in range(v)] # directed_pass
visited = [0] * v
stack = [0] * v
for i in range(e):
    s, t = list(map(int, input().split()))
    d_pass[s].append(t)
for i in range(v):
    dfs(i)
print("0")
