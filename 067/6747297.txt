#include<bits/stdc++.h>
using namespace std;
#include<atcoder/all>
using namespace atcoder;
using ll = long long;
int n,m;
vector<int> b,r;

void solve(){
	mf_graph<int> G(m+n+2);
	for(int i = 0;i<n;i++){
		G.add_edge(m+n,i,1);
	}
	for(int i = 0;i<m;i++){
		G.add_edge(n+i,m+n+1,1);
	}
	for(int i = 0;i<n;i++){
		for(int j = 0;j<m;j++){
			if(gcd(b[i],r[j])!=1){
				G.add_edge(i,n+j,1);
			}
		}
	}
	cout<<G.flow(n+m,n+m+1)<<'\n';

}

signed main(){
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	while(1){
		cin >> n >> m;
		b = vector<int>(n);
		r = vector<int>(m);
		if(n==0&&m==0)break;
		for(auto &i:b)cin >> i;
		for(auto &i:r)cin >> i;
		solve();
	}
}

