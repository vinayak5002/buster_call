#include <iostream>
#include<stdio.h>
#define MAX 36
using namespace std;

struct Card {
  char suit;
  int value;
};

void bubbleSort(Card A[], int n) {
  for ( int i = 0; i < n; i++ ) {
    for ( int j = n - 1; j > 0; j-- ) {
      if ( A[j].value < A[j - 1].value ) {
        Card t = A[j]; A[j] = A[j - 1]; A[j - 1] = t;
      }
    }
  }
}

void selectionSort(Card A[], int n) {
  for ( int i = 0; i < n; i++ ) {
    int min = i;
    for ( int j = i; j < n; j++ ) {
      if ( A[min].value > A[j].value ) min = j;
    }
    Card t = A[min]; A[min] = A[i]; A[i] = t;
  }
}

int main() {
  int n;
  Card A[MAX], B[MAX];
  char t[];

  scanf("%d", &n);
  for ( int i = 0; i < n; i++ ) {
    scanf("%s", t);
    A[i].suit = B[i].suit = t[0];
    A[i].value = B[i].value = t[1] - '0';
  }

  bubbleSort(A, n);
  selectionSort(B, n);

  for ( int i = 0; i < n; i++ ) {
    if(i) printf(" ");
    printf("%c%d", A[i].suit, A[i].value);
  }
  printf("\nStable\n");
 for ( int i = 0; i < n; i++ ) {
    if(i) printf(" ");
    printf("%c%d", B[i].suit, B[i].value);
  }

  int i = 0;
  while ( i < n - 1) {
    if ( A[i].suit != B[i].suit ) break;
    i++;
  }
  if ( i == n - 1 ) printf("\nStable\n");
  else printf("\nNot stable\n");

  return 0;
}


