import sys

class Node:
    def __init__(self, v):
        self.value = v
        self.left = None
        self.right = None
        self.parent = None

    def insert(self, val):
        par_node = Node(None)
        ins_node = Node(val)

        i = self

        while i is not None:
            par_node = i
            if ins_node.value < i.value:
                i = i.left
            else:
                i = i.right
        
        ins_node.parent = par_node
        if par_node is None:
            self = ins_node
        else:
            if ins_node.value < par_node.value:
                par_node.left = ins_node
            else:
                par_node.right = ins_node

    def find(self, v):
        if self.value == v:
            print("yes")
        elif self.value < v:
            if self.right == None:
                print("no")
            else:
                self.right.find(v)
        else:
            if self.left == None:
                print("no")
            else:
                self.left.find(v)


def pre_order(t):
    if t != None:
        print('', t.value, end='')
        pre_order(t.left)
        pre_order(t.right)

def in_order(t):
    if t != None:
        in_order(t.left)
        print('',t.value, end='')
        in_order(t.right)


N = int(sys.stdin.readline())
root = Node(None)#root作成
line = sys.stdin.readline().split()
if line[0][0] == 'i':
    root = Node(int(line[1]))
for i in range(N-1):
    line = sys.stdin.readline().split()
    if line[0][0] == 'i':
        root.insert(int(line[1]))
    elif line[0][0] == 'p':
        in_order(root)
        print()
        pre_order(root)
        print()
    elif line[0][0] == 'f':
        root.find(int(line[1]))
