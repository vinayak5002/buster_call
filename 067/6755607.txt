#include <iostream>
#include <unistd.h>
using namespace std;

#define MAX 100
#define INFTY 1000001

int n;
int M[MAX][MAX];
int color[MAX];
int d[MAX];
int p[MAX];

void dijkstra(){
    while(true){
        // sleep(1);
        int u = -1;
        int d_min = INFTY;
        for(int i=0;i<n;i++){
            if(d[i]!=INFTY && color[i]!=2){
                if(d[i]<d_min){
                    u = i;
                    d_min = d[i];
                }
            }
        }
    
        if(u==-1) break;
        color[u] = 2;

        for(int v=0;v<n;v++){
            if(M[u][v]!=INFTY && color[v]!=2){
                // cout << d[u] << " " << M[u][v] << " " << d[v] << endl; 
                if(d[u]+M[u][v] < d[v]){
                    d[v] = d[u]+M[u][v];
                    color[v] = 1;
                    p[v] = u;
                }
            }
        }
    }
}


int main(){
    cin >> n;
    for(int i=0;i<n;i++){
        int a, k;
        cin >> a >> k;
        for(int j=0;j<n;j++) M[i][j] = INFTY;
        for(int j=0;j<k;j++){
            int v, c;
            cin >> v >> c;
            M[i][v] = c;
        }
        color[i] = 0;
        d[i] = INFTY;
        p[i] = -1;
    }
    d[0] = 0;

    dijkstra();

    for(int i=0;i<n;i++){
        cout << i << " " << d[i] << endl;
    }
    return 0;
}
