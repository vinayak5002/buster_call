#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

typedef vector<ll> vl;
typedef vector<vector<ll>> vvl;

typedef pair<ll, ll> pll;
typedef vector<pll> vpll;

#define FOR(i, a, b) for(ll i=(a); i<(b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define NREP(i, n) FOR(i, 1, n+1)

template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

ll isfin = 0;

void solve() {
    ll N, M; cin >> N >> M;
    if(N == 0 && M == 0) {
        isfin = 1;
        return;
    }
    
    vl W(N, 0);
    vl root(N, 0);
    vvl children(N);
    REP(i, N) {
        root[i] = i;
        children[i].push_back(i);
    }
    
    while(M--) {
        char c; cin >> c;
        
        if(c == '!') {
            ll a, b, w; cin >> a >> b >> w;
            a--, b--;
            
            if(root[a] == root[b]) {
                assert(W[b] - W[a] == w);
                continue;
            }
            
            ll ra = root[a], rb = root[b];
            if(children[ra].size() < children[rb].size()) {
                swap(a, b);
                swap(ra, rb);
                w = -w;
            }
            
            // a <- b
            for(auto v:children[rb]) {
                root[v] = ra;
                children[ra].push_back(v);
                ll base = W[a] + w - W[b];
                W[v] = W[v] + base;
            }
            children[rb].clear();
            
        }
        else {
            ll a, b; cin >> a >> b;
            a--, b--;
            
            if(root[a] != root[b]) {
                cout << "UNKNOWN" << endl;
            }
            else {
                cout << (W[b] - W[a]) << endl;
            }
            
        }
        
    }
    
    
    return;
}

int main(void) {
    while(1) {
        solve();
        if(isfin) {break;}
    }


    return 0;
}
