#define NUM_MAX 1000000
#define NUM_MIN 1
#define VALUE_MAX 1000000000
#define VALUE_MIN 0
#define M_MAX 100
#define M_MIN 1

#include<stdio.h>
#include<stdlib.h>
void checkValue (int value);
void checkNumber (int number);
void getArray (int n, int a[NUM_MAX]);
void printArray (int n, int array[NUM_MAX]);
int insertionSort(int array[NUM_MAX], int n, int g);
void shellSort(int array[NUM_MAX], int n);

int num=0;                  /*The number of elements (1<=num<=1,000,000)*/
int sequence[NUM_MAX]={0};

int main()
{
    scanf("%d",&num);
    checkNumber(num);
    getArray(num,sequence);
    shellSort(sequence,num);

    return 0;
}

void checkNumber (int number)
{
    if (number>NUM_MAX)
    {
        printf("ERROR: The number of elements must be less than or equal to %d.\n",NUM_MAX);
        exit(0);
    }
    else if (number<NUM_MIN)
    {
        printf("ERROR: The number of elements must be greater than or equal to %d.\n",NUM_MIN);
        exit(0);
    }

    return;
}

void checkValue (int value)
{
    if (value>VALUE_MAX)
    {
        printf("ERROR: The input value must be less than or equal to %d.\n",VALUE_MAX);
        exit(0);
    }
    else if (value<VALUE_MIN)
    {
        printf("ERROR: The input value must be greater than or equal to %d.\n",VALUE_MIN);
        exit(0);
    }
    return;
}

void getArray (int n, int array[NUM_MAX])
{
    int i=0;

    for (i=0;i<n;i++)
    {
        scanf("%d",&array[i]);
        checkValue(array[i]);
    }

    return;
}

void printArray (int n, int array[NUM_MAX])
{
    int i=0;

    for (i=0;i<n;i++)
    {
        if (i!=n-1)
        {
            printf("%d ",array[i]);
        }
        else
        {
            printf("%d\n",array[i]);
        }
    }
    
    return;
}

int insertionSort(int array[NUM_MAX], int n, int g)
{
    int i=0;
    int j=0;
    int value=0;
    int count=0;
    for (i=g;i<n;i++)
    {
        value = array[i];
        j = i-g;
        while (j>=0 && array[j]>value)
        {
            array[j+g] = array[j];
            j -= g;
            count++;
        }
        array[j+g]=value;
    }

    return count;
}

void shellSort(int array[NUM_MAX], int n)
{
    int m=1;
    int G[M_MAX]={0};
    int i=0;
    int count=0;

    G[0]=n;
    for (i=1;G[i-1]>0;i++)
    {
        G[i]=G[i-1]-1;
    }
    m = i-1;
    
    for (i=0;i<m;i++)
    {
        count += insertionSort(array,n,G[i]);
    }

    printf("%d\n",m);
    printArray(m,G);
    printf("%d\n",count);

    for (i=0;i<n;i++)
    {
        printf("%d\n",array[i]);
    }

    return;
}
