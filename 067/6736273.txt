#include <bits/stdc++.h>
using namespace std;
using pii = pair<int, int>;
using pdd = pair<double, double>;

inline pii input() {
    int a, b; cin >> a >> b;
    return {a, b};
}

inline pii diff(pii a, pii b) {
    return {b.first - a.first, b.second - a.second};
}

inline pdd diff(pii a, pdd b) {
    return {b.first - a.first, b.second - a.second};
}

inline pdd times(pii a, double value) {
    return {(double)a.first*value, (double)a.second*value};
}

inline pdd times(pdd a, double val) {
    return {a.first*val, a.second*val};
}

inline pdd add(pii a, pdd b) {
    return {(double)a.first + b.first, (double)a.second + b.second};
}

inline int dot(pii a, pii b) {
    return (a.first*b.first + a.second*b.second);
}

pdd projection(pii p1, pii p2, pii p) {
    return add(p1, times(diff(p1, p2), (double)dot(diff(p1, p) , diff(p1, p2))/(double)dot(diff(p1, p2), diff(p1, p2))));
}

int main() {
    cout << fixed << setprecision(10);
    pii p1 = input(), p2 = input();
    int q; cin >> q;
    for (int _ = 0 ; _ < q ; _++) {
        pii p = input();
        auto [x, y] = add(p, times(diff(p, projection(p1, p2, p)), 2.0));
        cout << x << ' ' << y << endl;
    }
}

