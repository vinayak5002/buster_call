import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while True:
    N = ii()
    if N == 0:
        break
    L = list(map(str,input().split()))
    dic = defaultdict(int)
    tmp1 = 0
    tmp2 = 0
    idx = ["A" for _ in range(2)]
    flag = True
    for i in range(len(L)):
        dic[ord(L[i])] += 1
        cnt = N-1 - i
        for key in dic:
            if dic[key] > tmp1:
                tmp1 = dic[key]
                idx[0] = key
            elif dic[key] > tmp2 and key != idx[0]:
                tmp2 = dic[key]
                idx[1] = key
        if tmp1 - tmp2 > cnt:
            print(chr(idx[0]),i+1)
            flag = False
            break
    if flag:
        print("TIE")
                    

