#include<iostream>
#include<algorithm>
#include<map>
#include<queue>
#include<stack>
#include<set>
#include<bitset>
#include<vector>
#include<string>

#define rep(i,n) for(int i=0;i<(n);i++)
using namespace std;
using ll=long long;
using P=pair<int,int>;
using P_S=pair<int,string>;
int n;

struct node{
    int key;
    int right;
    int left;
    int parent;

    node(){
        right=left=-1;
        parent=-1;
    }
};

struct BST{
    node t[6000000];
    int size;
    int root;
    BST(){
        size=root=0;
    }

    void insert(int z){
        if(size==0){
            t[0].key=z;
            size++;
        }
        else{
            int p=root;
            node x=t[root];
            while(1){
                if(x.key>z){
                    if(x.left==-1){
                        t[p].left=size;
                        t[size].key=z;
                        t[size].parent=p;
                        size++;
                        break;
                    }
                    else{
                        p=x.left;
                        x=t[x.left];
                    }
                }
                else{
                    if(x.right==-1){
                        t[p].right=size;
                        t[size].key=z;
                        t[size].parent=p;
                        size++;
                        break;
                    }
                    else{
                        p=x.right;
                        x=t[x.right];
                    }
                }
            }
        }
    }

    void print_inord(int id){
        if(id==-1)return;
        print_inord(t[id].left);
        cout<<" "<<t[id].key;
        print_inord(t[id].right);
    }

    void print_preord(int id){
        if(id==-1) return;
        cout<<" "<<t[id].key;
        print_preord(t[id].left);
        print_preord(t[id].right);
    }
};

int main()
{
    cin>>n;
    BST bst;
    rep(i,n){
        string s;
        cin>>s;
        if(s[0]=='i'){
            int a;
            cin>>a;
            bst.insert(a);
        }
        else if(s[0]=='p'){
            bst.print_inord(0);
            cout<<endl;
            bst.print_preord(0);
            cout<<endl;
        }
    }
}
