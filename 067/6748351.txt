#include<stdio.h>
#include<stdbool.h>

struct Card
{
    char suit;
    char value;
};

void bubble(struct Card a[],int N)
{
    for(int i=0;i<N;i++)
    {
        for(int j=N-1;j>=i+1;j--)
        {
            if(a[j].value <a[j-1].value)
            {
                struct Card t = a[j];
                a[j]=a[j-1];
                a[j-1]=t;
            }
        }
    }
}
void selection(struct Card a[],int N)
{
    for(int i=0;i<N;i++)
    {
        int minj=i;
        for(int j=i;j<N;j++)
        {
            if(a[j].value < a[minj].value)
            {
                minj=j;
            }
        }
        struct Card t=a[i];
        a[i]=a[minj];
        a[minj]=t;
    }
}
void print(struct Card a[],int N)
{
    for(int i=0;i<N;i++)
    {
        if(i>0)
        {
            printf(" ");
        }
        printf("%s%s",a[i].suit,a[i].value);
    }
    printf("\n");
}
bool isStable(struct Card C1[],struct Card C2[],int N)
{
    for(int i=0;i<N;i++)
    {
        if(C1[i].suit != C2[i].suit)
        {
            return false;
        }
    }
    return true;
}
int main()
{
    struct Card C1[100];
    struct Card C2[100];
    int N;
    char ch;

    scanf("%d",&N);
    for(int i=0;i<N;i++)
    {
        scanf("%s,%s",C1[i].suit,C1[i].value);
    }
    for(int i=0;i<N;i++)
    {
        C2[i]=C1[i];
    }
    bubble(C1,N);
    selection(C2,N);

    print(C1,N);
    printf("Stable\n");
    print(C2,N);
    if(isStable(C1,C2,N))
    {
        printf("Stable\n");
    }
    else
    {
        printf("Not stable\n");
    }
    return 0;
}
