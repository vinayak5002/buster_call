#include<bits/stdc++.h>

using namespace std;

const int maxn = 101;
char mp[maxn][maxn];
int H, W, ans = 0;
int dx[] = {0, 1, 0, -1};
int dy[] = {1, 0, -1, 0};


void dfs(int x, int y, char c) {
    mp[x][y] = '.';
    for (int k = 0; k < 4; ++k) {
        int tx = x + dx[k];
        int ty = y + dy[k];
        if (tx >= 0 && tx < W && ty >= 0 && ty < H && mp[tx][ty] == c) {
            dfs(tx, ty, c);
        }
    }
}

int main() {
    while (cin >> H >> W) {
        if (H == 0 && W == 0) break;
        for (int i = 0; i < H; ++i) {
            for (int j = 0; j < W; ++j) {
                cin >> mp[i][j];
            }
        }
        for (int i = 0; i < H; ++i) {
            for (int j = 0; j < W; ++j) {
                if (mp[i][j] == '#' || mp[i][j] == '*' || mp[i][j] == '@') {
                    dfs(i, j, mp[i][j]);
                    ans++;
                }
            }
        }
        cout << ans << "\n";
    }
   


    return 0;
}


