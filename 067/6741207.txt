#include <stdio.h>
#include <stdlib.h>
typedef struct node *Nil;
Nil nil;
void list(){
    nil = (Nil)malloc(sizeof(struct node));
    nil->next = nil;
    nil->prev = nil;
}
void insert(int K){
    struct node *n = (Nil)malloc(sizeof(struct node));
    n->K = K;
    n->next = nil->next;
    nil->next->prev = n;
    nil->next = n;
    n->prev = nil;
}

struct Node *listSearch(int K){
    struct node *c = nil->next;
    while(c != nil && c->K != K){
        c = c->next;
    }
    return c;
}

void deleteNode(struct node *i){
    if( i == nil )
        return;
    i->prev->next = i->next;
    i->next->prev = i->prev;
    free(i);
}



void deleteFirst(){
    deleteNode(nil->next);
}

void deleteLast(){
    deleteNode(nil->prev);
}

void delete(int K){
    deleteNode(listSearch(K));
}

void main(){
    int I, N, Key;
    char command[10];
    scanf("%d", &I);
    list();
    for(N=0; N<I; N++){
        scanf("%s%d", command, &Key);
        if(command[0]=='d'){
            if(strlen(command)>6){
                if(command[6]=='L'){
                    deleteLast();
                }else if(command[6]=='F'){
                    deleteFirst();
                }else{
                    delete(Key);
                }
            }
        }

        if(command[0]=='i'){
            insert(Key);
        }
    }

    for( int n = nil->next ; n != NULL; n = n->next ){
		printf("%d", n->data);

	}
}
