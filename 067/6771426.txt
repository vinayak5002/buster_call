#include <bits/stdc++.h>
using namespace std;
void fast(){ios::sync_with_stdio(false);cin.tie(nullptr);}
string uppercase(string &s) {transform(s.begin(), s.end(), s.begin(), ::toupper); return s;}
string lowercase(string &s) {transform(s.begin(), s.end(), s.begin(), ::tolower); return s;}
const int N = 105;
#define ll long long
#define ld long double
#define YES cout << "YES\n"
#define NO cout << "NO\n"
#define Yes cout << "Yes\n"
#define No cout << "No\n"
#define yes cout << "yes\n"
#define no cout << "no\n"
#define all(x) x.begin(),x.end()
#define allr(x) x.rbegin(),x.rend()
vector<vector<int>>adjList;
vector<char>vis;
deque<int>ans;
void dfs(int node) {
    vis[node] = true;
    for(auto &child : adjList[node]) {
        if(!vis[child]) {
            dfs(child);
        }
    }
    ans.push_front(node);
}
bool cycle = false;
void isCycle(int node) {
    if(vis[node] == 2) {
        return;
    }
    if(vis[node] == 1) {
        cycle = true;
        return;
    }
    vis[node] = 1;
    for(int i = 0; i < adjList[node].size(); i++) {
        isCycle(adjList[node][i]);
    }
    vis[node] = 2;
}
int main() {
    //freopen("schedule.in", "r", stdin);
    //freopen(".out", "w", stdout);
    fast();
    int n, m;
    cin >> n >> m;
    vis.resize(n);
    adjList.resize(n);
    int u, v;
    for(int i = 0; i < m; i++) {
        cin >> u >> v;
        adjList[u].emplace_back(v);
    }
    for(int i = 0; i < n; i++) {
        if(!vis[i])
            dfs(i);
    }
    for(auto &it : ans)
        cout << it << '\n';
    return 0;
}
