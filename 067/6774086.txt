//C program for Exhaustive Search
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
// Function for comparation and decision making
int solve(int arr[],int size_of_Array,int pointer,int flag)
  {
    if(flag - arr[pointer] == 0)
      {
        return 1;
      }
    else
      {
        if(pointer == size_of_Array - 1)
          {
            return 0;
          }
        else
          {
            if (solve(arr,size_of_Array,pointer + 1,flag - arr[pointer]) || solve(arr,size_of_Array,pointer + 1,flag))
              {
                return 1;
              }
            else
              {
                return 0;
              }
          }
      }
  }
int main()
  {
    // scan check data
    int num_1Array = 0,num_2Array = 0,counter;
    scanf("%d",&num_1Array);
    if (num_1Array < 0 || num_1Array >= 21)
      {
        printf("Exceed range \n ");
        return EXIT_FAILURE;      
      }
    int Compare_arr[num_1Array];
    for(counter = 0; counter < num_1Array; counter++)
      {
        int value_read = scanf("%d", &Compare_arr[counter]);
        if (value_read != 1)
          {
            printf("Input error %d \n ", counter);
            return EXIT_FAILURE;
          }
        if (Compare_arr[counter] < 0 || Compare_arr[counter] > 2001)
          {
            printf("input exceed range from 0-2000");
            return EXIT_FAILURE;
          }
      }
    scanf("%d", &num_2Array);
    int MainArray[num_2Array];
    if (num_2Array < 0 || num_2Array >= 201)
      {
        printf("Exceed range \n ");
        return EXIT_FAILURE;      
      }  
    for(counter = 0; counter < num_2Array; counter++)
      {
        int value_read = scanf("%d", &MainArray[counter]);
        if (value_read != 1)
          {
            printf("Input error %d \n ", counter);
            return EXIT_FAILURE;
          }
        if (MainArray[counter] < 0 || MainArray[counter] > 2001)
          {
            printf("input exceed range from 0-2000");
            return EXIT_FAILURE;
          }
      }
    // implement function
    for(counter = 0; counter < num_2Array; counter++)
      {
        if(solve(Compare_arr,num_1Array,0,MainArray[counter]) == 1)
          {
            printf("yes\n");
          }
        else
          {
            printf("no\n");
          }
      }
    return EXIT_SUCCESS; 
  }
