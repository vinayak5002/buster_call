#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
#include <iostream>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <vector>
#include <cmath>
#include<sstream>
#include<list>
#include<iomanip>
#include <cstdlib>
#include <cstring>
#include <stack>
#include <bitset>
#include <cassert>
#include <stdlib.h>
#include <stdio.h>
using namespace std;
const int INF = 1000000000;
const long long LINF = 3e18 + 7;
const int MAX_N = 500100;
const int MAX_W = 1000010;
const int MAX_ARRAYK = 100000;
double PI = 3.14159265358979323846;
//using ll = long long;


long long par[MAX_N];
long long fr[MAX_N];

void init(long long n) {
	for (long long i = 0; i < n; i++) {
		par[i] = 0;
	}
}

long long find(long long x) {
	if (par[x] == x) {
		return x;
	}
	else {
		return par[x] = find(fr[x]);
	}
}

void on_flag(long long x) {
	par[x] = x;
}


int N, Q;


int main() {

	cin >> N >> Q;
	fr[0] = 0;
	for (int i = 1; i < N; i++) {
		cin >> fr[i];
		fr[i]--;
	}
	init(N);
	long long ans = 0;
	for (int q = 0; q < Q; q++) {
		char ch;
		int x;
		cin >> ch;
		if (ch == 'Q') {
			cin >> x;
			x--;
			ans += (find(x) + 1LL);
		}
		else {
			cin >> x;
			x--;
			on_flag(x);
			
		}
	}

	cout << ans << endl;

	return 0;
}
