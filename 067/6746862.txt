#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

/*struct Fast {
  Fast() {
    std::cin.tie(0);
    ios::sync_with_stdio(false);
  }
} fast;
*/

int partition(vector<int> &A, int p, int r) {
  const int x = A[r];
  int i = p - 1;
  for (int j = p; j < r; j++) {
    if (A[j] <= x) {
      i++;
      swap(A[i], A[j]);
    }
  }
  swap(A[i + 1], A[r]);
  return i + 1;
}

int main() {
  int n;
  scanf("%d", &n);
  vector<int> A(n);
  for (int i = 0; i < n; i++) {
    scanf("%d", &A[i]);
  }

  const int res = partition(A, 0, n - 1);

  for (int i = 0; i < n; i++) {
    if (i == res) {
      printf("[");
    }
    printf("%d", A[i]);
    if (i == res) {
      printf("]");
    }
    if (i == (n - 1)) {
      printf("\n");
    } else {
      printf(" ");
    }
  }

  return 0;
}

