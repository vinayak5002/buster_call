## 文字数で辞書を作成する

from operator import mod


tablesize = 1046527


def h1(k):
	return k%tablesize
def h2(k):
	return 1 + (k%(tablesize-1))


def str_to_sumint(a):
	# ５進数->10進数として考える
	sumint = 0
	keta = 1

	for i in a:
		if i == "A":
			sumint += 1*keta
		elif i == "T":
			sumint += 2*keta
		elif i == "C":
			sumint += 3*keta
		else:
			sumint += 4*keta
	keta *=5
	return sumint


hashtable = ["" for _ in range(tablesize)]


def insert(string):
	num = str_to_sumint(string)
	firsthash = h1(num)
	if hashtable[firsthash] == "":
		hashtable[firsthash] = string
	else:
		i = 1
		while True:
			h = (h1(num) + i * h2(num)) % tablesize
			if hashtable[h] == "":
				hashtable[h] = string
				return
				
def find(string):
	num = str_to_sumint(string)
	firsthash = h1(num)
	if hashtable[firsthash] == string:
		return True
	else:
		while True:
			h = (h1(num) + i * h2(num)) % tablesize
			if hashtable[h] == "":
				return False
			elif hashtable[h] != "":
				continue
			elif hashtable[h] == "":
				return True


n = int(input())
for i in range(n):
	dt = list(map(str, input().split()))
	if dt[0] == "insert":
		insert(dt[1])
	if dt[0] == "find":
		ans = find(dt[1])

		if ans:
			print("yes")
		else:
			print("no")


