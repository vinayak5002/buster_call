class UnionFind
  def initialize(n)
    @v=Array.new(n) {|i| i}
  end
  def root(x)
    return x if @v[x]==x
    @v[x]=root(@v[x])
  end
  def same?(x,y)
    root(x)==root(y)
  end
  def unite(x,y)
    @v[root(x)]=root(y) if root(x)!=root(y)
  end
end
n,q=gets.split.map(&:to_i)
u=UnionFind.new(n)
q.times do
  c,x,y=gets.split.map(&:to_i)
  if c==0 then
    u.unite(x,y)
  else
    puts u.same?(x,y) ? 1 : 0
  end
end

