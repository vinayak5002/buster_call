#include <stdio.h>

#define MAX 500000
#define INFTY 2147483647

int n;
int count = 0;

void getdata(int A[])
{
    int i;

    //データ数の取得

    scanf("%d", &n);

    //データの格納
    for (i = 0; i < n; i++)
    {
        scanf("%d", &A[i]);
    }
}

void merge(int A[], int left, int mid, int right)
{
    int n1 = mid - left;
    int n2 = right - mid;
    int i;
    int R[MAX];
    int L[MAX];
    for (i = 0; i < n1; i++)
    {
        L[i] = A[left + i];
    }
    for (i = 0; i < n2; i++)
    {
        R[i] = A[mid + i];
    }
    L[n1] = INFTY;
    R[n2] = INFTY;
    i = 0;
    int j = 0;
    for (int k = left; k < right; k++)
    {
        if (L[i] <= R[j])
        {
            A[k] = L[i];
            i = i + 1;
        }
        else
        {
            A[k] = R[j];
            j = j + 1;
        }
        count++;
    }
}

void mergeSort(int A[], int left, int right)
{

    if (left + 1 < right)
    {
        int mid = (left + right) / 2;
        mergeSort(A, left, mid);
        mergeSort(A, mid, right);
        merge(A, left, mid, right);
    }
}

int main(void)
{

    int A[MAX];

    getdata(A);
    mergeSort(A, 0, n);
    

    for (int i = 0; i < n; i++)
    {
        printf("%d", A[i]);
        if (i != n - 1)
        {
            printf(" ");
        }
    }
    printf("\n");
    printf("%d\n", count);

    return 0;
}

