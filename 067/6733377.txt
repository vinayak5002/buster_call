package main

import (
  "fmt"
  "bufio"
  "os"
  "strconv"
)

var stackArray []interface{}

func push(n interface{}) {
	stackArray = append([]interface{}{n}, stackArray...)
}

func length() int {
	return len(stackArray)
}

func top() interface{} {
	return stackArray[0]
}

func isEmpty() bool {
	return len(stackArray) == 0
}

func pop() interface{} {
	pop := stackArray[0]
	stackArray = stackArray[1:]
	return pop
}


func printArray() {
  n := length()
  for i := 0; i < n; i++ {
    if i > 0 {
      fmt.Printf("\n")
    }
    fmt.Printf("%d", stackArray[i])
  }
  fmt.Printf("\n")
}


func main()  {
  var a, b int
  scanner := bufio.NewScanner(os.Stdin)
  scanner.Split(bufio.ScanWords)
  for scanner.Scan() {
    c := scanner.Text()
    if c == string('+') {
      a = pop().(int)
      b = pop().(int)
      push(a + b)
    }else if (c == string('-')) {
      a = pop().(int)
      b = pop().(int)
      push(b - a)
    }else if (c == string('*')) {
      a = pop().(int)
      b = pop().(int)
      push(a * b)
    }else {
      i, _ := strconv.Atoi(c)
      push(i)
    }
  }
  printArray()
}

