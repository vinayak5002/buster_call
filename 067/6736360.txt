#define BUF_SIZE 4096
#define VEC_SIZE 128

#include <stdio.h>
#include <math.h>

//ベクトル1、2、ベクトルの要素数、どの距離か
double minkowski_distance(double vec1[], double vec2[], int n, int num) {
	int i;
	double result;
	if (num == -1) {//num==inf
		double max=0;
		for (i = 0; i < n; i++) {
			int tmp = abs(vec1[i] - vec2[i]);
			if (tmp > max) {
				max = tmp;
			}
		}
		result = max;
	}
	else {//num>0
		double sum=0;
		for (i = 0; i < n; i++) {
			sum += abs(pow(vec1[i] - vec2[i], num));
		}
        result = pow(sum, 1.0 / num);
	}
	return result;
}

int main(void)
{
	char buf[BUF_SIZE];
	double vec1[VEC_SIZE];
	double vec2[VEC_SIZE];
	int n, i;

	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d", &n);

	fgets(buf, sizeof(buf) - 1, stdin);
	for (i = 0; i < n; i++) {
		sscanf(buf, "%lf %[^\n]", &vec1[i], buf);
	}

	fgets(buf, sizeof(buf) - 1, stdin);
	for (i = 0; i < n; i++) {
		sscanf(buf, "%lf %[^\n]", &vec2[i], buf);
	}
    
    result1 = minkowski_distance(vec1, vec2, n, 1);
    result2 = minkowski_distance(vec1, vec2, n, 2);
    result3 = minkowski_distance(vec1, vec2, n, 3);
    result4 = minkowski_distance(vec1, vec2, n, -1);
	printf("%lf\n", result1);
	printf("%lf\n", result2);
	printf("%lf\n", result3);
	printf("%lf\n", result4);
}
