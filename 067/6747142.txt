#include<iostream>

    using namespace std;

int x[5], y[5];
bool used[5][5];

bool isValid(int i, int j)
{
    return 0 <= i && i < 4 && 0 <= j && j < 4;
}

int DFS(int i1, int j1)
{
    int i2 = (i1 * 4 + j1 + 1) / 4;
    int j2 = (i1 * 4 + j1 + 1) % 4;
    if (used[i1][j1])
    {
        return i2 < 4 ? DFS(i2, j2) : 1;
    }
    int ret = 0;
    for (int i = 0; i < 4; ++i)
    {
        if (isValid(i1 + y[i], j1 + x[i]) && !used[i1 + y[i]][j1 + x[i]])
        {
            used[i1][j1] = used[i1 + y[i]][j1 + x[i]] = 1;
            ret += DFS(i2, j2);
            used[i1][j1] = used[i1 + y[i]][j1 + x[i]] = 0;
        }
    }
    return ret;
}

int main()
{
    while (cin >> x[0], x[0] > 4)
    {
        cin >> y[0] >> x[1] >> y[1] >> x[2] >> y[2] >> x[3] >> y[3];
        cout << DFS(0, 0) << endl;
    }
    return 0;
}
