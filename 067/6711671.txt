// #include<bits/stdc++.h>
#include <iostream>
#include <set>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <vector>
#include <string>
#include <bitset>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <utility>
#include <numeric>
#include <complex>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cassert>
#include <iterator>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <string>

using namespace std;

typedef long long ll;
#define rep(i, n) for(int i = 0; i < (n); i++)
#define pb push_back
const int maxn = 10000;
const int INF32 = 1050000000; // 1'050'000'000
const long long INF64 = 4000000000000000000; // 4'000'000'000'000'000'000
const int MOD7 = 1000000007; // 1'000'000'007
const int MOD9 = 1000000009; // 1'000'000'009
const int mod = MOD7;
const double EPS = 1e-9;

void ERROR(int num) { cout << "ERROR" << num << endl; }
ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
int dx[8]={-1,0,1,0,1,1,-1,-1};
int dy[8]={0,-1,0,1,1,-1,1,-1};
//std::setprecision

bool is_prime(long long N) {
    if (N == 1) return false;
    for (long long i = 2; i * i <= N; ++i) {
        if (N % i == 0) return false;
    }
    return true;
}



int main(){
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);
    //===============================
    // Input
    int n;
    cin >> n;
    vector<int> A(n);
    for(int i = 0; i < n; i++) cin >> A[i];
    int q;
    cin >> q;
    vector<int> M(q);
    unordered_map<int, bool> umap;
    for(int i = 0; i < q; i++){
        cin >> M[i];
        umap[M[i]] = false;
    }
    //===============================


    for(int bit = 0; bit < (1<<n); bit++){
        int sum = 0;
        for(int i = 0; i < n; i++){
            if(bit & (1<<i)) {
                sum += A[i];
            }
        }
        if(umap.find(sum) != umap.end()){
            umap[sum] = true;
        }
    }


    for(auto m : M){
        if(umap[m]) cout << "yes" << endl;
        else cout << "no" << endl;
    }


}


