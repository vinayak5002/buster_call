from collections import *

ans_list = []

while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break
    A = list(map(int, input().split()))
    W = list(map(int, input().split()))

    diff_can_make = set()

    for bit in range(1 << m):
        right = 0
        res = set()
        for i in range(m):
            if bit & (1 << i):
                right += W[i]
            else:
                res.add(W[i])
        l = len(res)
        res = list(res)
        for new_bit in range(1 << l):
            now = 0
            for i in range(l):
                if new_bit & (1 << i):
                    now += res[i]
            diff_can_make.add(abs(now - right))

    cnt_can_make = 0
    B = set()
    for a in A:
        if a not in diff_can_make:
            B.add(a)
        else:
            cnt_can_make += 1

    if cnt_can_make == len(A):
        ans_list.append(0)
        continue

    #以後はBのみ考えたらいい

    cnt = defaultdict(int)
    for b in B:
        already = set()
        for diff in diff_can_make:
            value1 = abs(diff - b)
            if value1 not in already:
                already.add(value1)
                cnt[value1] += 1
            value2 = diff + b
            if value2 not in already:
                already.add(value2)
                cnt[value2] += 1

    ans = 1 << 60
    for k, v in cnt.items():
        if v == len(B):
            ans = min(ans, k)
    
    if ans == 1 << 60:
        ans_list.append(-1)
    else:
        ans_list.append(ans)

print(*ans_list, sep = "\n")


