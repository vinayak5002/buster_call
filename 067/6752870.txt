#include<bits/stdc++.h>
using namespace std;

int main(){
  int N;
  cin >> N;
  for(int l=1;l<=N;l++){
    vector<string> vec(8);
    for(int j=0;j<8;j++) cin >> vec[j];
    int X,Y;
    cin >> Y >> X;
    X--;
    Y--;
    vector<vector<bool>> Bomb(8,vector<bool>(8,false));
    for(int i=0;i<8;i++) for(int j=0;j<8;j++) if(vec[i][j] == '1') Bomb[i][j] = true;
    vector<vector<bool>> seen(8,vector<bool>(8,false));
    seen[X][Y] = true;
    queue<pair<int,int>> que;
    que.push(make_pair(X,Y));
    while(!que.empty()){
      int x = que.front().first;
      int y = que.front().second;
      que.pop();
      for(int i=1;i<=3;i++){
        int nx = x+i;
        int ny = y;
        if(nx < 0 || nx >= 8 || ny < 0 || ny >= 8) continue;
        if(!seen[nx][ny] && vec[nx][ny] == '1'){
          seen[nx][ny] = true;
          que.push(make_pair(nx,ny));
        }
      }
      for(int i=1;i<=3;i++){
        int nx = x-i;
        int ny = y;
        if(nx < 0 || nx >= 8 || ny < 0 || ny >= 8) continue;
        if(!seen[nx][ny] && vec[nx][ny] == '1'){
          seen[nx][ny] = true;
          que.push(make_pair(nx,ny));
        }
      }
      for(int i=1;i<=3;i++){
        int nx = x;
        int ny = y+i;
        if(nx < 0 || nx >= 8 || ny < 0 || ny >= 8) continue;
        if(!seen[nx][ny] && vec[nx][ny] == '1'){
          seen[nx][ny] = true;
          que.push(make_pair(nx,ny));
        }
      }
      for(int i=1;i<=3;i++){
        int nx = x;
        int ny = y-i;
        if(nx < 0 || nx >= 8 || ny < 0 || ny >= 8) continue;
        if(!seen[nx][ny] && vec[nx][ny] == '1'){
          seen[nx][ny] = true;
          que.push(make_pair(nx,ny));
        }
      }
    }
    cout << "Data " << l << ":" << endl;
    for(int i=0;i<8;i++){
      for(int j=0;j<8;j++){
        if(!seen[i][j] && Bomb[i][j]) cout << 1;
        else cout << 0;
      }
      cout << endl;
    }
  }
}
