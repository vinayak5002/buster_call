#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ciN cin
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    vll P;
    rep(i, 100001) {
        if (i < 2)continue;
        bool C = 1;
        for (ll j = 2; j * j <= i; j++) {
            if (i % j == 0)C = 0;
        }
        if (C)P.push_back(i);
    }
    ll N = P.size();
    while (1) {
        ll M, A, B; cin >> M >> A >> B;
        if (M == 0)return 0;

        ll an = 0;
        ll y = -1, x = -1;
        rep(i, N) {
            ll q = P[i];
            auto ip = upper_bound(all(P), min(q, M / q));
            if (ip == P.begin())break;
            ip--;
            ll p = *ip;
            if (A * q <= B * p) {
                if (chmax(an, p * q)) {
                    x = p;
                    y = q;
                }
            }
        }
        cout << x << " " << y << endl;
        if (an > 0) {

        }

    }
}

