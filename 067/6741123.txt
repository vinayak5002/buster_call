import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main {

	public static void main(String[] args) {
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			int n = Integer.parseInt(br.readLine());
			int[] s = Arrays.stream(br.readLine().split(" "))
								.mapToInt(Integer::parseInt)
								.toArray();
			int q = Integer.parseInt(br.readLine());
			int[] t = Arrays.stream(br.readLine().split(" "))
								.mapToInt(Integer::parseInt)
								.toArray();
			int count = 0;
			for (int i = 0; i < t.length; i++) {
				if (binarySearch(n, s, t[i])) {
					count++;
				} 
			}
			System.out.println(count);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
	public static boolean binarySearch(int n, int[] s, int key) {
		
		int left = 0;
		int right = n;
		while (left < right) {
			int mid = (left + right) / 2;
			if (s[mid] == key) {
				return true;
			}
			else if (key < s[mid]) {
				right = mid;
			}
			else {
				left = mid + 1;
			}
		}
		return false;
	}
}

