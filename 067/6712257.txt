#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;
#define chmin(x,y) x = min(x,y)
#define chmax(x,y) x = max(x,y)
#define BIG_NUM 2000000000
#define HUGE_NUM 4000000000000000000 //オーバーフローに注意
#define MOD 1000000007
#define EPS 0.000000001



#define SIZE 100005


struct Edge{
	Edge(int arg_to,int arg_ch){
		to = arg_to;
		ch = arg_ch;
	}
	int to,ch;
};

int N;
ll POW[30];
map<int,ll> MAP;
vector<Edge> G[SIZE];
ll table[SIZE];

void dfs(int node,int pre,int value){

	MAP[value] += 1;
	table[node] = value;

	for(int i = 0; i < G[node].size(); i++){

		int child = G[node][i].to;
		if(child == pre)continue;

		dfs(child,node,value^POW[G[node][i].ch]);
	}
}


int main(){

	POW[0] = 1;
	for(int i = 1; i < 30; i++){

		POW[i] = POW[i-1]*2;
	}

	scanf("%d",&N);

	int a,b,ch;
	char buf[2];

	for(int i = 0; i < N-1; i++){

		scanf("%d %d %s",&a,&b,buf);

		a--;
		b--;
		ch = buf[0]-'a';

		G[a].push_back(Edge(b,ch));
		G[b].push_back(Edge(a,ch));
	}

	dfs(0,-1,0);

	ll ans = 0;

	for(auto at = MAP.begin(); at != MAP.end(); at++){

		ans += (at->second*(at->second-1))/2;

		for(int i = 0; i < 26; i++){

			if(at->first&POW[i]){

				ans += at->second * MAP[at->first^POW[i]];
			}
		}
	}

	printf("%lld\n",ans);

	return 0;
}

