#include<stdio.h>
long long int min(long long int a, long long int b)
{
	if (a < b)
		return a;
	else
		return b;
}
long long int l;
long long int sum[100005];
long long int k[2003];
long long int f(long long int a, long long int b)
{
	if (a > b)
	{
		a ^= b;
		b ^= a;
		a ^= b;
	}
	return (sum[k[b] + 1] - sum[k[a]]) / l;
}
int main()
{
	long long int n, m;
	scanf("%lld %lld %lld", &n, &m, &l);
	long long int i, j;
	for (i = 0; i < n; i++)
		scanf("%lld", &k[i]);
	long long int s[100005];
	for (i = 0; i < m; i++)
		scanf("%lld", &s[i]);
	for (i = 0; i < n; i++)
		k[i]--;
	for (i = 0; i < n - 1; i++)
	{
		if (k[i] > k[i + 1])
		{
			k[i] ^= k[i + 1];
			k[i + 1] ^= k[i];
			k[i] ^= k[i + 1];
			if (i > 0)
				i -= 2;
		}
	}
	sum[0] = 0;
	for (i = 0; i < m; i++)
		sum[i + 1] = sum[i] + s[i];
	long long int dp[2003][2003];
	for (i = 0; i < n; i++)
		for (j = 0; j < n; j++)
			dp[i][j] = 1e18;
	dp[0][0] = 0;
	for (i = 1; i < n; i++)
	{
		for (j = 0; j < i - 1; j++)
		{
			dp[i][j] = min(dp[i][j], dp[i - 1][j] + f(i, i - 1));
			dp[j][i] = min(dp[j][i], dp[j][i - 1] + f(i, i - 1));
		}
		if (i == 1)
		{
			dp[0][1] = dp[1][0] = f(0, 1);
		}
		else
		{
			j = i - 1;
			dp[i][j] = min(dp[i][j], dp[i - 2][j] + f(i, i - 2));
			dp[j][i] = min(dp[j][i], dp[j][i - 2] + f(i, i - 2));
		}
	}
	long long int ans = 1e18;
	for (i = 0; i < n - 1; i++)
		ans = min(ans, dp[n - 1][i] + f(n - 1, i));
	printf("%lld\n", ans);
	return 0;
}
