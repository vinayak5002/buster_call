#include <bits/stdc++.h>
using namespace std;

// clang-format off
template <typename T> inline bool chmax(T &a, const T &b) {if (a < b) {a = b; return true;} return false;}
template <typename T> inline bool chmin(T &a, const T &b) {if (a > b) {a = b; return true;} return false;}
// clang-format on

int getLargestSquare(int h, int w, vector<vector<int>> &grid);

int main() {
    int h, w;
    cin >> h >> w;
    vector<vector<int>> grid(h, vector<int>(w));
    for (int i = 0; i < h; i++) {
        for (int j = 0; j < w; j++) {
            cin >> grid.at(i).at(j);
        }
    }

    cout << getLargestSquare(h, w, grid) << endl;
}

int getLargestSquare(int h, int w, vector<vector<int>> &grid) {
    int max_square = 0;
    vector<vector<int>> dp(h + 1, vector<int>(w + 1, 0));
    for (int i = 0; i < h; i++) {
        for (int j = 0; j < w; j++) {
            if (grid.at(i).at(j)) {
                dp.at(i + 1).at(j + 1) = 0;
            } else {
                dp.at(i + 1).at(j + 1) =
                    min({dp.at(i).at(j), dp.at(i).at(j + 1),
                         dp.at(i + 1).at(j)}) +
                    1;
                chmax(max_square,
                      dp.at(i + 1).at(j + 1) * dp.at(i + 1).at(j + 1));
            }
        }
    }
    return max_square;
}
