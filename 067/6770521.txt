import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP

# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)


N, M, T = mi()
letter = []
letter = li()
ans = T
cnt = 0
for i in range(1,T):
    if letter[cnt]+M-1 < i:
        if cnt+1 <= len(letter)-1:
            cnt += 1
    if letter[cnt]-M <= i and i <= letter[cnt]+M-1 and cnt <= len(letter):
        ans -= 1
print(ans)

