#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;
typedef vector<bool> vb;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<P> vp;
typedef vector<vp> graph;
typedef vector<char> vc;
typedef vector<vc> vvc;
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
// const ll MOD = 1000000007;
const ll MOD = 998244353;
const ll INF = 1000000000000000000;
void yn(bool ok) { cout << (ok ? "yes\n" : "no\n"); }
void Yn(bool ok) { cout << (ok ? "Yes\n" : "No\n"); }
void YN(bool ok) { cout << (ok ? "YES\n" : "NO\n"); }
template <class T>
inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template <class T>
inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}
ll dx[8] = {-1, 0, 1, 0, 1, 1, -1, -1}, dy[8] = {0, 1, 0, -1, 1, -1, 1, -1};

void solve() {
    ll w, h;
    cin >> w >> h;
    if (!w) exit(0);
    vvl dis(h, vl(w, -1));
    vvl g(h * w);
    for (int i = 0; i < h; i++) {
        for (int j = 1; j < w; j++) {
            ll x;
            cin >> x;
            if (!x) {
                g[i * w + j].push_back(i * w + j - 1);
                g[i * w + j - 1].push_back(i * w + j);
            }
        }
        if (i != h - 1) {
            for (int j = 0; j < w; j++) {
                ll x;
                cin >> x;
                if (!x) {
                    g[i * w + j].push_back((i + 1) * w + j);
                    g[(i + 1) * w + j].push_back(i * w + j);
                }
            }
        }
    }
    queue<ll> que;
    que.push(0);
    dis[0][0] = 0;
    while (!que.empty()) {
        ll x = que.front();
        que.pop();
        for (auto y : g[x]) {
            ll ny = y / w, nx = y % w;
            if (!(0 <= ny && ny < h && 0 <= nx && nx < w)) continue;
            if (dis[ny][nx] != -1) continue;
            dis[ny][nx] = dis[x / w][x % w] + 1;
            que.push(ny * w + nx);
        }
    }
    cout << dis[h - 1][w - 1] + 1 << endl;
}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    ll t = 1;
    // cin >> t;
    for (int i = 1;; i++) solve();
    return 0;
}
