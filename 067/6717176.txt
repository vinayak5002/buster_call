using namespace std;
#include <bits/stdc++.h>

#define ll long long
#define ul unsigned long
#define dd long double
#define MAX 9223372036854775807
#define REP(i,st,N) for(ll i=st; i<N; i++)

ll sp;

ll solve(vector<ll>& sq1, vector<ll>& sq2, ll s) {
	vector<ll> e(3);
	REP(i, 0, 3) {
		ll mi = min(sq1[i], sq2[i]);
		ll ma = max(sq1[i], sq2[i]);
		e[i] = max(mi + s - ma, 0LL);
		if (e[i] == 0) return 0;
	}
	ll sum = 0;
	REP(i, 0, 3) sum += 2 * e[i] * e[(i + 1) % 3];
	return sum;
}

ll dfs(vector<vector<pair<ll, ll>>>& g, ll st, ll pre, ll k, ll initK, vector<bool>& done) {
	ll ans = -1;
	if (k == 0) {
		for (pair<ll, ll> p : g[st]) if (p.first == sp && initK != 2) return p.second;
		return 0;
	}

	for (pair<ll, ll> p : g[st]) if (p.first != pre && !done[p.first]) {
		done[p.first] = true;
		ll t = dfs(g, p.first, st, k - 1, initK, done);
		if (t >= 0) t += p.second;
		ans = max(ans, t);
		done[p.first] = false;
	}
	return ans;
}

int main() {
	while (1) {
		ll n, k, s; cin >> n >> k >> s;
		if (!(n || k || s)) break;
		vector<vector<ll>> sq;
		ll ma = 6 * s * s * k;
		REP(i, 0, n) {
			vector<ll> c(3);
			cin >> c[0] >> c[1] >> c[2];
			sq.push_back(c);
		}
		if (n == 1 || k == 1) {
			cout << ma << endl;
			continue;
		}
		vector<vector<pair<ll, ll>>> g(n);
		REP(i, 0, n) REP(j, i + 1, n) {
			ll x = solve(sq[i], sq[j], s);
			if (x > 0) {
				g[i].push_back({ j,x });
				g[j].push_back({ i,x });
			}
		}
		ll x = 0;
		vector<bool> done(n, false);
		REP(i, 0, n) {
			sp = i;
			x = max(x, dfs(g, i, -1, k - 1,k, done));
		}
		if (x <= 0) cout << -1 << endl;
		else cout << ma - x << endl;
	}
	return 0;
}
