package main

import (
    "fmt"
    "bufio"
    "os"
    "strings"
    "strconv"
)

const BUFSIZE = 10000000
var rdr *bufio.Reader
func readline() string { buf := make([]byte, 0, 16); for { l, p, e := rdr.ReadLine(); if e != nil { fmt.Println(e.Error()); panic(e) }; buf = append(buf, l...); if !p { break } }; return string(buf) }
func readIntSlice() []int { slice := make([]int, 0); lines := strings.Split(readline(), " "); for _, v := range lines { slice = append(slice, s2i(v)) }; return slice; }
func s2i(s string) int { v, ok := strconv.Atoi(s); if ok != nil { panic("Faild : " + s + " can't convert to int") }; return v }
func readint() int { return s2i(readline()) }

func main() {
    rdr = bufio.NewReaderSize(os.Stdin, BUFSIZE)
    n := readint()
    a := readIntSlice()
    q := readint()
    m := readIntSlice()

    for i := 0; i < q; i++ {
        ans := "no"
        for bit := 0; bit < (1 << n); bit++ {
            sum := 0
            for j := 0; j < n; j++ {
                if ((bit >> j) & 1 ) == 1 {
                    sum += a[j]
                }
            }
            if sum == m[i] {
                ans = "yes"
                break
            }
        }
        fmt.Println(ans)
    }
}
