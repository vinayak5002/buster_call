#include<iostream>
using namespace std;
int main(){
    int N,ind=1;
    string h,A[50],B[50],C[50],D[50];
    cin>>N;
    for(int i=1;i<=N;i++){
        cin>>A[i];
        B[i]=A[i];
        C[i]=A[i];
    }
    for(int i=1;i<=15;i++){
        for(int j=1;j<=N;j++){
            if(C[j][1]-'0' ==i){
                D[ind].clear();
                D[ind].insert(0,C[j]);
                ind++;
            }
        }
    }
    for(int i=1+i<=N;i++){
        for(int j=N;j>=i+1;j--){
            if(A[j][1]-'0' < A[j-1][1]-'0'){
                h.clear();
                h.insert(0,A[j]);
                A[j].clear();
                A[j].insert(0,A[j-1]);
                A[j-1].clear();
                A[j-1].insert(0,h);
            }
        }
    }
    bool stable=true;
    for(int i=1;i<=N;i++){
        if(A[i] !=D[i]){
            stable=false;
            break;
        }
    }
    for(int i=1;i<=N;i++){
        cout<<A[i];
        if(i !=N)cout<<" ";
    }
    cout<<endl;
    if(stable)cout<<"Stable"<<endl;
    else cout<<"Not stable"<<endl;
    for(int i=1;i<=N;i++){
        int mini=i;
        for(int j=1;j<=N,j++){
            if(B[j][1]-'0'<B[mini][1]-'0'){
                mini=j;
            }
        }
        h.clear();
        h.insert(0,B[i]);
        B[i].clear();
        B[i].insert(0,B[mini]);
        B[mini].clear();
        B[mini].insert(0,h);
    }
    stable = true;
    for(int i=1;i<=N;i++){
        cout<<endl;
        if(i !=N)cout<<" ";
    }
    cout<<endl;
    if(stable)cout<<"Stable"<<endl;
    else cout<<"Not stable"<<endl;
    return 0;
}
