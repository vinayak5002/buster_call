#include <iostream>
using namespace std;

void makeSet(long long);
void relate(long long,long long,long long);
long long findSet(long long);
bool same(long long,long long);
long long diff(long long,long long);

long long p[100000];
long long r[100000];
long long w[100000];

int main(){
  long long n,q; cin >> n >> q;
  long long query,x,y,z;

  for(int i=0; i<n; i++) makeSet(i);

  for(int i=0; i<q; i++){
    cin >> query;
    if(query == 0){
      cin >> x >> y >> z;
      relate(x,y,z);
    } else {
      cin >> x >> y;
      if(same(x,y)) cout << diff(x,y) << endl;
      else cout << '?' << endl;
    }
  }

  return 0;
}

void makeSet(long long x){
  p[x] = x;
  r[x] = 0;
  w[x] = 0;
}

void relate(long long x, long long y, long long z){
  p[x] = findSet(x);
  p[y] = findSet(y);
  z = z - (w[y] - w[x]);

  if(r[p[x]] > r[p[y]]){
    w[p[y]] = z;
    p[p[y]] = p[x];
  } else {
    w[p[x]] = -z;
    p[p[x]] = p[y];
  }

  if(r[p[x]] == r[p[y]]) r[p[y]] = r[p[y]]+1;
}

long long findSet(long long x){
  if(x != p[x]){
    w[x] += w[p[x]];
    p[x] = findSet(p[x]);
  }

  return p[x];
}

bool same(long long x, long long y){
  return findSet(x) == findSet(y);
}

long long diff(long long x, long long y){
  return w[y] - w[x];
}

