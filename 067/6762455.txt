#!/usr/bin/env pypy3
from collections import Counter, deque, defaultdict
from itertools import permutations, combinations, accumulate, product, chain
from functools import lru_cache
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heapify, heappush, heappop
from array import array
from decimal import Decimal
from copy import deepcopy
from pprint import pprint
from string import ascii_uppercase, ascii_lowercase, ascii_letters
from math import factorial, floor, ceil, sqrt, log, log2, log10
import math
import sys
sys.setrecursionlimit(1<<30)

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

if __name__ == '__main__':
    while True:
        N = int(readline())
        if N == 0:
            break
        A = [0] * (24 * 60 * 60 + 1)
        for _ in range(N):
            lauched, arrived = readline().split()
            h1, m1, s1 = map(int, lauched.split(':'))
            h2, m2, s2 = map(int, arrived.split(':'))
            A[h1*60*60+m1*60+s1] += 1
            A[h2*60*60+m2*60+s2] -= 1
        AA = list(accumulate(A))
        print(max(AA))

