
import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP


# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while True:
    t, d, l = mi()
    if t == 0:
        break
    ans = 0
    cnt = 0
    X = []
    for i in range(t):
        X.append(ii())
    for i in range(t-1):
        if X[i] >= l:
            for j in range(1,d+1):
                if i+j < t:
                    ans += 1
                    if X[i+j] >= l:
                        break
    print(ans)




