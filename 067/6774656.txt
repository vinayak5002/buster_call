#include <stdio.h>

int par[103000], query[103000][2], marked[103000], uf_g[103000], res[103000];

int uf_find(int x) {
    if (!uf_g[x]) return x;
    else return uf_g[x] = uf_find(uf_g[x]);
}

void uf_uni(int x, int y) {
    if (uf_find(x) == uf_find(y)) return;
    uf_g[uf_find(y)] = uf_find(x);
}

int main(void) {
    int n, q;
    long long res = 0;
    char c;
    scanf("%d %d", &n, &q);
    for (int i = 2; i <= n; i++) {
        scanf("%d", &par[i]);
    }
    for (int i = 0; i < q; i++) {
        scanf(" %c %d", &c, &query[q - i - 1][1]);
        if (c == 'M') {
            query[q - i - 1][0] = 1;
            marked[query[q - i - 1][1]] = 1;
        }
        else query[q - i - 1][0] = 2;
    }
    marked[1] = 1;
    for (int i = 2; i <= n; i++) {
        if (!marked[i]) uf_uni(par[i], i);
    }
    for (int i = 0; i < q; i++) {
        if (query[i][0] == 1) {
            marked[query[i][1]] = 0;
            uf_uni(par[query[i][1]], query[i][1]);
        }
        else {
            res += uf_find(query[i][1]);
        }
    }
    printf("%lld\n", res);
    return 0;
}
