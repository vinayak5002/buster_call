#include <bits/stdc++.h>
using namespace std ;
#define MAX 2000000002
#define NIL -2000000002
#define INF 2000000002
#define MAXN 123456
#define M 1000000007
// const int M = 1e7 のようにかく。

typedef long long int ll;
const int debug = 0 ; 
const int debug1 = 0 ; 
#define REP(i,n) for(int i=0; i<(int)n; i++)

int linear(int *A, int *B, int &n, int &m){
    int cnt = 0;
    REP(i,n) {
        REP(j,m) {
            if (A[i]==B[j]) cnt++;
        }
    }
    return cnt;
}

//ポインタ渡しと参照渡し
// 参照渡しはC++で追加された
// ポインタ渡しは　通常は&で渡して、*で受ける。（受けたのはポインタ）
// 参照渡しはそのまま渡して、&で受ける。（受けたのは値を参照した値）
// 結果は同じような感じ。

//「配列渡し」は「ポインタ渡し」の一種でポインタ変数を引数として使うことは同じですが
//、呼び出し元の実引数が変数ではなくて配列であるという違いがあります。
// 要するに&をつけない？

int main() {
    int n , m ;
    int A[10001], B[501];

    scanf ("%d",&n);
    REP(i,n){ 
        scanf("%d",&A[i]);
    }
    scanf ("%d",&m);
    REP(i,m){ 
        scanf("%d",&B[i]);
    }

    printf("%d\n", linear(A,B,n,m) );

    return 0;
}


