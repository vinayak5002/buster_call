#pragma region

#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <numeric> // gcd, lcm
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

using ull = unsigned long long;
using ll = long long;
using vi = vector<int>;
using vll = vector<ll>;
using vvi = vector<vi>;
using vvll = vector<vll>;
using vs = vector<string>;
using pii = pair<int,int>;
using vpii = vector<pii>;

#pragma endregion

const int INF = (1ll << 31) - 1;

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n, k; cin >> n >> k;
    vll w(n+1, 0);
    for(int i=0; i<n; ++i){
        ll v; cin >> v;
        w[i+1] = v + w[i];
    }

    ll ok = INF, ng = 0;
    while(abs(ok - ng) > 1){
        ll mid = ok - (ok - ng)/2;
        int nt = 0;
        auto it = w.begin(), ite = w.end();
        while(it != ite - 1 and nt < k){
            it = upper_bound(it, ite, *it + mid) - 1;
            nt++;
        }
        if(it != ite-1) ok = mid;
        else ng = mid;
    }

    return 0;
}
