#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const int mod=10007;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N,K;
	cin>>N>>K;
	vector<ll> X(2*N),Y(N*2),Z(N*2);
	rep(i,N*2){
		cin>>X[i]>>Y[i]>>Z[i];
	}
	auto f=[&](vector<ll> p)->pair<vector<int>,vector<int>>{
		vector<int> order(N*2),rev(N*2);
		rep(i,N*2) order[i]=i;
		sort(all(order),[&](int l,int r){
			return p[l]<p[r];
		});
		rep(i,N*2) rev[order[i]]=i;
		return {order,rev};
	};
	vector<int> X_o,X_r,Y_o,Y_r,Z_o,Z_r;
	tie(X_o,X_r)=f(X);
	tie(Y_o,Y_r)=f(Y);
	tie(Z_o,Z_r)=f(Z);
	vector<vector<vector<int>>> dp(N*2,vector<vector<int>>(N*2,vector<int>(N*2)));
	rep(i,N){
		vector<int> p={X_r[i*2],X_r[i*2+1]},q={Y_r[i*2],Y_r[i*2+1]},r={Z_r[i*2],Z_r[i*2+1]};
		rep(j,8){
			vector<int> s(3);
			int C=1;
			rep(k,3){
				if(j&(1<<k)) s[k]=1,C*=-1;
			}
			dp[p[s[0]]][q[s[1]]][r[s[2]]]+=C;
		}
	}
	ll ans=0;
	rep(i,N*2) rep(j,N*2) rep(k,N*2-1) dp[i][j][k+1]+=dp[i][j][k];
	rep(i,N*2) rep(j,N*2-1) rep(k,N*2) dp[i][j+1][k]+=dp[i][j][k];
	rep(i,N*2-1) rep(j,N*2) rep(k,N*2) dp[i+1][j][k]+=dp[i][j][k];
	rep(i,N*2) rep(j,N*2) rep(k,N*2){
		if(dp[i][j][k]>=K){
			ans+=(X[X_o[i+1]]-X[X_o[i]])*(Y[Y_o[j+1]]-Y[Y_o[j]])*(Z[Z_o[k+1]]-Z[Z_o[k]]);
		}
	}
	cout<<ans<<"\n";
}

