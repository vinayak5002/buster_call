#include <iostream>
#define INF 2147483647
using namespace std;

void initRUQ(int);
int find(int);
void update(int,int,int,pair<int,int>,int,int);

int n;
pair<int,int> D[600000];

int main(){
  int m,q; cin >> m >> q;
  int query,s,t,u,x;
  
  initRUQ(m);
  
  for(int i=0; i<q; i++){
    cin >> query;
    if(query){
      cin >> u;
      cout << find(u) <<endl;
    } else {
      cin >> s >> t >> x;
      update(s,t+1,0,pair<int,int>(i,x),0,n);
    }
  }
  
  return 0;
}

void initRUQ(int n_){
  n = 1;
  
  while(n < n_) n *= 2;
  
  for(int i=0; i<2*n-1; i++){
    D[i].first = -1;
    D[i].second = INF;
  }
}

int find(int k){
  k += n-1;
  pair<int,int> d = D[k];

  while(k > 0){
    k = (k-1)/2;
    d = max(d,D[k]);
  }
  
  return d.second;
}

void update(int a, int b, int k, pair<int,int> d, int l, int r){
  if(r <= a || b <= l) return;
  if(a <= l && r <= b) D[k] = d;
  else {
    update(a,b,k*2+1,d,l,(l+r)/2);
    update(a,b,k*2+2,d,(l+r)/2,r);
  }
}

