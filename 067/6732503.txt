#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ciN cin
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    
    ll D,N;
    cin>>D>>N;
    vvll DP(D,vll(N,-1e18));
    vll T(D);
    rep(i,D)cin>>T[i];
    vll A(N),B(N),C(N);
    rep(i,N){
        cin>>A[i]>>B[i]>>C[i];
        if(A[i]<=T[0]&&T[0]<=B[i]){
            DP[0][i]=0;
        }
    }
    rep(d,D-1){
        rep(n,N){
            if(A[n]>T[d+1]||B[n]<T[d+1])continue;
            rep(j,N){
                chmax(DP[d+1][n],DP[d][j]+abs(C[n]-C[j]));
            }
        }
    }
    ll an=0;
    rep(i,N)chmax(an,DP[D-1][i]);
    cout<<an<<endl;

}

