#include<bits/stdc++.h>
using namespace std;

vector<string> bubbleSort(vector<string> a){
    for(int i=0; i<a.size(); i++){
        for(int j=a.size()-1; j>=1; j--){
            if(int(a[j][1])<int(a[j-1][1])) swap(a[j], a[j-1]);
        }
    }
    return a;
}

vector<string> selectionSort(vector<string> a){
    for(int i=0; i<a.size(); i++){
        int minj=i;
        for(int j=i; j<a.size(); j++){
            if(int(a[j][1])<int(a[minj][1])) minj=j;
        }
        swap(a[i], a[minj]);
    }
    return a;
}

void checkStable(vector<string> sorted_a, vector<string> a){
    bool flag = true;
    for(int i=0; i<a.size()-1; i++){
        if(sorted_a[i][1] == sorted_a[i+1][1]){
            if(find(a.begin(), a.end(), sorted_a[i]) > find(a.begin(), a.end(), sorted_a[i+1])) flag = false;
        }
    }
    if(flag) cout << "Stable";
    else cout << "Not stable";
    cout << endl;
}

int main(){
    int n;
    cin >> n;
    vector<string> a(n), bubble_a(n), selection_a(n);
    for(int i=0; i<n; i++) cin >> a[i];

    /*バブルソート*/
    bubble_a = bubbleSort(a);
    for(int i=0; i<n; i++){
        cout << bubble_a[i];
        if(i<n-1) cout << " ";
    }
    cout << endl;
    /*安定判定*/
    checkStable(bubble_a, a);

    /*セレクションソート*/
    selection_a = selectionSort(a);
    for(int i=0; i<n; i++){
        cout << selection_a[i];
        if(i<n-1) cout << " ";
    }
    cout << endl;
    /*安定判定*/
    checkStable(selection_a, a);

    return 0;
}
