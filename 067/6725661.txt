#include<bits/stdc++.h>
// #include<atcoder/modint>
using namespace std;
// using namespace atcoder;
const int inf = 1 << 30;
bool furniture[600][600];
const int pl = 300;
int dist[600][600][6];
int dx[6] = {0, 1, 1, 0, -1, -1};
int dy[6] = {1, 0, -1, -1, -1, 0};
int dy2[6] = {1, 1, 0, -1, 0, 1};

void solve(){
	int sx, sy, gx, gy, n, lx, ly;
	cin >> sx >> sy >> gx >> gy >> n;
	sx += pl;
	sy += pl;
	gx += pl;
	gy += pl;
	int x, y;
	for(int i = 0; i < n; i++){
		cin >> x >> y;
		furniture[x + pl][y + pl] = true;
	}
	cin >> lx >> ly;
	int mi_x = pl - lx;
	int ma_x = pl + lx;
	int mi_y = pl - ly;
	int ma_y = pl + ly;
	for(int k = 0; k < 6; k++){
		for(int i = mi_x; i <= ma_x; i++){
			for(int j = mi_y; j <= ma_y; j++){
				dist[i][j][k] = inf;
			}
		}
		for(int j = mi_y - 1; j <= ma_y + 1; j++){
			furniture[mi_x - 1][j] = true;
			furniture[ma_x + 1][j] = true;
		}
		for(int i = mi_x - 1; i <= ma_x + 1; i++){
			furniture[i][mi_y - 1] = true;
			furniture[i][ma_y + 1] = true;
		}
	}
	deque<pair<pair<int, int>, pair<int, int>>> deq;
	deq.push_back({{sx, sy}, {0, 0}});
	dist[sx][sy][0] = 0;
	int t, c;
	while(!deq.empty()){
		x = deq.front().first.first;
		y = deq.front().first.second;
		t = deq.front().second.first;
		c = deq.front().second.second;
		deq.pop_front();
		if(dist[x][y][t] < c) continue;
		int nt = (t == 5)? 0:t+1;
		int kk = abs((x - pl) * (y - pl) * t) % 6;
		
		for(int k = 0; k < 6; k++){
			int nx, ny;
			if(x & 1){
				nx = x + dx[k];
				ny = y + dy2[k];
			}
			else{
				nx = x + dx[k];
				ny = y + dy[k];
			}
			if(furniture[nx][ny]) continue;
			if(k == kk){
				if(dist[nx][ny][nt] > c){
					dist[nx][ny][nt] = c;
					deq.push_front({{nx, ny}, {nt, c}});
				}
			}
			else{
				if(dist[nx][ny][nt] > c + 1){
					dist[nx][ny][nt] = c + 1;
					deq.push_back({{nx, ny}, {nt, c + 1}});
				}
			}
		}
		if(dist[x][y][nt] > c + 1){
			dist[x][y][nt] = c + 1;
			deq.push_back({{x, y}, {nt, c + 1}});
		}
		
	}
	int ans = inf;
	for(int k = 0; k < 6; k++){
		ans = min(ans, dist[gx][gy][k]);
	}
	cout << ((ans == inf)? -1:ans) << "\n";

}

int main(){
    cin.tie(0)->sync_with_stdio(0);
    int t;
    t = 1;
    // cin >> t;
    while(t--) solve();
}
    
    
