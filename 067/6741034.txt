#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define reps(i,start,end) for(int i = start; i < (int)(end); i++)
#define ll long long
#define print(t) cout << t << endl
#define all(a)  (a).begin(),(a).end()
// << std::fixed << std::setprecision(0)
const ll INF = 1LL << 60;

template<class T> void chmin(T& a, T b){
 if(a > b){
  a = b;
 }
}

template<class T> void chmax(T& a, T b){
 if(a < b){
  a = b;
 }
}

template<class T> void change(T& a, T& b){
 auto c = a;
 a = b;
 b = c;
}
//mod必要時,modの値変更
const long long mod = 998244353;

struct Mint {
    int val;
    Mint inv() const{
        int tmp,a=val,b=mod,x=1,y=0;
        while(b)tmp=a/b,a-=tmp*b,swap(a,b),x-=tmp*y,swap(x,y);
        return Mint(x);
    }

public:
    Mint():val(0){}
    Mint(ll x){if((val=x%mod)<0)val+=mod;}
    Mint pow(ll t){Mint res=1,b=*this; while(t){if(t&1)res*=b;b*=b;t>>=1;}return res;}
    Mint& operator+=(const Mint& x){if((val+=x.val)>=mod)val-=mod;return *this;}
    Mint& operator-=(const Mint& x){if((val+=mod-x.val)>=mod)val-=mod; return *this;}
    Mint& operator*=(const Mint& x){val=(ll)val*x.val%mod; return *this;}
    Mint& operator/=(const Mint& x){return *this*=x.inv();}
    bool operator==(const Mint& x) const{return val==x.val;}
    bool operator!=(const Mint& x) const{return val!=x.val;}
    bool operator<(const Mint& x) const{return val<x.val;}
    bool operator<=(const Mint& x) const{return val<=x.val;}
    bool operator>(const Mint& x) const{return val>x.val;}
    bool operator>=(const Mint& x) const{return val>=x.val;}
    Mint operator+(const Mint& x) const{return Mint(*this)+=x;}
    Mint operator-(const Mint& x) const{return Mint(*this)-=x;}
    Mint operator*(const Mint& x) const{return Mint(*this)*=x;}
    Mint operator/(const Mint& x) const{return Mint(*this)/=x;}
};
template<class Tp>
bool zero (const Tp &x) {
    return x == 0;
}

template<class Tp, class... Args>
bool zero (const Tp &x, const Args& ...args) {
    return zero(x) and zero(args...);
}
int main(){
  while(true){
    int h,w; cin >> h >> w;
    if(zero(h,w)){
      break;
    }
    // table[1][1] は1,1ってこと！！１
    vector<vector<double>> table(h ,vector<double> (w));
    // 行ごと和
    vector<double> sumx(h,0);
    // 列ごとわ
    vector<double> sumy(w,0);

    rep(i,h){
      string s;cin >> s;
      rep(j,w){
        table[i][j] = s[j] - '0';
        sumx[i] += s[j] - '0';
        sumy[j] += s[j] - '0';
      }
    }
    // debug
    // rep(i,h) cout << sumx[i] << " ";
    // cout << endl;
    // rep(j,w) cout << sumy[j] << " ";
    // cout << endl;


    // 縦r
    double small = 0;
    double big = h;
    while(abs(big - small) > pow(10,-7)){
      double mid = (big + small) /2;
      double moment = 0;
      rep(i,h){
        moment += sumx[i] * (i-mid);
      }

      if(moment == 0){
        big = mid;
        small = mid;
      }else if(moment >0)small = mid;
      else if(moment <0) big = mid;

    }
    double r = (big + small) /2;

    // yoko c
    double Small =0;
    double Big = w;
    while(abs(Big - Small) > pow(10,-7)){
      double mid = (Big + Small) /2;
      double moment = 0;
      rep(j,w){
        moment += sumy[j] * (j - mid);
      }

      if(moment == 0){
        Big = mid;
        Small = mid;
      }if(moment > 0) Small = mid;
      else if(moment < 0)Big = mid;
    }
    double c = (Big + Small) /2;

    cout << std::fixed << std::setprecision(7) << r + 1 << " " << c  + 1<< endl;
  }
}

