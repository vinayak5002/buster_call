fn main() {
    let num_lines: i32 = take_value_from_std_in()
                        .trim()
                        .parse()
                        .expect("Error while parsing");

    let mut num_i: i32 = take_value_from_std_in()
                            .trim()
                            .parse()
                            .expect("Error while parsing");
    let mut num_j: i32 = take_value_from_std_in()
                            .trim()
                            .parse()
                            .expect("Error while parsing");
    
    let mut max = num_j - num_i;

    for _i in 1..(num_lines - 1) {
        num_i = num_j;
        num_j = take_value_from_std_in()
                    .trim()
                    .parse()
                    .expect("Error while parsing");
        
        let val = num_j - num_i;
        if max < val {
            max = val;
        }
    }

    println!("{}", max);
}

fn take_value_from_std_in() -> String {
    let mut inp = String::new();
    std::io::stdin()
        .read_line(&mut inp)
        .expect("read line error");

    inp
}

