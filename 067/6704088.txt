//#include <bits/stdc++.h>
#include<iostream>
#include<vector>
#include<queue>
using namespace std;
typedef long long  ll;

double PI = 3.1415926535;
const int INF = 2147483647;
//printf("%.10f\n",x)
//vector<ll> a(N + 1, -1);
//ll a, x; cin >> a >> x;
//ll n; cin >> n;

const ll LINF = 9223372036854775807;
#define repe(i,s,n)for(ll i=s;i<=n;i++)
#define rep(i,s,n)for(ll i=s;i<n;i++)
#define rep_r(i,s,n)for(ll i=n-1;i>=s;i--)
#define rep_re(i,s,n)for(ll i=n;i>=s;i--)
const ll MOD = 1e9 + 7;

vector<vector<ll>> v(200001);
vector<ll> dist(200001, LINF);

void bfs(ll start) {
	queue<ll> q;
	q.push(start);
	dist[start] = 0;

	while (!q.empty()) {
		ll p = q.front(); q.pop();

		rep(i, 0, v[p].size()) {
			ll next = v[p][i];
			//if (dist[next] > dist[p] + 1) {
			//	q.push(next);
			//	dist[next] = min(dist[next], dist[p] + 1);
			//}
			if (dist[next] == LINF) {
				q.push(next);
				dist[next] = min(dist[next], dist[p] + 1);
			}
		}
	}
}

int main() {
	ll n; cin >> n;

	repe(i, 1, n) {
		ll p; cin >> p;
		ll m; cin >> m;

		rep(j, 0, m) {
			ll k; cin >> k;
			v[p].push_back(k);
		}
	}

	bfs(1);

	repe(i, 1, n) {
		cout << i << " ";
		if (dist[i] == LINF) {
			cout << -1 << endl;
		}
		else {
			cout << dist[i] << endl;;
		}
	}

	return 0;
}
