#include <stdio.h>

#define M 200001
#define S 2000000000

typedef long long lll;

int l[M / 2 + 2], r[M / 2 + 2];

lll merge(int a[], int left, int mid, int right)
{
    int i, k, n1, n2;
    int s = 0, t = 0;
    lll c = 0;

    n1 = mid - left;
    n2 = right - mid;

    for (i = 0; i < n1; i++)
    {
        l[i] = a[left + i];
    }

    for (i = 0; i < n2; i++)
    {
        r[i] = a[mid + i];
    }

    l[n1] = S;
    r[n2] = S;

    for (k = left; k < right; k++)
    {
        if (l[s] <= r[t])
        {
            a[k] = l[s];
            s = s + 1;
        }

        else
        {
            a[k] = r[t];
            t = t + 1;
            c = c + n1 - s;
        }
    }

    return c;
}

lll mergeSort(int a[], int left, int right)
{
    int mid;
    lll v1, v2, v3;

    if (left + 1 < right)
    {
        mid = (left + right) / 2;

        v1 = mergeSort(a, left, mid);
        v2 = mergeSort(a, mid, right);
        v3 = merge(a, left, mid, right);

        return v1 + v2 + v3;
    }

    else
    {
        return 0;
    }
}

int main()
{
    int a[M];
    int n, i;
    lll ans;

    scanf("%d", &n);

    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }

    ans = mergeSort(a, 0, n);

    printf("%lld\n", ans);

    return 0;
}

