#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

template<class T>
bool chmin(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    if (b == 0)return a;
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

vector<ll> fact, factinv, inv;
ll mod = 1e9 + 7;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (k < 0)return 0;
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);


    while(1){
        ll N;
        cin>>N;
        if(N==0)return 0;
        ll A,B,C,D;
        cin>>A>>B>>C>>D;

        ll an=0;
        
        vll X(N+1),Y(N+1);
        rep(i,N+1)cin>>X[i]>>Y[i];
        vll Dam(N+1,1e18);
        rep(i,N+1){
            if(A<=X[i]&&X[i]<=C&&B<=Y[i]&&Y[i]<=D){
                Dam[i]=0;
                continue;
            }
            for(ll a=A;a<=C;a++){
                chmin(Dam[i],abs(X[i]-a)+abs(Y[i]-B));
                chmin(Dam[i],abs(X[i]-a)+abs(Y[i]-D));
            }
            for(ll b=B;b<=D;b++){
                chmin(Dam[i],abs(X[i]-A)+abs(Y[i]-b));
                chmin(Dam[i],abs(X[i]-C)+abs(Y[i]-b));
            }
        }
        //ll an=0;
        rep(i,N){
            an+=min(abs(X[i]-X[i+1])+abs(Y[i]-Y[i+1]),Dam[i]+Dam[i+1]-(Dam[i]!=0?1:0));
        }
        cout<<an<<endl;


    }

}

