from collections import deque


def bfs(h,w):
    l = [list(map(int,input().split())) for _ in range(h)]
    def isin(y,x):
        return 0 <= y < h and 0 <= x < w
    def done(y,x):
        l[y][x] = 0
        for i in range(-1,2):
            for j in range(-1,2):
                ny = y + i
                nx = x + j
                if isin(ny,nx) and l[ny][nx] == 1:
                    done(ny,nx)
    res = 0
    for i in range(h):
        for j in range(w):
            if l[i][j] == 1:
                done(i,j)
                res += 1
    return res

while True:
    w,h = map(int,input().split())
    if h == 0:
        break
    print(bfs(h,w))

