/*#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")*/
#include<bits/stdc++.h>
#define rep(i,s,n) for(int i = s; i < n; ++i)
#define rrep(i,s,n) for(int i = s; i >= n; --i)
#define fi first
#define se second
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define SUM(a) accumulate(all(a),0LL)
#define MAX(a) *max_element(all(a))
#define MIN(a) *min_element(all(a))
#define fi first
#define se second
#define len(x) (int)(x).size()
#define dup(x,y) (((x)+(y)-1)/(y))
#define pb push_back
#define eb emplace_back
#define em emplace
#define pq(T) priority_queue<T,vector<T>,greater<T>>
using namespace std;
template <class T> inline vector<vector<T>> vector2(const size_t &i, const size_t &j, const T &init = T()) {
  return vector<vector<T>>(i, vector<T>(j, init));
}
template <class T> inline vector<vector<vector<T>>> vector3(const size_t &i, const size_t &j, const int &k, const T &init = T()) {
  return vector<vector<vector<T>>>(i, vector<vector<T>>(j, vector<T>(k, init)));
}
template <class T> inline vector<vector<vector<vector<T>>>> vector4(const size_t &i, const size_t &j, const size_t &k, const size_t &l, const T &init = T()) {
  return vector<vector<vector<vector<T>>>>(i, vector<vector<vector<T>>>(j, vector<vector<T>>(k, vector<T>(l, init))));
}
template<class T,class U>bool chmax(T &a,const U &b){return ((a<b) ? (a=b, true) : false);}
template<class T,class U>bool chmin(T &a,const U &b){return ((a>b) ? (a=b, true) : false);}
using ll = long long;
using P = pair<int,int>;
using PP = pair<P, P>;
using Pint = pair<P, int>;
using intP = pair<int, P>;
// ================= ここまでテンプレ =================

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  while(true){
    int n;
    cin >> n;
    if (n == 0)break;
    vector<P> ans(n);
    rep(i,0,n){
      char c;
      int d = 0;
      while(true){
        cin >> c;
        if (c != '.'){
          break;
        }else{
          ++d;
        }
      }
      if(c == '+'){
        ans[i] = P(d,10);
      }else if(c == '*'){
        ans[i] = P(d,11);
      }else{
        ans[i] = P(d,c-'0');
      }
    }
    
    while(len(ans) != 1){
      int ma = 0;
      for(P i:ans){
        chmax(ma,i.fi);
      }
      vector<P> temp;
      int c = -1,cnt = -1;
      for(auto i:ans){
        if ((i.se == 10 || i.se == 11) && i.fi == ma-1){
          c = i.se;
        }else if(i.fi == ma){
          if(cnt == -1){
            cnt = i.se;
          }else{
            if (c == 10){
              cnt += i.se;
            }else{
              cnt *= i.se;
            }
          }
        }else{
          if(cnt != -1){
            temp.eb(ma-1,cnt);
            cnt = -1;
            c = -1;
          }
          temp.pb(i);
        }
      }
      if(cnt != -1){
        temp.eb(ma-1,cnt);
        cnt = -1;
        c = -1;
      }
      ans = temp;
    }
    cout << ans[0].se << endl;
  }


  return 0;
}
