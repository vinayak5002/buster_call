#include <bits/stdc++.h>
#define rep(i, n) for (long long  i = 0; i < (long long )(n); i++) 
#define all(x) (x).begin(),(x).end() 
#define fix(x) fixed << setprecision(x)
#define BACK(x) x.rbegin(),x.rend()
//MOD1 1000000007
//MOD2 998244353
#define pb push_back
#define mp make_pair
#define bit(n) (1LL<<(n))
using namespace std;
using ull = unsigned long long;
using ll = long long;
using vl = vector<long long>;
using vvl = vector<vector<long long>>;
using vs = vector<string>;
using pl = pair<long long, long long>;
template <typename T> inline bool chmin(T& a, const T& b) {bool compare = a > b; if (a > b) a = b; return compare;}
template <typename T> inline bool chmax(T& a, const T& b) {bool compare = a < b; if (a < b) a = b; return compare;}
const ll INF = 1LL << 60;
//#include <atcoder/all>
//using namespace atcoder;
//using mint = modint1000000007;
//using mint = modint998244353;
int dx[] = {1,0,-1,0};
int dy[] = {0,1,0,-1};
int H,W;
void dfs(int x,int y,vector<vector<bool>>& seen, vvl &c){
  seen[x][y] = true;
  rep(d,4){
    int nx =  x+dx[d];
    int ny =  y+dy[d];
    if(0<=nx&&0<=ny&&nx<H&&ny<W&&c[nx][ny]==1){
      dfs(nx,ny,seen,c);
    }
  }
}
void solve2(vvl &c){
  vector<vector<bool>> seen(H,vector<bool>(W));
  int ans =0;
  rep(i,W){
    rep(j,H){
      if(seen[i][j])continue;
      dfs(i,j,seen,c);
      ans++;
    }
  }
  cout<<ans<<endl;
  return;
}
void solve(){
  while(true){
    cin>>H>>W;
    if(H==0&&W==0)return;
    vector<vector<ll>> C(W,vl(H,0));
    rep(i,H){
      rep(j,W){
        cout<<i<<" "<<j<<endl;
        C[i][j] = 10;
      }
    }
    solve2(C);
  }
}
int main(){cin.tie(nullptr);ios::sync_with_stdio(false);solve();}

