#include<bits/stdc++.h>
using namespace std;

int main(){
    int h, w;
    while(cin >> w >> h, h){
        vector<string> A(h), B(h);
        int ly, lx, ry, rx;
        for(int y = 0; y < h; y++){
            cin >> A[y] >> B[y];
            for(int x = 0; x < w; x++){
                if(A[y][x] == 'L')ly = y, lx = x;
                if(B[y][x] == 'R')ry = y, rx = x;
            }
        }
        bool dp[h][w][h][w];
        for(int a = 0; a < h; a++){
            for(int b = 0; b < w; b++){
                for(int c = 0; c < h; c++){
                    for(int d = 0; d < w; d++){
                        dp[a][b][c][d] = false;
                    }
                }
            }
        }
        bool ans = false;
        queue<tuple<int,int,int,int>> nxt;
        dp[ly][lx][ry][rx] = true;
        nxt.push(make_tuple(ly,lx,ry,rx));
        while(!nxt.empty()){
            tie(ly, lx, ry, rx) = nxt.front();
            nxt.pop();
            if(A[ly][lx] == '%'){
                ans = true;
                break;
            }
            for(int i = 0; i < 4; i++){
                int dy = (i == 0) - (i == 1);
                int dx = (i == 2) - (i == 3);
                int dy2 = dy, dx2 = -dx;
                if(ly + dy < 0 || ly + dy >= h || lx + dx < 0 || lx + dx >= w)dy = dx = 0;
                if(ry + dy2 < 0 || ry + dy2 >= h || rx + dx2 < 0 || rx + dx2 >= w)dy2 = dx2 = 0;
                if(A[ly + dy][lx + dx] == '#')dy = dx = 0;
                if(B[ry + dy2][rx + dx2] == '#')dy2 = dx2 = 0;
                if((A[ly + dy][lx + dx] == '%') ^ (B[ry + dy2][rx + dx2] == '%'))continue;
                if(dp[ly + dy][lx + dx][ry + dy2][rx + dx2])continue;
                dp[ly + dy][lx + dx][ry + dy2][rx + dx2] = true;
                nxt.push(make_tuple(ly + dy, lx + dx, ry + dy2, rx + dx2));
            }
        }
        cout << (ans ? "Yes" : "No") << '\n';
    }
}
