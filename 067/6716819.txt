Q = [0]*100000
head = 0
tail = 0

def enqueue(x):
  global Q, tail
  Q[tail] = x
  if (tail+1) == len(Q):
    tail = 0
  else:
    tail += 1


def dequeue():
  global Q, head
  a = head
  if (head+1) == len(Q):
    head = 0
  else:
    head += 1
  return Q[a]



elaps = 0
n, q = input().split()
n, q = int(n), int(q)

for _ in range(n):
  name, time = input().split()
  time = int(time)
  Hash = {"name":name, "time":time}
  enqueue(Hash)

while True:
  hash = dequeue()
  if hash == 0:
    break
  elif hash["time"] > q:
    hash["time"] = hash["time"]-q
    enqueue(hash)
    elaps += q
  elif q >= hash["time"]:
    hash["time"] += elaps
    elaps = hash["time"]
    print(hash["name"], elaps)

