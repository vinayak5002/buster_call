#include <bits/stdc++.h>
using namespace std;
int Partition(char A1[],int A2[],int p, int r){
    int x=A2[r];
    int i=p-1;
    for (int j=p;j<r;j++){
        if(A2[j]<=x){
            i++;
            swap(A2[i],A2[j]);
             swap(A1[i],A1[j]);
        }
    }
    swap (A2[i+1],A2[r]);
    swap (A1[i+1],A1[r]);
    return i+1;
}
void Quickshot(char A1[],int A2[],int p, int r){
    if(p<r){
        int q=Partition(A1,A2,p,r);
        Quickshot(A1,A2,p,q-1);
        Quickshot(A1,A2,q+1,r);
    }
}
void Bubblesort (char B1[],int B2[],int n){
	for(int i=n-1;i>0;i--){
		for(int j=0;j<i;j++){
			if(B2[j]>B2[j+1]){
				swap(B2[j],B2[j+1]);
                swap(B1[j],B1[j+1]);
			}
		}
	}
}
int main(){
    int n;
    cin>>n;
    char A1[n];
    int A2[n];
    char B1[n];
    int B2[n];
    int count=0;
    for(int i=0;i<n;i++){
        cin>>A1[i]>>A2[i];
        B1[i]=A1[i];
        B2[i]=A2[i];
    }
    Quickshot(A1,A2,0,n-1);
    Bubblesort(B1,B2,n);
    for(int i=0;i<n;i++){
		if(B1[i]!=A1[i]){
			cout<<"Not stable"<<endl;
			count++;
			break;
		}
	}
	if (count==0){
		cout<<"Stable"<<endl;
	}
    for(int i=0;i<n;i++){
		cout<<A1[i]<<" "<<A2[i]<<endl;
	}
}

