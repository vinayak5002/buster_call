#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < n; ++i)
typedef long long ll;
using namespace std;

void solve(int W, int H) {
    vector<string> S(H);
    rep(i, H) cin >> S[i];

    vector dp(H, vector<string>(W));
    rep(i, H) rep(j, W) {
        if (isalpha(S[i][j])) continue;

        string res = "";

        if (S[i][j] != '0')
            res += S[i][j];

        if (i && isdigit(S[i - 1][j]) && dp[i - 1][j] != "") {
            string cur = dp[i - 1][j] + S[i][j];
            if (cur.size() > res.size())
                res = cur;
            else if (cur.size() == res.size())
                res = max(res, cur);
        }
        if (j && isdigit(S[i][j - 1]) && dp[i][j - 1] != "") {
            string cur = dp[i][j - 1] + S[i][j];
            if (cur.size() > res.size())
                res = cur;
            else if (cur.size() == res.size())
                res = max(res, cur);
        }
        dp[i][j] = res;
    }

    string ans = "";
    rep(i, H) rep(j, W) {
        if (ans.size() < dp[i][j].size())
            ans = dp[i][j];
        else if (ans.size() == dp[i][j].size())
            ans = max(ans, dp[i][j]);
    }
    cout << ans << "\n";
}

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    int W, H;
    while (cin >> W >> H, H)
        solve(W, H);

    return 0;
}

