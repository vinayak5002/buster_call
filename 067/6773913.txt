/*
整数 n を入力し、深さ n の再帰呼び出しによって作成されるコッホ曲線の頂点の座標を出力するプログラム

与えられた線分 (p1,p2) を 3 等分する。
線分を 3等分する 2 点 s,t を頂点とする正三角形 (s,u,t) を作成する。
線分 (p1,s)、線分 (s,u)、線分 (u,t)、線分 (t,p2)に対して再帰的に同じ操作を繰り返す。
*/

#include<stdio.h>
#include<math.h>//use PI, sin(), cos()

typedef struct{
    double x;
    double y;
}pt;//構造体ポイントを定義

void koch(int n, pt a, pt b)
{
    if( n == 0 )    return;//深さが0になると返す

    pt s, t, u;//s is close to a, t is close to b, t is middle    (s,u,t) is triangle

    double th = M_PI * 60.0 / 180.0;//60度をradに変換

    s.x = (2.0 * a.x + b.x) / 3.0;
    s.y = (2.0 * a.y + b.y) / 3.0;//sはaとbと三等分点(aに近い)
    t.x = (a.x + 2.0 * b.x) / 3.0;
    t.y = (a.y + 2.0 * b.y) / 3.0;//tはaとbと三等分点(bに近い)
    u.x = (t.x - s.x) * cos(th) - (t.y - s.y) * sin(th) + s.x;
    u.y = (t.x - s.x) * sin(th) + (t.y - s.y) * cos(th) + s.y;//sとtで正三角形の最後の頂点uの座標を算出

//線分 (a,s)、線分 (s,u)、線分 (u,t)、線分 (t,b)に対して再帰的に同じ操作を繰り返す。出力する
    koch(n-1, a, s);
    printf("%.8f %.8f\n", s.x, s.y);
    koch(n-1, s, u);
    printf("%.8f %.8f\n", u.x, u.y);
    koch(n-1, u, t);
    printf("%.8f %.8f\n", t.x, t.y);
    koch(n-1, t, b);
}

void Curve_Print(int n, pt a, pt b)//結果を出力関数
{
    printf("%.8f %.8f\n", a.x, a.y);
    koch(n, a, b);
    printf("%.8f %.8f\n", b.x, b.y);
}

int main(void)
{
    pt a,b;//二つの端点
    int n;
    scanf("%d", &n);

    a.x = 0.0;
    a.y = 0.0;
    b.x = 100.0;
    b.y = 0.0;

    Curve_Print(n, a, b);//出力

    return 0;
}
