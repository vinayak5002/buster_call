#include<bits/stdc++.h>
using namespace std;
int dx[] = {-4,4,1,-1};
string s = "01234567";
string now,next;
map <string,int> mp;
queue<string> q;
void bfs()
{
   q.push(s);
   while(!q.empty())
   {
       now = q.front();
       q.pop();
       int pos = now.find('0');
       for(int i = 0;i < 4;i++)
       {
           int nx = pos + dx[i];
           if(nx > 0 && nx < 8 && !((pos == 3 || pos == 4 || pos == 7)
            && i == 0) && !((pos == 0 || pos == 4)&& i == 1))
           {
               net = now;
               swap(net[pos],net[nx]);
               if(mp[next] == 0)
               {
                   mp[net] == mp[now] + 1;
                   q.push(net);
               }
           }
       }
   }
   return;
}
int main()
{
    bfs();

    while(true)
    {
        mp[s] = 0;
        string t = "";
        for(int i = 0;i < 8;i++)
        {
            int a;
            if(!(cin >> a))return 0;
            t += (a + '0');
        }
        cout << mp[t] <<endl;
    }

    return 0;
}

