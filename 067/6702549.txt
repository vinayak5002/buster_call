import sys
import math
from collections import defaultdict, deque

sys.setrecursionlimit(10 ** 6)
stdin = sys.stdin

INF = float('inf')

ni = lambda: int(ns())
na = lambda: list(map(int, stdin.readline().split()))
ns = lambda: stdin.readline().strip()

N, W = na()
dp = [[0] * (W + 1) for _ in range(N + 1)]
V = [0] * N
WW = [0] * N
for i in range(N):
    V[i], WW[i] = na()

for i in range(N):
    for j in range(W + 1):
        if j - WW[i] >= 0:
            dp[i + 1][j] = max(dp[i][j], dp[i][j - WW[i]] + V[i])
        else:
            dp[i + 1][j] = dp[i][j]
print(dp[N][W])
