

import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		PrintWriter out = new PrintWriter(System.out);
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		
		String[] b = new String[n];
		String[] s = new String[n];
		for(int i = 0; i < n; i++) {
			b[i] = sc.next();
			s[i] = b[i];
		}
		
		bubbleSort(b, n);
		selectionSort(s, n);
		
		for(int i = 0; i < n; i++) {
			if(i != 0) out.print(" ");
			out.print(b[i]);
		}
		out.println();
		out.println("Stable");

		for(int i = 0; i < n; i++) {
			if(i != 0) out.print(" ");
			out.print(s[i]);
		}		
		out.println();
		if(Arrays.deepEquals(b, s)) {
			out.println("Stable");
		} else {
			out.println("Not stable");
		}
			
	    out.flush();
	    sc.close();

	}
	
	private static void bubbleSort(String[] a, int n) {
		
		boolean flg = true;
		String tmp;
		while(flg) {
			flg = false;
			for(int j = (n - 1); j > 0; j--) {
				if(a[j].charAt(1) < a[j - 1].charAt(1)) {
					tmp = a[j];
					a[j] = a[j - 1];
					a[j - 1] = tmp;
					flg = true;
				}
			}
		}

	}
	
	private static void selectionSort(String[] a, int n) {
		int minj;
		String tmp;
		for(int i = 0; i < n; i++) {
			minj = i;
			for(int j = i; j < n; j++) {
				if(a[j].charAt(1) < a[minj].charAt(1)) minj = j;
			}
			if(i != minj) {
				tmp = a[i];
				a[i] = a[minj];
				a[minj] = tmp;
			}
		}

	}

}

