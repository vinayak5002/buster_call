#include <bits/stdc++.h>  
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef queue<int> qi;
typedef priority_queue<int> pqi;
typedef priority_queue<int, vector<int>, greater<int>> mpqi;
typedef pair<int, int> pi;
typedef vector<ll> vl;
#define mp make_pair
#define pb push_back
#define MAX_N 200005
ll INF = 1e18;
#define md107 1000000007
#define rep(i, a, b) for (int i = (int)(a); i <= (int)(b); i++)
#define rrep(i, a, b) for (int i = (int)(a); i >= (int)(b); i--)
typedef vector<vector<int>> vvi;
int n;
void solve(){
    while (true)
    {
        string s1; string s2;
        cin >> s1;
        if (s1 == ".") {
            break;
        } 
        cin >> s2; 
        if (s1 == s2) {
            cout << "IDENTICAL" << endl;
            continue;
        }
        string tmp = "";
        vector<string> a;
        vector<string> b;
        for (auto c : s1) {
            if (c == '\"') {
                a.pb(tmp);
                tmp = "";
            } else {
                tmp.push_back(c);
            }
        }
        a.pb(tmp);
        string smp = ""; 
        for (auto c : s2) {
            if (c == '\"') {
                b.pb(smp);
                smp = "";
            } else {
                smp.push_back(c);
            }
        }
        b.pb(smp);
        if (a.size() != b.size()) {
            cout << "DIFFERENT" << endl;
            continue;
        }
        int diff = 0;
        int flag = 0;
        rep(i, 0, a.size() - 1) {
            if (a[i] != b[i]) {
                if (i % 2 == 0) {
                    flag++;
                } else {
                    diff++;
                }
            }
        }
        /*for (auto x : a) {
            cout << x << " ";
        }
        cout << endl;
        for (auto x : b) {
            cout << x << " ";
        }
        cout << endl;*/
        if (diff == 1 && flag == 0)  {
            cout << "CLOSE" << endl;
            continue;
        }   
        cout << "DIFFERENT" << endl;
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    solve();
    return 0;
}
