#include<iostream>
#include<vector>
using namespace std;

struct Node *nil;
    
struct  Node{
    int key;
    Node *prev, *next;
};

void init(){
    nil = (Node *)malloc(sizeof(Node));
    nil->next = nil;
    nil->prev = nil;
}

void insert(int key){
    Node *x = (Node *)malloc(sizeof(Node));
    x->key = key;
    x->next = nil->next;
    nil->next->prev = x;
    nil->next = x;
    x->prev = nil;
}

Node* listSearch(int key){
    Node *cur = nil->next;
    while(cur != nil && cur->key != key){
        cur = cur->next;
    }
    return cur;
}

void delete_x(Node *t){
    if(t == nil) return;
    t->prev->next = t->next;
    t->next->prev = t->prev;
    free(t);
}

void deleteFirst(){
    delete_x(nil->next);
}
void deleteLast(){
    delete_x(nil->prev);
}

void output(){
    Node *cur = nil->next;
    for(int i=0; cur != nil; i++){
        if(i == 0){
            cout << cur->key;
        }else{
            cout << " " << cur->key;
        }
        cur = cur->next;
    }
}

int main(){
    init();

    int com;
    cin >> com; //コマンドの数
    for(int i=0; i<com; i++){
        char str[15];
        int num;
        cin >> str;
        if(strcmp(str,"insert")==0){
            cin >> num;
            insert(num);
        }else if (strcmp(str,"delete")==0){
            cin >> num;
            delete_x(listSearch(num));
        }else if(strcmp(str,"deleteFirst")==0){
            deleteFirst();
        }else{
            deleteLast();
        }
    }
    output();
    return 0;
}
