#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int INF=0x3f3f3f3f;

int n,m;
char G[101][101];
int vis[101][101];
bool check(int x,int y) {
    if(x>=1&&y>=1&&x<=n&&y<=m) return true;
    else return false;
}
int dir[4][2]={{0,1},{0,-1},{1,0},{-1,0}};
int ans=0;
void bfs(int x,int y,char tar) {
    queue<pair<int,int> > q;
    q.push(make_pair(x,y));
    vis[x][y]=ans;
    while(!q.empty()) {
        pair<int,int> start=q.front();q.pop();
        int sx=start.first,sy=start.second;
        for(int i=0;i<4;i++) {
            int nx=sx+dir[i][0],ny=sy+dir[i][1];
            if(check(nx,ny)&&!vis[nx][ny]&&G[nx][ny]==tar) {
                vis[nx][ny]=ans;
                q.push(make_pair(nx,ny));
            }
        }
    }
} 
int main() {
    //freopen("t.in","r",stdin);
    while(cin>>n>>m&&n&&m) {
        for(int i=1;i<=n;i++) {
            string s;cin>>s;
            for(int j=1;j<=m;j++) {
                vis[i][j]=0;
                G[i][j]=s[j-1];
            }
        }
        ans=0;
        for(int i=1;i<=n;i++) {
            for(int j=1;j<=m;j++) {
                if(!vis[i][j]) {
                    ans++;
                    bfs(i,j,G[i][j]);
                }
            }
        }
        cout<<ans<<endl;
    }
}

