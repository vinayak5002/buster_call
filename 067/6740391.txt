#include <iostream>
#include <vector>
using namespace std;



vector<int> zero(40);
vector<int> one(40);


void insertionSort(int A[], int N) {
	int temp;
	for (int i = 1; i < N; i++) {
		

		temp = A[i];
		int j = i - 1;

		while (j >= 0 && A[j] > temp) {
			A[j + 1] = A[j];
			A[j] = temp;
			j--;
		}

		for (int k = 0; k < N; k++) {
			cout << A[k];
			if (k < N - 1) cout << " ";
		}
		if (i < N - 1) cout << endl;
		
	}

	
	
}


int main() {
	/* int n;
	cin >> n;
	
	for (int i = 1; i < 10; i++) {
		cout << n << " * " << i << " = " << n * i << endl;
	} 


	int n;
	cin >> n;

	for (int i = 0; i < n; i++) {
		int a, b;
		cin >> a >> b;
		cout << a + b << endl;
	}

	
	


	zero[0] = 1; zero[1] = 0; one[0] = 0; one[1] = 1;


	int T;
	cin >> T;

	for (int i = 0; i < T; i++) {
		int n;
		cin >> n;

		for (int i = 0; i < n - 1; i++) {
			zero[i + 2] = zero[i] + zero[i + 1];
			one[i + 2] = one[i] + one[i + 1];
		}

		cout << zero[n] << " " << one[n] << endl;
	}

	*/

	int N;
	cin >> N;

	int A[100];

	for (int i = 0; i < N; i++) {
		cin >> A[i];
	}

	

	for (int k = 0; k < N; k++) {
		cout << A[k];
		if (k < N - 1) cout << " ";
	}
	cout << endl;

	insertionSort(A, N);


	


 	return 0;
}
