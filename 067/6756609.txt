import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while True:
    M, T, P, R = mi()
    if M == 0 and T == 0:
        break
    pena_li = [[0 for _ in range(P)] for _ in range(T)]
    team_li = [[0 for _ in range(3)] for _ in range(T)]
    for i in range(T):
        team_li[i][2] += i
    for i in range(R):
        m, t, p, r = mi()
        t -= 1
        p -= 1
        if r != 0:
            pena_li[t][p] += 1
        else:
            if pena_li[t][p] != 0:
                team_li[t][0] += 1
                team_li[t][1] += m + pena_li[t][p] * 20
            else:
                team_li[t][0] += 1
                team_li[t][1] += m
    for i in range(T):
        team_li[i][1] = -team_li[i][1]
    team_li.sort(reverse=True)
    for i in range(T):
        if i == 0:
            print(team_li[i][2]+1,end='')
        else:
            if team_li[i][1] == team_li[i-1][1] and team_li[i][0] == team_li[i-1][0]:
                print(f'={team_li[i][2]+1}',end='')
            else:
                print(f',{team_li[i][2]+1}',end='')
        if i == T-1:
            print()


