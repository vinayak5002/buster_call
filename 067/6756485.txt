#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <math.h>

int main(){
	char buf[4000];
	char *p;
	typedef struct{
		int suf[7]; // suf[0]は使わない
		// N   5
		// W 4 1 3 6 E
		// S   2
	}dice;
	dice a;
	int pattern[7][7] =
	{ { 0 },
	{ 0, 0, 3, 5, 2, 4, 0 },
	{ 0, 4, 0, 1, 6, 0, 3 },
	{ 0, 2, 6, 0, 0, 1, 5 },
	{ 0, 5, 1, 0, 0, 6, 2 },
	{ 0, 3, 0, 6, 1, 0, 4 },
	{ 0, 0, 4, 2, 5, 3, 0 } };
	int n;
	int top, front;

	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d %d %d %d %d %d", &a.suf[1], &a.suf[2], &a.suf[3],
									&a.suf[4], &a.suf[5], &a.suf[6]);
	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d", &n);
	for (int i = 0; i < n; i++){
		fgets(buf, sizeof(buf) - 1, stdin);
		sscanf(buf, "%d %d", &top, &front);
		for (int j = 1; j <= 6; j++){
			if (top == a.suf[j]) top = j;
			if (front == a.suf[j]) front = j;
		}
		//printf("%d %d\n", top, front);
		printf("%d\n", a.suf[pattern[top][front]]);
	}

	return 0;
}
