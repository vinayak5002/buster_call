import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin


INF = 10 ** 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)
def solve(num, lis):
    cnt = 0
    include_watashi = num + 1
    for [a, b] in lis:
        if a <= include_watashi <= b:
            cnt += 1
            if cnt >= num:
                return True
    if cnt >= num:
        return True
    else:
        return False


N = ii()
L = []
for i in range(N):
    l = li()
    L.append(l)

ng = N + 1
ok = 0
while abs(ng - ok) > 1:
    mid = abs(ng - ok) // 2 + ok
    if solve(mid, L):
        ok = mid
    else:
        ng = mid
print(ok)


