#include<bits/stdc++.h>
using namespace std;
#pragma GCC target("avx2")
#pragma GCC optimize("O3")
using ll = long long;
using pii = pair<ll, ll>;
int dx[4] = {1, 1, 0, -1}, dy[4] = {0, 1, 1, 1};

int main(){
ios::sync_with_stdio(false);
std::cin.tie(nullptr);
	
	vector<vector<int>> c(10, vector<int> (10, -1));
	for (int i = 1; i < 9; i++){
		for (int j = 1; j < 9; j++){
			c[i][j] = 0;
		}
	}

	int n;
	cin >> n;
	vector<pair<int, int>> a(n);
	for (int i = 0; i < n; i++) cin >> a[i].first >> a[i].second;

	vector<int> q = {1, 2, 3, 4, 5, 6, 7, 8};
	do{
		auto t = c;
		bool f = 1;

		for (int i = 0; i < 8; i++){
			t[i + 1][q[i]] = 1;
		}

		for (int i = 0; i < n; i++){
			if (!t[a[i].first][a[i].second]) {
				f = 0;
				break;
			}
		}

		if (!f) continue;
		for (int i = 0; i < 8; i++){
			for (int j = 0; j < 4; j++){
            	pair<int, int> p = {i + 1, q[i]};
				while(t[p.first][p.second] != -1){
					p.first += dx[j];
					p.second += dy[j];

					if (t[p.first][p.second] == 1){
						f = 0;
						break;
					}
				}
			}

			if (!f) break;
		}

		if (f){
			vector<string> ans(8, "........");
			for (int i = 0; i < 8; i++){
				ans[i][q[i] - 1] = 'Q';
			}

			for (auto x : ans){
				cout << x << endl;
			}
          
        	return 0;
		}
		
	}while(next_permutation(q.begin(), q.end()));
	
}
