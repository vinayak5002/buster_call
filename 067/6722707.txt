N,M = map(int,input().split())
par = [i for i in range(N)]
def find(x):
    if par[x] == x:
        return x
    else:
        par[x] = find(par[x]) #経路圧縮
        return par[x]
def same(x,y):
    return find(x) == find(y)
def unite(x,y):
    x = find(x)
    y = find(y)
    if x == y:
        return 0
    par[x] = y
edgeL = []
for _ in range(M):
  L = list(map(int,input().split()))
  edgeL.append(L)
edgeL.sort(key = lambda x: x[2])
ans = 0
count = 0
for l in edgeL:
  if not same(l[0],l[1]):
    ans += l[2]
    unite(l[0],l[1])
    count += 1
  if count == N-1:
    break
print(ans)
             
    
