#include<stdio.h>
#include<math.h>

//構造体の宣言
struct Point
{
	double x;
	double y;
};

//コッホ曲線の頂点の座標を出力する再帰関数
void koch(int d, struct Point p1, struct Point p2 )
{
	struct Point s, t, u;
	double math = M_PI * 60.0 / 180.0;
	
	if( d == 0 )
	{
		return;
	}
	
	//線分を三等分する2点を求める
	s.x = (2.0 * p1.x + 1.0 * p2.x) / 3.0;
	s.y = (2.0 * p1.y + 1.0 * p2.y) / 3.0;
	t.y = (1.0 * p1.x + 2.0 * p2.x) / 3.0;
	t.y = (1.0 * p1.y + 2.0 * p2.y) / 3.0;
	
	//正三角形を形成する点uを求める
	u.x = (t.x - s.x) * cos(math) - (t.y - s.y) * sin(math) + s.x;
	u.y = (t.x - s.x) * sin(math) + (t.y - s.y) * cos(math) + s.y;
	
	//座標の出力
	koch( d-1, p1, s );
	printf( "%.8f %.8f\n", s.x, s.y );
	koch( d-1, s, u);
	printf( "%.8f %.8f\n", u.x, u.y );
	koch( d-1, u, t );
	printf( "%.8f %.8f\n", t.x, t.y );
	koch( d-1, t, p2 );
}	

int main( void )
{
	struct Point p1, p2;
	int n;
	
	//整数の入力
	scanf( "%d", &n );
	
	//初期化
	p1.x = 0;
	p1.y = 0;
	p2.x = 100;
	p2.y = 0;
	
	printf( "%.8f %.8f\n", p1.x, p1.y );
	koch( n, p1, p2 );
	printf( "%.8f %.8f\n", p2.x, p2.y );
	
	return 0;
}

