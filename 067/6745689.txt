#include<stdio.h>
#define N 100

int d[N], f[N], ts, j[N];//d[N]	は発見時間、f[N]は終了時間, j[N]はその頂点が探索されたかどうか記録を残す配列
int G[N][N], n;

void dfs_visit(int u){
	int v;
	
	j[u] = 1;//１は探索中という意味で
	d[u] = ++ts;//探索開始の時間を記録
	for(v=0; v < n; v++){
		if(G[u][v] == 0) continue;//他の頂点と繋がっていないなら飛ばす
		if(j[v] == 0){
			dfs_visit(v);//他の頂点と繋がっている前提で、未探索の頂点を探索（再帰）
		}
	}
	j[u] = 2;//探索終了という意味で
	f[u] = ++ts;//終了時点を保存
}

void dfs(){
	int u;
	for( u=0; u<n; u++) j[u] = 0;//初期化
	ts = 0;
	
	for(u=0; u<n; u++){
		if(j[u] == 0) dfs_visit(u);//探索されていないなら探索、されたらとばす
	}
	
	for(u=0; u<n; u++){
		printf("%d %d %d\n", u+1, d[u], f[u]);
	}
}


int main(void){
	int i, j, k, v, w;
	
	scanf("%d", &n);
	
	for(i=0; i<n; i++){
		for(j=0; j<n; j++){
			G[i][j] = 0;
		}
	}
	
	for(i=0; i<n; i++){
		scanf("%d %d", &k, &v);
		k--;
		for(j=0; j<v; j++){
			scanf("%d", &w);
			w--;
			G[k][w] = 1;
		}
	}
	
	dfs();
	
	return 0;
}
