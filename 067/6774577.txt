fn main() {
    let n: usize = read();
    let s: Vec<Vec<String>> = read_vec2(n);
    let v = calc_score(s);
    println!("{} {}", v.0, v.1);
}

fn calc_score(s: Vec<Vec<String>>) -> (u32, u32) {
    let mut a: u32 = 0;
    let mut b: u32 = 0;
    for t in s.iter() {
        if t[0] == t[1] {
            a += 1;
            b += 1;
        } else if t[0] < t[1] {
            b += 3;
        } else {
            a += 3;
        }
    }
    return (a, b);
}

fn read<T: std::str::FromStr>() -> T {
    let mut s = String::new();
    std::io::stdin().read_line(&mut s).ok().unwrap();
    s.trim().parse().ok().unwrap()
}

fn read_vec<T: std::str::FromStr>() -> Vec<T> {
    read::<String>()
        .split_whitespace()
        .map(|e| e.parse().ok().unwrap())
        .collect()
}

fn read_vec2<T: std::str::FromStr>(n: usize) -> Vec<Vec<T>> {
    (0..n).map(|_| read_vec()).collect()
}

