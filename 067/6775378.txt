#! /usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import itertools
import math
from collections import Counter, defaultdict

class Main(object):
    
    def __init__(self):
        pass

    def solve(self):
        '''
        insert your code
        '''
        while True:
            m, n = map(int, raw_input().split())
            if m == 0 and n == 0:
                break
            board = [[None for j in range(m)] for i in range(n)]
            for i in range(n):
                line = map(int, raw_input().split())
                for j in range(len(line)):
                    board[i][j] = line[j]
            ans = 0
            for i in range(n):
                for j in range(m):
                    if board[i][j] == 1:
                        stack = [(i, j)]
                        d = [(0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1), (-1, 0), (-1, 1)]
                        ans += 1
                        while len(stack) != 0:
                            y, x = stack.pop()
                            board[y][x] = 2
                            for dy, dx in d:
                                if 0 <= y + dy < n and 0 <= x + dx < m and board[y+dy][x+dx] == 1:
                                    stack.append((y + dy, x + dx))
            print ans

        
        return None

if __name__ == '__main__':
    m = Main()
    m.solve()

