import sys

n = int(input())
A = []
D = {}
for i in range(n):
    mark, num = sys.stdin.readline().split()
    A.append((mark,int(num)))
    D.setdefault(int(num), []).append(mark)

def partition(A, p, r):
    x = A[r]
    i = p
    for j in range(p, r):
        if A[j][1] <= x[1]:
            A[i], A[j] = A[j], A[i]
            i += 1
    A[i], A[r] = A[r], A[i]
    return i

def quick_sort(A, p, r):
    if p < r:
        q = partition(A, p, r)
        quick_sort(A, p, q - 1)
        quick_sort(A, q +1, r)

D = {k: iter(v).__next__ for k,v in D.items()}

quick_sort(A, 0, n - 1)
ok = 1
for mark, num in A:
    if D[d]() != v:
        ok = 0
ans = ['Stable\n' if ok else 'Not stable\n']
for v, d in A:
    ans.append("%s %d\n" % (v, d))
sys.stdout.writelines(ans)
