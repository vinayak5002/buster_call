#define BUF_SIZE 1024

#include <stdio.h>

struct dice {
	int up;
	int south;
	int east;
	int west;
	int north;
	int down;
};

void roll_south(struct dice *d) {
	int tmp;
	tmp = d->south;
	d->south = d->up;
	d->up = d->north;
	d->north = d->down;
	d->down = tmp;
}

void roll_east(struct dice *d) {
	int tmp;
	tmp = d->east;
	d->east = d->up;
	d->up = d->west;
	d->west = d->down;
	d->down = tmp;
}

void roll_west(struct dice *d) {
	int tmp;
	tmp = d->west;
	d->west = d->up;
	d->up = d->east;
	d->east = d->down;
	d->down = tmp;
}

void roll_north(struct dice *d) {
	int tmp;
	tmp = d->north;
	d->north = d->up;
	d->up = d->south;
	d->south = d->down;
	d->down = tmp;
}



int main(void)
{
	char buf[BUF_SIZE];
	int up, south, east, west, north, down;
	int num, i;

	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d %d %d %d %d %d", &up, &south, &east, &west, &north, &down);
	struct dice d = { up, south, east, west, north, down };
	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d", &num);
	for (i = 0; i < num; i++) {
		int target;
		int q_up, q_south;
		fgets(buf, sizeof(buf) - 1, stdin);
		sscanf(buf, "%d %d", &q_up, &q_south);
		if (q_up == d.up) {
			//	何もしない
		}
		else if (q_up == d.east) {
			roll_west(&d);
		}
		else if (q_up == d.west) {
			roll_east(&d);
		}
		else if (q_up == d.north) {
			roll_south(&d);
		}
		else if (q_up == d.south) {
			roll_north(&d);
		}
		else if (q_up == d.down) {
			roll_north(&d);
			roll_north(&d);
		}

		if (q_south == d.west) {
			target = d.south;
		}
		else if (q_south == d.east) {
			target = d.north;
		}
		else if (q_south == d.south) {
			target = d.east;
		}
		else if (q_south == d.north) {
			target = d.west;
		}
		//printf("%d %d %d %d %d %d", d.up, d.south, d.east, d.west, d.north, d.down);
		printf("%d\n", target);
	}
	return 0;
}
