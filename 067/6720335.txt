#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;
typedef vector<bool> vb;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<P> vp;
typedef vector<vp> graph;
typedef vector<char> vc;
typedef vector<vc> vvc;
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
// const ll MOD = 1000000007;
const ll MOD = 998244353;
const ll INF = 1000000000000000000;
void yn(bool ok) { cout << (ok ? "yes\n" : "no\n"); }
void Yn(bool ok) { cout << (ok ? "Yes\n" : "No\n"); }
void YN(bool ok) { cout << (ok ? "YES\n" : "NO\n"); }
template <class T>
inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template <class T>
inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}
ll dx[8] = {1, 0, -1, 0, 1, 1, -1, -1}, dy[8] = {0, 1, 0, -1, 1, -1, 1, -1};
void solve() {
    string s;
    cin >> s;
    set<string> st;
    for (int i = 1; i < s.size(); i++) {
        string l = s.substr(0, i), r = s.substr(i, s.size() - i);
        st.insert(l + r);
        st.insert(r + l);
        reverse(all(l));
        st.insert(l + r);
        st.insert(r + l);
        reverse(all(r));
        st.insert(l + r);
        st.insert(r + l);
        reverse(all(l));
        st.insert(l + r);
        st.insert(r + l);
    }
    cout << st.size() << endl;
}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    ll t = 1;
    cin >> t;
    for (int i = 1; i <= t; i++) solve();
    return 0;
}
