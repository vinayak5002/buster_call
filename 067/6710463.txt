package main

import (
	"bufio"
	"fmt"
	"os"
)

func explorer(sum int, index int, A []int, length int) bool {
	if sum == 0 {
		return true
	} else if index == length {
		return false
	}
	return explorer(sum-A[index], index+1, A, length) || explorer(sum, index+1, A, length)
}

func main() {
	in := bufio.NewReader(os.Stdin)
	out := bufio.NewWriter(os.Stdout)
	defer out.Flush()

	var n, q, m int

	fmt.Fscan(in, &n)
	A := make([]int, n, n)
	for i := 0; i < n; i++ {
		fmt.Fscan(in, &A[i])
	}

	fmt.Fscan(in, &q)
	// M := make([]int, q, q)
	for i := 0; i < q; i++ {
		// fmt.Fscan(in, &M[i])
		fmt.Fscan(in, &m)
		if explorer(m, 0, A, n) {
			fmt.Fprint(out, "yes\n")
		} else {
			fmt.Fprint(out, "no\n")
		}
	}
}

