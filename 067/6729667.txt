#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

using ull = unsigned long long;
using ll = long long;
using vi = vector<int>;
using vll = vector<long long>;
using vvi = vector<vi>;
using vvll = vector<vll>;
using vs = vector<string>;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

#define all(obj) (obj).begin(), (obj).end()
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); ++i)
#define rep(i, n) reps(i, 0, n)
#define repd(i, n) for (ll i = n - 1; i >= 0; i--)
template <typename T>
inline void print(const vector<T>& v, string s = " ") {
    rep(i, v.size()) cout << v[i] << (i != (ll)v.size() - 1 ? s : "\n");
}
template <typename T, typename S>
inline void print(const pair<T, S>& p) {
    cout << p.first << " " << p.second << "\n";
}
template <typename T>
inline void print(const T& x) {
    cout << x << "\n";
}

ll d[1010];
void solve(ll n) {
    rep(i, n) cin >> d[i];
    ll ans = 0;
    rep(i, n - 3) {
        if (d[i] == 2 && d[i + 1] == 0 && d[i + 2] == 2 && d[i + 3] == 0) ans++;
    }
    print(ans);
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);
    ll n;
    while (1) {
        cin >> n;
        if (n == 0) break;
        solve(n);
    }
    return 0;
}
