#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

template<class T>
bool chmin(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    if (b == 0)return a;
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

vector<ll> fact, factinv, inv;
ll mod = 1e9 + 7;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (k < 0)return 0;
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);


    while (1) {
        string X, Y;
        cin >> X >> Y;
        if (X == "#")return 0;
        ll A, E, S, R;
        cin >> A >> E >> S >> R;
        //chmin(R, A + E);
        //chmin(S, A + E);
        //chmin(R, 2 * S);
        ll N = X.size();
        ll M = Y.size();
        ll an = 1e18;
        ll r = 0;
        rep(k, N) {

            vvll DP(N + 1, vll(M + 1, 1e10));
            DP[0][0] = 0;
            rep(i, N + 1) {
                rep(j, M + 1) {
                    if (i < N && j < M)if (X[i] == Y[j])chmin(DP[i + 1][j + 1], DP[i][j]);//何もしない
                    if (i < N && j < M)chmin(DP[i + 1][j + 1], DP[i][j] + S);//置き換え

                    if (i < N) {
                        if (i < N - k)chmin(DP[i + 1][j], DP[i][j] + E);
                        else chmin(DP[i + 1][j], DP[i][j] - R + E);
                    }
                    if (j < M)chmin(DP[i][j + 1], DP[i][j] + A);//追加
                }
            }


            chmin(an, r + DP[N][M]);

            r += R;
            X = X.substr(1, N - 1) + X.substr(0, 1);
        }
        cout << an << endl;

    }

}

