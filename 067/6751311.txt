#include <bits/stdc++.h>
using namespace std;

vector<int> r, c;
vector<vector<int>> dp;
const int INF = 1 << 30;

int mcmp(int a, int b) {
    if(dp[a][b] != INF) return dp[a][b];

    if (b - a == 1) {
        dp[a][b] = c[a] * r[a] * c[b];

    } else {
        for(int k = a; k < b; k++) {
            int res = mcmp(a, k) + mcmp(k + 1, b) + (c[k] * r[a] * c[b]);
            dp[a][b] = min(dp[a][b], res);
        }
    }

    return dp[a][b];
}

int main() {
    int N;
    cin >> N;
    r.assign(N, 0);
    c.assign(N, 0);
    dp.assign(N, vector<int>(N, INF));

    for(int i = 0; i < N; i++) {
        cin >> r[i] >> c[i];
        dp[i][i] = 0;
    }

    cout << mcmp(0, N - 1) << endl;

}
