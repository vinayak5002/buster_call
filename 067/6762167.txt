#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include<stdio.h>
#include<math.h>

int main(void){

	char buf[10000];

	int n; //要素数
	int a; //入力値
	double x[1000], y[1000];
	int i;

	//要素数入力
	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d", &n);

	//xの要素入力
	fgets(buf, sizeof(buf) - 1, stdin);
	for (i = 0; i < n; i++){
		sscanf(buf, "%d %[^\n]", &a, buf);
		x[i] = a;
	}

	//yの要素入力
	fgets(buf, sizeof(buf) - 1, stdin);
	for (i = 0; i < n; i++){
		sscanf(buf, "%d %[^\n]", &a, buf);
		y[i] = a;
	}


	//マンハッタン距離
	double d1 = 0;
	for (i = 0; i < n; i++) d1 += fabs(x[i] - y[i]);

	//ユークリッド距離
	double d2 = 0;
	double sum = 0;
	for (i = 0; i < n; i++) sum += pow(fabs(x[i] - y[i]), 2);
	d2 = sqrt(sum);

	//p=3
	double d3 = 0;
	sum = 0;
	for (i = 0; i < n; i++) sum += pow(fabs(x[i] - y[i]), 3);
	d3 = pow(sum, 1.0000 / 3.0000);

	//チェビシェフ距離
	double d_inf = 0;
	double max = fabs(x[0] - y[0]);
	for (i = 0; i < n; i++){
		if (max < fabs(x[i] - y[i])) max = fabs(x[i] - y[i]);
		d_inf = max;
	}

	printf("%f\n", d1);
	printf("%f\n", d2);
	printf("%f\n", d3);
	printf("%f\n", d_inf);


	return 0;
}
