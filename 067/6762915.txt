#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include<stdio.h>
#include<string.h>
#include<math.h>

int main(void){

	char buf[10000];

	struct Dice
	{
		int d[6];
	};

	int i, j;
	struct Dice dice;
	int adj[6][5] = { { 0, 1, 5, 4, 0 }, { 0, 2, 5, 3, 0 }, { 0, 4, 5, 1, 0 }, { 0, 3, 5, 2, 0 }, { 1, 2, 4, 3, 1 }, { 1, 3, 4, 2, 1 } };


	//サイコロの数字入力
	fgets(buf, sizeof(buf) - 1, stdin);
	for (i = 0; i < 6; i++)	sscanf(buf, "%d %[^\n]", &dice.d[i], &buf);

	//質問の数入力
	int n;
	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d", &n);

	//質問入力
	int top[24], front[24];
	int ans[24];

	for (i = 0; i < n; i++){
		fgets(buf, sizeof(buf) - 1, stdin);
		sscanf(buf, "%d %d", &top[i], &front[i]);

		for (j = 0; j < 4; j++){
			for (int k = 0; k < 4; k++){
				if (dice.d[adj[j][k]] == top[i] && dice.d[adj[j][k + 1]] == front[i]){
					ans[i] = dice.d[adj[j + 1][1]];
					if (j == 3) ans[i] = dice.d[adj[0][2]];
				}
			}
		}

		for (int k = 0; k < 4; k++){
			if (dice.d[adj[4][k]] == top[i] && dice.d[adj[4][k + 1]] == front[i]) ans[i] = dice.d[adj[0][0]];
		}

		for (int k = 0; k < 4; k++){
			if (dice.d[adj[5][k]] == top[i] && dice.d[adj[5][k + 1]] == front[i]) ans[i] = dice.d[adj[0][2]];
		}
	}

	for (i = 0; i < n; i++){
		printf("%d\n", ans[i]);
	}

	return 0;
}
