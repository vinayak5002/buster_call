n=int(input())
path=[]
path.append([])
for _ in range(n):
    tmp=list(map(int,input().split()))
    path.append(tmp[2:])

d=[0]*(n+1)  #到着時刻
f=[0]*(n+1)  #終了時刻
time=0

def dfs(p,d,f):
    global time
    #来訪時の処理
    time+=1
    d[p]=time #時刻の記録
    
    for x in path[p]: #繋がってる点の内
        if d[x] == 0: #未探索(発見時刻が0(初期値))
            dfs(x,d,f)#先に進む
    
    #帰るときの処理
    time+=1
    f[p]=time #繋がっているすべての点を探索終えたらその点はおわり
    
    
    return         

for i in range(1,n+1):
    if d[i] == 0:#未探索の点があれば
        dfs(i,d,f)   #dfs開始
        
#点番号、到着時刻、終了時刻
for i in range(1,n+1):
    print(i,d[i],f[i])
   
 
