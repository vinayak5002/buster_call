#include <bits/stdc++.h>
using namespace std;
int Partition(string A[],int p, int r){
    int x=A[r][1];
    int i=p-1;
    for (int j=p;j<r;j++){
        if(A[j][1]<=x){
            i++;
            swap(A[i][0],A[j][0]);
             swap(A[i][1],A[j][1]);
        }
    }
    swap (A[i+1][0],A[r][0]);
    swap (A[i+1][1],A[r][1]);
    return i+1;
}
void Quickshot(string A[],int p, int r){
    if(p<r){
        int q=Partition(A,p,r);
        Quickshot(A,p,q-1);
        Quickshot(A,q+1,r);
    }
}
void Bubblesort (string x[],int n){
	for(int i=n-1;i>0;i--){
		for(int j=0;j<i;j++){
			if(x[j][1]>x[j+1][1]){
				swap(x[j][0],x[j+1][0]);
                swap(x[j][1],x[j+1][1]);
			}
		}
	}
}
int main(){
    int n;
    cin>>n;
    string A[n];
    string B[n];
    int count=0;
    for(int i=0;i<n;i++){
        cin>>A[i][0]>>A[i][1];
        B[i][0]=A[i][0];
        B[i][1]=A[i][1];
    }
    Quickshot(A,0,n-1);
    Bubblesort(B,n);
    for(int i=0;i<n;i++){
		if(B[i][0]!=A[i][0]||B[i][1]!=A[i][1]){
			cout<<"Not stable"<<endl;
			count++;
			break;
		}
	}
	if (count==0){
		cout<<"Stable"<<endl;
	}
    for(int i=0;i<n;i++){
		cout<<A[i][0]<<" "<<A[i][1]<<endl;
	}
}

