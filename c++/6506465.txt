#include <bits/stdc++.h>
using namespace std;

// LIS(Longest Increasing Subsequence, 最長増加部分列) の長さを返す
constexpr int INF = 1001001001;
int lis(vector<int> &a) {
    int l = (int)a.size();
    vector<int> dp(l, INF);
    // dp[i] := 長さが i+1 であるような増加部分列における最終要素の最小値(存在しない場合は INF)
    for (int j=0; j<l; j++) *lower_bound(dp.begin(), dp.end(), a[j]) = a[j];
    return lower_bound(dp.begin(), dp.end(), INF) - dp.begin();
}

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i=0; i<n; i++) cin >> a[i];
    cout << lis(a) << endl;
}
