#include <stdio.h>

#define MAX 100

int data[MAX][MAX];
int d[MAX];
int n;

void getdata()
{
    int i, j, v, u, k;
    //データ数の取得
    scanf("%d", &n);

    // 2次元配列の初期化
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            data[i][j] = 0;
        }
    }

    //データの格納
    for (i = 0; i < n; i++)
    {
        scanf("%d %d", &u, &k); //頂点番号と出次数の取得

        u--;

        //頂点リストを作製
        for (j = 0; j < k; j++)
        {
            scanf("%d", &v); //隣接頂点番号の格納
            v--;
            data[i][v] = 1;
        }
    }
}

void bfs(int t)
{
    int i;

    //printf("t i d[t] d[i]\n");
    for (i = 0; i < n; i++)
    {
        //printf("%d %d %d    %d\n", t + 1, i + 1, d[t], d[i]);
        if (data[t][i] == 0)
        {
            continue;
        }
        if (d[i] != -1 && d[i] < d[t] + 1)
        {
            continue;
        }

        d[i] = d[t] + 1;

        //printf("======%d======\n", i + 1);
        bfs(i);
        //printf("======%d======\n", i + 1);
    }
}

int main(void)
{
    int i;

    getdata();

    //最短距離を保存する配列の初期化
    for (i = 0; i < n; i++)
    {
        d[i] = -1;
    }
    d[0] = 0;
    bfs(0);

    for (i = 0; i < n; i++)
    {
        printf("%d %d\n", i + 1, d[i]);
    }

    return 0;
}
