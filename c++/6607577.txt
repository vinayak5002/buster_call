#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ld = long double;
using vl = vector<ll>;
template<class T> using vc = vector<T>;
template<class T> using vvc = vector<vector<T>>;

#define eb emplace_back
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for (ll i = 0; i < (n); i++)
#define repr(i, n) for (ll i = (n)-1; i >= 0; i--)
#define repe(i, l, r) for (ll i = (l); i < (r); i++)
#define reper(i, l, r) for (ll i = (r)-1; i >= (l); i--)
#define repa(i,n) for (auto& i: n)

template<class T1, class T2> inline bool chmax(T1 &a, const T2 &b) {if (a<b) { a=b; return 1;} return 0;}
template<class T1, class T2> inline bool chmin(T1 &a, const T2 &b) {if (b<a) { a=b; return 1;} return 0;}

struct init{init(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);cerr<<fixed<<setprecision(15);}}init_;

template <typename T, typename U> ostream& operator<<(ostream&out,const pair<T, U>&a){return out<<a.first<<' '<<a.second;}
template <typename T> ostream& operator<<(ostream&out, const vector<T>&a){for(auto it=a.begin();it!= a.end();){out<<*it;if(++it!=a.end())out<<' ';}return out;}
template <typename T, size_t N> ostream& operator<<(ostream&out, const array<T, N>&a){for(auto it=a.begin();it!= a.end();){out<<*it;if(++it!=a.end())out<<' ';}return out;}
template <typename T> ostream& operator<<(ostream&out, const set<T>&a){for(auto it=a.begin();it!=a.end();){out<<*it;if(++it!=a.end())out<<' ';}return out;}
template <typename T, typename U> ostream& operator<<(ostream&out, const map<T, U>&a){for(auto it=a.begin();it!=a.end();){out<<*it;if(++it!=a.end())out<<'\n';}return out;}

#ifdef DEBUG
template <class T, class N> void verr(const vector<T>& a, const N& n) { rep(i, n) cerr << a[i] << " "; cerr << endl; }
template <class T, class N, size_t AN> void verr(const array<T, AN>& a, const N& n) { rep(i, n) cerr << a[i] << " "; cerr << endl; }
ll dbgt = 1; void err() { cerr << "passed " << dbgt++ << endl; }
template<class H, class... T> void err(H&& h,T&&... t){ cerr<< h << (sizeof...(t)?" ":"\n") << flush; if(sizeof...(t)>0) err(forward<T>(t)...); }
#else
void err(){}
template <class H, class... T>
void err(H &&h, T &&...t) {}
template <class H, class... T>
void verr(H &&h, T &&...t) {}
#endif

const ll INF = 4e18;
const ld EPS = 1e-11;
const ld PI = acos(-1.0L);
// const ll MOD = 1e9 + 7;
const ll MOD = 998244353;
//--------------------------------------------------------------------------------//

void solve(ll N){
    vl A(N);
    rep(i, N) cin >> A[i];
    // rep(i, N) A[i] %= 1000;

    vvc<int> dp(N + 1, vc<int>(500 * (N + 1), 1e9));
    dp[0][0] = 0;
    rep(i, N) {
        // vvc<int> tdp(N + 1, vc<int>(9 * (N + 1), INF));
        ll a = A[i] % 1000;
        // if (a == 0) continue;
        repr(j, N) {
            repr(k, 500 * N) {
                // if (dp[j][k] == INF) continue;
                if(a == 0) {
                    if(k >= 500) {
                        chmin(dp[j + 1][k - 500], dp[j][k] + A[i]);
                    }
                }
                else if(a <= 500) {
                    chmin(dp[j + 1][k + 500 - a], dp[j][k] + A[i]);
                }else{
                    if(k >= a - 500) {
                        chmin(dp[j + 1][k - (a - 500)], dp[j][k] + A[i]);
                    }else{
                        chmin(dp[j][k + (1000 - a)], dp[j][k] + A[i]);
                    }
                }
                
            }
        }
        // swap(dp, tdp);
    }

    ll maxj = 0;
    rep(j, N + 1) rep(k, 500 * (N + 1)) if (dp[j][k] < 1e9) maxj = j;

    ll ans = INF;
    rep(k, 500 * (N + 1)) chmin(ans, dp[maxj][k]);
    cout << maxj << " " << ans << '\n';
}

int main() {
    while(true) {
        ll N;
        cin >> N;
        if (N == 0) break;
        solve(N);
    }
}
