#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using P = pair<int, int>;

//#include "atcoder/all"
//using namespace atcoder;
//using mint = modint1000000007;
//const int mod = 1000000007;
//using mint = modint998244353;
//const int mod = 998244353;
//const int INF = 1e9;
//const long long LINF = 1e18;

#define range(i, l, r) for(int i=(int)(l); i<(int)(r); i++)
#define rrange(i, l, r) for(int i=(int)(l); i>=(int)(r); i--)
#define all(v) (v).begin(),(v).end()
#define whole(f, x, ...) ([&](decltype((x)) container) { return (f)(begin(container), end(container), ## __VA_ARGS__); })(x)
#define INF 1e9+7

template <typename T> istream &operator>>(istream &is, vector<T> &v) { for (T &in : v) is >> in; return is; }

template <typename T1, typename T2> inline bool chmax(T1 &a, T2 b) { return a < b && (a = b, true); }
template <typename T1, typename T2> inline bool chmin(T1 &a, T2 b) { return a > b && (a = b, true); }

int dx[4] = { -1, 0, 1, 0 };
int dy[4] = { 0, 1, 0, -1 };
const double pi = 3.141592653589793238;

int w = 0; // cout << w << endl; w++;

int main(){
    cin.tie(0);
	ios_base::sync_with_stdio(false);
    while(1) {
        int n, m; cin >> n >> m;
        if(n==0 && m==0) break;
        vector<int> c(m); range(i, 0, m) cin >> c[i];
        vector<int> x(n); range(i, 0, n) cin >> x[i];
        vector< vector<int>> y(m, vector<int> (n+1));
        vector< vector<int>> sum(m, vector<int> (n+1));

        range(i, 0, m) y[i][0] = 128;
        range(i, 0, m) sum[i][0] = 0;
        range(j, 1, n+1){
            range(i, 0, m) {
                y[i][j] = y[i][j-1] + c[i];
                if(y[i][j] > 255) y[i][j] = 255;
                if(y[i][j] < 0) y[i][j] = 0;
                sum[i][j] = sum[i][j-1] + (y[i][j] - x[j-1]) * (y[i][j] - x[j-1]);
            }
        }
        int ans = INF;
        range(i, 0, m) chmin(ans, sum[i][n]);
        cout << ans << endl;
    }
}
