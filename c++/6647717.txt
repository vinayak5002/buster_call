#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

int MaxL = 1000;

int lcs(string a,string b){
	int c[MaxL+1][MaxL+1];//定义dp数组
	int m = a.size();
	int n = b.size();
	int maxl = 0;
	a = ' ' + a;//插入空格 
	b = ' ' + b; 
	for(int i = 0;i <= m ;i++) c[i][0] = 0;//初始化数组 
	for(int j = 0;j <= n ;j++) c[0][j] = 0;
	for(int i = 1 ;i <= m ;i++)
	{
		for(int j = 1;j <= n;j++)
		{
			if(a[i] == b[j]){
				c[i][j] = c[i-1][j-1] + 1; //左上角的值 
			}else{
				c[i][j] = max(c[i-1][j],c[i][j-1]);
			}
			maxl = max(maxl,c[i][j]);//最长子序列有可能在中间
		}
	}
	return maxl;
}

int main (){
	int n;
	cin>>n;
	string s1,s2;
	while(n>0){
		cin>>s1>>s2;
		cout<<lcs(s1,s2)<<endl;
		n--;
	}
	return 0;
}
