#include<bits/stdc++.h>
typedef long long int ll;
typedef unsigned long long int ull;
#define BIG_NUM 2000000000
#define HUGE_NUM 4000000000000000000 //オーバーフローに注意
#define MOD 1000000007
#define EPS 0.000000001
using namespace std;



#define SIZE 105
#define MAX 16

enum Type{
	SMALL,
	MID,
	LARGE,
};

int N;
ll POW[MAX+1],fact[MAX+1];
char A[MAX+1],S[SIZE],T[SIZE];
map<char,int> MAP;
map<int,int> NUM;
ll STATE,BASE;
int INDEX;

Type calc_E(char line[SIZE]);
Type calc_NUM(char line[SIZE]);


Type calc_E(char line[SIZE]){

	if(line[INDEX] != '('){

		Type ret = calc_NUM(line);
		return ret;
	}

	INDEX++;

	Type a = calc_E(line);
	char op = line[INDEX++];
	Type b = calc_E(line);

	INDEX++;

	if(op == '<'){

		return min(a,b);
	}else{

		return max(a,b);
	}
}


Type calc_NUM(char line[SIZE]){

	Type ret;

	int index = MAP[line[INDEX]];
	if(index == BASE){

		ret = MID;
	}else if(STATE&POW[index]){

		ret = SMALL;
	}else{

		ret = LARGE;
	}
	INDEX++;
	return ret;
}

void func(){

	scanf("%s",A);
	scanf("%s %s",S,T);

	int len_S,len_T;
	for(len_S = 0; S[len_S] != '\0'; len_S++);
	for(len_T = 0; T[len_T] != '\0'; len_T++);

	MAP.clear();
	for(int i = 0; i < N; i++){

		MAP[A[i]] = i;
	}

	ll ans = 0;

	//解となる文字
	for(BASE = 0; BASE < N; BASE++){
		for(STATE = 0; STATE < POW[N]; STATE++){
			if(STATE&POW[BASE])continue;

			INDEX = 0;
			Type ret1 = calc_E(S);
			if(ret1 != MID)continue;

			INDEX = 0;
			Type ret2 = calc_E(T);
			if(ret2 != MID)continue;

			int count = NUM[STATE];

			ans += fact[count]*fact[(N-1)-count];
		}
	}

	printf("%lld\n",ans);
}

int main(){

	POW[0] = 1;
	fact[0] = 3;

	for(int i = 1; i <= MAX; i++){

		POW[i] = POW[i-1]*2;
		fact[i] = i*fact[i-1];
	}

	for(int state = 0; state < POW[MAX]; state++){
		int count = 0;
		for(int loop = 0; loop < MAX; loop++){
			if(state&POW[loop]){

				count++;
			}
		}
		NUM[state] = count;
	}

	while(true){

		scanf("%d",&N);
		if(N == 0)break;

		func();
	}

	return 0;
}

