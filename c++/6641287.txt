#include <iostream>
using namespace std;

struct Card {char suit, value;};

// 不带flag的冒泡
void bubbleSort (struct Card A[], int N) {
    for (int i = 0; i < N; ++i) {
        for (int j = N - 1; j >= i + 1; --j) {
            if (A[j - 1].value > A[j].value)
                swap(A[j - 1], A[j]);
        }
    }
}

//void bubble_flag(struct Card A[], int N) {
//    bool flag = 1;
//    while (flag) {
//        flag = 0;
//        for (int i = N - 1; i > 0; --i) {
//            if (A[i - 1].value > A[i].value) {
//                swap(A[i - 1], A[i]);
//                flag = 1;
//            }
//        }
//    }
//}

void selectSort(struct Card A[], int N) {
    for (int i = 0; i < N - 1; ++i) {
        int mini = i;
        for (int j = i + 1; j < N; ++j) {
            if (A[j].value < A[mini].value) {
                mini = j;
            }
        }
        swap(A[i], A[mini]);
    }
}

bool isStable(struct Card A[], struct Card R[], int N) {
    for (int i = 0; i < N; ++i) {
        if (A[i].suit != R[i].suit) return false;
    }
    return true;
}

void print(struct Card A[], int N) {
    for (int i = 0; i < N; ++i) {
        if (i) cout << " ";
        cout << A[i].suit << A[i].value;
    }
    cout << endl;
}

int main()
{
    int n;
    Card C1[36] ,C2[36];

    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> C1[i].suit >> C1[i].value;
    }

    for (int i = 0; i < n; ++i) C2[i] = C1[i];

    bubbleSort(C1, n); 
    selectSort(C2, n);

    print(C1, n);
    cout << "Stable" << endl;

    print(C2, n);
    if (isStable(C1, C2, n)) cout << "Stable" << endl;
    else cout << "Not stable" << endl;
    return 0;
}
