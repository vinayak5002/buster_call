#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ld = long double;
using vl = vector<ll>;
template<class T> using vc = vector<T>;
template<class T> using vvc = vector<vector<T>>;

#define eb emplace_back
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for (ll i = 0; i < (n); i++)
#define repr(i, n) for (ll i = (n)-1; i >= 0; i--)
#define repe(i, l, r) for (ll i = (l); i < (r); i++)
#define reper(i, l, r) for (ll i = (r)-1; i >= (l); i--)
#define repa(i,n) for (auto& i: n)

template<class T1, class T2> inline bool chmax(T1 &a, const T2 &b) {if (a<b) { a=b; return 1;} return 0;}
template<class T1, class T2> inline bool chmin(T1 &a, const T2 &b) {if (b<a) { a=b; return 1;} return 0;}

struct init{init(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);cerr<<fixed<<setprecision(15);}}init_;

template <typename T, typename U> ostream& operator<<(ostream&out,const pair<T, U>&a){return out<<a.first<<' '<<a.second;}
template <typename T> ostream& operator<<(ostream&out, const vector<T>&a){for(auto it=a.begin();it!= a.end();){out<<*it;if(++it!=a.end())out<<' ';}return out;}
template <typename T, size_t N> ostream& operator<<(ostream&out, const array<T, N>&a){for(auto it=a.begin();it!= a.end();){out<<*it;if(++it!=a.end())out<<' ';}return out;}
template <typename T> ostream& operator<<(ostream&out, const set<T>&a){for(auto it=a.begin();it!=a.end();){out<<*it;if(++it!=a.end())out<<' ';}return out;}
template <typename T, typename U> ostream& operator<<(ostream&out, const map<T, U>&a){for(auto it=a.begin();it!=a.end();){out<<*it;if(++it!=a.end())out<<'\n';}return out;}

#ifdef DEBUG
template <class T, class N> void verr(const vector<T>& a, const N& n) { rep(i, n) cerr << a[i] << " "; cerr << endl; }
template <class T, class N, size_t AN> void verr(const array<T, AN>& a, const N& n) { rep(i, n) cerr << a[i] << " "; cerr << endl; }
ll dbgt = 1; void err() { cerr << "passed " << dbgt++ << endl; }
template<class H, class... T> void err(H&& h,T&&... t){ cerr<< h << (sizeof...(t)?" ":"\n") << flush; if(sizeof...(t)>0) err(forward<T>(t)...); }
#else
void err(){}
template <class H, class... T>
void err(H &&h, T &&...t) {}
template <class H, class... T>
void verr(H &&h, T &&...t) {}
#endif

const ll INF = 4e18;
const ld EPS = 1e-11;
const ld PI = acos(-1.0L);
// const ll MOD = 1e9 + 7;
const ll MOD = 998244353;
//--------------------------------------------------------------------------------//

void solve(ll H, ll W){
    vvc<ll> A(H, vl(W));

    rep(i, H) rep(j, W) cin >> A[i][j];

    vvc<ll> acc(H + 1, vl(W + 1));
    rep(i, H) rep(j, W) {
        acc[i + 1][j] += acc[i][j] + A[i][j];
    }
    rep(i, H) rep(j, W) {
        acc[i][j + 1] += acc[i][j];
    }

    ll ans = 0;
    rep(i, H) rep(j, W) {
        repe(ti, i + 3, H + 1) repe(tj, j + 3, W + 1) {

            ll min_o = INF, max_i = -INF, ins = 0, ous = 0;
            repe(ki, i, ti) repe(kj, j, tj) {
                if(ki == i or ki == ti - 1 or kj == j or kj == tj - 1) {
                    chmin(min_o, A[ki][kj]);
                    ous += A[ki][kj];
                }else{
                    chmax(max_i, A[ki][kj]);
                    ins += A[ki][kj];
                }
            }
            // err(i, j, ti, tj, min_o, max_i, ins, ous);
            if (min_o <= max_i) continue;
            ll cnt = (ti - i - 2) * (tj - j - 2);
            chmax(ans, cnt * min_o - ins);
        }
    }
    cout << ans << endl;
}

int main() {
    while(true){
        ll H, W;
        cin >> H >> W;
        if (H == 0) break;
        solve(H, W);
    }
}
