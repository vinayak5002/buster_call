#include<stdio.h>
#include<stdlib.h>
#define N 20

struct node{
    int key;
    struct node *r,*l,*p;
};

typedef struct node *Node;

Node root;

void insert (int a){
    Node x=root;
    Node y=NULL;
    Node z;
    z=malloc(sizeof(struct node));
    z->key=a;
    z->l=NULL;
    z->r=NULL;
    z->p=NULL;
    while(x!=NULL){
        y=x;
        if(z->key < x->key){
            x=x->l;
        }
        else{
            x=x->r;
        }
    }
    //z->p=y;
    if(y==NULL){
        root=z;
    }
    else if(z->key < y->key){
        y->l=z;
    }
    else{
        y->r=z;
    }
}

void od1(Node b){
    if(b==NULL){
        return;
    }
    od1(b->l);
    printf(" %d",b->key);
    od1(b->r);
}

void od2(Node c){
    if(c==NULL){
        return;
    }
    printf(" %d",c->key);
    od2(c->l);
    od2(c->r);
}

Node find(int d){
    Node x=root;
    while(x!=NULL){
        if(d==x->key){
            return x;
        }
        else if(d < x->key){
            x=x->l;
        }
        else{
            x=x->r;
        }
    }
    return x;

}

int main (void){
    int n,a;
    char b[N];
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%s",b);
        if(b[0]=='i'){
            scanf("%d",&a);
            insert(a);
        }
        else if(b[0]=='f'){
            scanf("%d",&a);
            if(find(a)!=NULL){
                printf("yes\n");
            }
            else {
                printf("no\n");

            }
        }
        else{
            od1(root);
            printf("\n");
            od2(root);
            printf("\n");
        }
    }
    return 0;
}
