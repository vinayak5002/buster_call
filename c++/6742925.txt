#include<stdio.h>

#define N 100

int n, A[N][N];
int id[N], d[N], f[N], t;


void dfs(int u){
    int k;
    id[u]=1;
    d[u]=++t;
    for(k=0; k<n; k++){
        if(A[u][k]==1 && id[k]==0){
            dfs(k);
        }
    }
    f[u]=++t;
}


int main(void){
    int i, j, a, b, c;

    scanf("%d", &n);

    for(i=0; i<n; i++){  //初期化
        for(j=0; j<n; j++){
            A[i][j] = 0;
        }
    }

    for(i=0; i<n; i++){
        scanf("%d %d", &a, &b);
        for(j=0; j<b; j++){  //bが隣接する頂点の個数なのでj(=1にするマス)の繰り返しはb個までにする
            scanf("%d", &c);
            A[a-1][c-1] = 1; //要素aに接する頂点(a,c)のマスを1にする(配列は0からなので-1する)
        }
    }

    for(i=0; i<n; i++){
        id[i] = 0;
    }

    t=0;

    for(i=0; i<n; i++){
        if(id[i] == 0){
            dfs(i);
        }
    }

    for(i=0; i<n; i++){ //表示
            printf("%d %d %d\n", i+1, d[i], f[i]);
        }

    return 0;

}

