#include <bits/stdc++.h>
using namespace std;
#define int long long
#define INF 1e18
#define rep(i, n) for(int (i) = 0; (i) < (n); (i)++)
#define all(x) (x).begin(), (x).end()
typedef pair<int, int> P;
typedef pair<int, P> PP;
const int mod = 1000000007;
//const int mod = 998244353;

int n, m;
vector<int> a, w;
set<int> st;

void calc(int idx, int left, int right){
    if(idx == m){
        int x = max(left - right, right - left);
        if(st.find(x) == st.end()){
            st.insert(x);
        }
        return;
    }

    calc(idx+1, left, right);
    calc(idx+1, left + w[idx], right);
    calc(idx+1, left, right + w[idx]);
}

signed main(){
    cout << fixed << setprecision(18);

    while(1){
        cin >> n >> m;
        if(n == 0)break;
        a.resize(n);
        w.resize(m);
        rep(i, n)cin >> a[i];
        rep(i, m)cin >> w[i];
        st.clear();
        calc(0, 0, 0);
        unordered_map<int, int> mp;
        int cnt = 0;
        rep(i, n){
            if(st.find(a[i]) != st.end())continue;
            cnt++;
            set<int> tmp_st;
            for(auto W : st){
                int x = max(W - a[i], a[i] - W);
                int y = W + a[i];
                if(tmp_st.find(x) == tmp_st.end())tmp_st.insert(x);
                if(tmp_st.find(y) == tmp_st.end())tmp_st.insert(y);
            }
            for(auto x : tmp_st){
                mp[x]++;
            }
        }
        if(cnt == 0){
            cout << 0 << endl;
            continue;
        }
        int ans = INF;
        for(auto x : mp)if(x.second == cnt)ans = min(ans, x.first);
        if(ans == INF)ans = -1;
        cout << ans << endl;
    }

}
