#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

const int maxn = 1001;
string s1, s2;
int dp[maxn][maxn];

int main()
{
    int n;
    scanf("%d", &n);
    while(n--)
    {
        cin>>s1>>s2;
        int lenA = s1.length();
        int lenB = s2.length();
        dp[0][0]=s1[0]==s2[0]?1:0;
        //边界条件
        for(int i=1;i<lenA;i++)
        {
            dp[i][0]=max(dp[i-1][0],s1[i]==s2[0]?1:0);
           // dp[i][0] = s1.find(s2[0])==-1?0:1;
        }
        for(int j=1;j<lenB;j++)
        {
            dp[0][j]=max(dp[0][j-1],s1[0]==s2[j]?1:0);
          //  dp[0][j] = s2.find(s1[0])==-1?0:1;
        }
        //
        for(int i=1;i<lenA;i++)
        {
            for(int j=1;j<lenB;j++)
            {
                if(s1[i] == s2[j])
                {
                    dp[i][j] = dp[i-1][j-1] + 1;
                }
                else
                {
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        printf("%d\n", dp[lenA-1][lenB-1]);
    }

    return 0;
}

