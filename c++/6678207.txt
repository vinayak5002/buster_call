#include<bits/stdc++.h>
#include <iostream>
#include <string>
#include <cmath>
#include <algorithm>
#include <stdlib.h>
#include <vector>
#include <set>
#include <cassert>
#include <numeric>
#include <iomanip>
#include <queue>
#include <deque>
using namespace std;
using ll = long long;
#define rep(i,n) for(ll i = 0; i < (ll)n; i++)
#define rep3(i, m, n) for (ll i = (m); (i) < (ll)(n); ++ (i))
#define ALL(a)  (a).begin(),(a).end()
using Graph = vector<vector<ll>>;




int main() {
    ll W, N, X, K, A, B, C, L=0;
    int d[1010][1010];
    multiset<ll> st; // std::setの重複可能版
    string s, s2, s3;
    map<ll,ll> mp, mp2;
    map<ll,string> mp3;
    vector<string> r;
    vector<pair<int, int>> mypair;
    char S1;
    deque<int> deq;



    cin >> N;



    rep(i,N){
      cin >> s >> s2;
      rep(i,s.size()) d[0][i]=0;
      rep(i,s2.size()) d[i][0]=0;

      rep(i,s.size()){
        rep(j,s2.size()){
          if(s[i]==s2[j]){
            d[i+1][j] = max(d[i][j-1]+1,d[i][j]);
          }else{
            d[i+1][j] = max(d[i+1][j-1],d[i][j]);
          }

        }
        
      }

      cout << d[s.size()][s2.size()-1] << endl;



    }















}
