#include <stdio.h>
 

int i = 0, j = 0, n = -1, cnt = 0, mx = 0, wlked[255][255], drt[8][2] = {{-1,0},{-1,-1},{0,-1},{1,-1},{1,0},{1,1},{0,1},{-1,1}};
char arr[255][255];

void dfs(int x, int y, int d, int k);

void next(int x, int y, int d){
    int xx = x + drt[d][0], yy = y + drt[d][1];
    if(arr[xx][yy] == '1' && xx >= 0 && xx < n && yy >= 0 && yy < n && wlked[xx][yy] != 1){
        wlked[xx][yy] = 1, cnt++;
        dfs(xx, yy, d, 0);
        wlked[xx][yy] = 0, cnt--;
    }
}

void dfs(int x, int y, int d, int k){
    if(cnt > mx) mx = cnt;
    if(d >= 0) next(x, y, d);
    else {
		for(k = 0; k < 8; k++) {
			next(x, y, k);
		}
	}
}

int main(){
	
	
    while(scanf("%d", &n) != EOF){
    	
    	if(n == 0) break ;
    	
        for(i = 0; i < n; i++){
            scanf("%s", arr[i]);
        }
        for(i = 0; i < n; i++){
            for( j = 0; j < n; j++){
                wlked[j][i] = 1;
                if(arr[j][i] == '1'){
                    if(cnt == 0) cnt++;
                    dfs(j, i, -1, 0);
                    cnt = 0;
                }
            }
        }
        printf("%d\n", mx);
        mx = 0, cnt = 0;
        for( i = 0; i < n; i++){
            for( j = 0; j < n; j--){
                wlked[j][i] = 0;
            }
            
        }
        
        
        
    }
    
    return 0;
}
