#include <iostream>
#include <vector>
using namespace std;

struct Node
{
	int id;
	int left;
	int right;
	int parent = -1;
};

vector<int> Preorder;
vector<int> Inorder;
vector<int> Postorder;

void order(vector<Node>tree, int id)
{
	Preorder.push_back(id);
	if (tree[id].left != -1)
	{
		order(tree, tree[id].left);
	}
	Inorder.push_back(id);
	if (tree[id].right != -1)
	{
		order(tree, tree[id].right);
	}
	Postorder.push_back(id);
}

int main()
{
	int n;
	cin >> n;
	vector<Node> tree(n);

	// Input data
	for (int i = 0; i < n; i++) {
		int id, left, right;
		cin >> id >> left >> right;
		tree[id].id = id;
		tree[id].left = left;
		tree[id].right = right;
		if (left != -1) {
			tree[left].parent = id;
		}
		if (right != -1) {
			tree[right].parent = id;
		}
	}

	// get height
	for (int i = 0; i < n; i++) {
		if (tree[i].parent == -1)
		{
			order(tree, i);
			break;
		}
	}
	cout << "Preorder" << endl;
	for (int i = 0; i < n; i++) {
		if (i)cout << " ";
		cout << Preorder[i];
	}
	cout << endl;

	cout << "Inorder" << endl;
	for (int i = 0; i < n; i++) {
		if (i)cout << " ";
		cout << Inorder[i];
	}
	cout << endl;

	cout << "Postorder" << endl;
	for (int i = 0; i < n; i++) {
		if (i)cout << " ";
		cout << Postorder[i];
	}
	cout << endl;

	return 0;
}
