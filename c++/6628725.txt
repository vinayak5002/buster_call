#include <stdio.h>
#define N 8
#define Free -1
#define Not_Free 1

int row[N],col[N],dpos[2*N-1],dneg[2*N-1];
int X[N][N];

void printBoard(){
      int i,j;
      for(i=0 ;i<N ;i++){
            for(j=0 ;j<N ;j++)
            if(x[i][j]){
                  if(row[i] != j)
                  return;
            }
      }
      
      for(i=0 ;i<N ;i++){
            for(j=0 ;j<N ;j++){
                  printf();
            }
      }
}

void recursive(int i){
      if(i == N) printBoard();
      
      int j;
      for(j=0 ;j<N ;j++){
            if(col[j] == Not_Free ||
               dpos[i+j] == Not_Free ||
               dneg[i-j+(N-1)] == Not_Free)
               
               row[i] = j; 
               col[i] = dpos[i+j] = d[i-j+(N-1)] = Not_Free;
               
               recursive(i+1);
               
               row[i] = col[i] = dpos[i+j] = d[i-j+(N-1)] = Free;
      } 
}

int main(void){
    // Your code here!
    int n,i,j,a,b;
    scanf("%d",&n);
    
    for(i=0 ;i<N ;i++){
          for(j=0 ;j<N ;j++)
          x[i][j] = 0;
    }
    
    for(i=0 ;i<n ;i++){
          scanf("%d%d",a,b);
          x[a][b] = 1;
    }
    
    recursive(0);
    
    return 0;
}


