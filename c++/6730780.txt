#include <bits/stdc++.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string.h>
#include <queue>
using namespace std;
vector<int> d,f;
vector<bool> seen;
int t=1;
vector<vector<int> > G;

void dfs(int start){
  d[start]=t;
  seen[start]=1;
  t++;
  for(int i=0; i<G[start].size(); i++){
    if(seen[G[start][i]])continue;
    dfs(G[start][i]);
  }
  f[start]=t;
  t++;
}

int main(){
  int N;
  cin>>N;
  int u,k;
  G.resize(N);
  int t=1;
  for(int i=0; i<N; i++){
    cin>>u>>k;
    int v;
    for(int j=0; j<k; j++){cin>>v;
                           G[i].push_back(v-1);}
  }
  d.resize(N);
  f.resize(N);
  seen.resize(N);
  for(int i=0; i<N; i++){
    if(seen[i])continue;
    dfs(i);
  }
  for(int i=0; i<N; i++)cout<<i+1<<' '<<d[i]<<' '<<f[i]<<endl;
}
