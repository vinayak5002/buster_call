#include<bits/stdc++.h>
#define db long long
using namespace std;
const int M=1e5+7; 
int n,ans,now;
struct node{
    db x,y; int id;
}p[M],tb[M],ttbb[M];
int ok[M]; 
db check(node a1,node a2,node b1,node b2){
	return (a2.x-a1.x)*(b2.y-b1.y)-(b2.x-b1.x)*(a2.y-a1.y); 
	//<0表右转 =0表共线 >0表左转 
}
db dis(node p1,node p2){
	return (p2.y-p1.y)*(p2.y-p1.y)+(p2.x-p1.x)*(p2.x-p1.x);
}
bool cmp(node p1,node p2){
	db tmp=check(p[1],p1,p[1],p2);
	if(tmp>0 ||(tmp==0 && dis(p[1],p1)<dis(p[1],p2))) return 1;
	return 0;
}
bool cmpp(node a,node b){
	return dis(a,p[1])>dis(b,p[1]);
}
bool cmppp(node a,node b){
	return dis(a,p[1])<dis(b,p[1]);
}
void work(){
	int l=n;
	while(l>2 && check(p[1],p[l],p[1],p[l-1])==0) l--;
	sort(p+l,p+1+n,cmpp);
	l=2;
	while(l<n && check(p[1],p[l],p[1],p[l+1])==0) l++;
	sort(p+2,p+l+1,cmppp);
}
int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		scanf("%lld%lld",&p[i].x,&p[i].y);
		if(i!=1&&(p[i].y<p[1].y ||(p[i].y==p[1].y && p[i].x<p[1].x)))
			swap(p[1],p[i]);
	}
	sort(p+1,p+1+n,cmp),work();
	for(int i=2;i<n;i++) if(check(p[i-1],p[i],p[i-1],p[i+1])<0)
		return puts("0"),0;
	if(check(p[n-1],p[n],p[n-1],p[1])<0) return puts("0"),0;
	if(check(p[n],p[1],p[n],p[2])<0) return puts("0"),0;
	puts("1");
	return 0;
}
