#include <stdio.h>
#define MAX 100005
#define NIL -1

int A[MAX];

struct Node {int parent, left, right;} B[MAX];

void setDepth(int u, int p) //節点u及びその部分木の各節点の深さをセット
{
  A[u] = p;
  if (B[u].right != NIL) setDepth(B[u].right, p);
  if (B[u].left != NIL) setDepth(B[u].left, p+1);
}

void print(int u)
{
  printf("node%d: parent = %d, depth = %d, ", u, B[u].parent, A[u]);

  if (B[u].parent == NIL) printf("root, [");
  else if (B[u].left == NIL) printf("leaf, [");
  else printf("internal node, [");

  for (int i = 0, c = T[u].left; c != NIL; i++, c = B[c].right) {
    if (i) printf(", ");
    printf("%d", c);
  }

  puts("]");
}

int main(void)
{
  int n, d, 
 Int k ,c, l, root;

  scanf("%d", &n);

  for (int i = 0; i < n; i++)
    B[I].parent = B[I].left = B[I].right = NIL;

  for (int i = 0; i < n; i++) {
    scanf("%d%d", &d, &k);
    for (int j = 0; j < k; j++) {
      scanf("%d", &c);
      B[c].parent = id;
      if (j == 0)
        B[id].left = c;
      else
        B[l].right = c;
      l = c;
    }
  }

  for (int i = 0; i < n; i++)
    if (B[I].parent == NIL)
      root = i;

  setDepth(root, 0);

  for (int i = 0; i < n; i++)
    print(i);

  return 0;
}

