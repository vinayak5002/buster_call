#include <bits/stdc++.h>
using namespace std;
struct l{
    int x;
    struct l *fore;
    struct l *back;
    l(){
        fore = NULL;
        back = NULL;
    }
};
int insert(struct l *&F){
    struct l *New = (struct l*)malloc(sizeof(struct l));
    int a;
    cin >> a;
    New->x = a;
    if(F != NULL){
        New->fore = F;
        F->back = New;
    }
    F = New;
    return 0;
}
int deleteF(struct l *&F){
    if(F->fore == NULL) F = NULL;
    else if(F->fore != NULL){
        F = F->fore;
        F->back = NULL;
    }
    return 0;
}
int deleteL(struct l *&F){
    struct l *c = (struct l*)malloc(sizeof(struct l));
    c = F;
    while(c->fore != NULL) c = c->fore;
    if(c->back == NULL) F = NULL;
    else if(c->back != NULL){
        c = c->back;
        c->fore = NULL;
    }
    return 0;
}
int delete0(struct l *&F){
    struct l *c = (struct l*)malloc(sizeof(struct l));
    c = F;
    int a;
    cin >> a;
    while(c->fore != NULL && c->x != a) c = c->fore;
    if(c->x == a){
        if(c->back == NULL) deleteF(F);
        else if(c->fore == NULL) deleteL(F);
        else {
            struct l *c1 = (struct l*)malloc(sizeof(struct l));
            c1 = c->fore;
            c = c->back;
            c->fore = c1;
            c1->back = c;
        }
    }
    return 0;
}
int print(struct l *&F){
    struct l *c = (struct l*)malloc(sizeof(struct l));
    c = F;
    while(c->fore != NULL){
        cout << c->x << " ";
        c = c->fore;
    }
    cout << c->x << endl;
    return 0;
}
int main(){
    int n;
    cin >> n;
    struct l *F = (struct l*)malloc(sizeof(struct l));
    F = NULL;
    string s;
    while(n--){
        cin >> s;
        if(s.at(0) == 'i') insert(F);
        else if(s.size() == 6) delete0(F);
        else if(s.at(6) == 'F') deleteF(F);
        else if(s.at(6) == 'L') deleteL(F);
        //print(F);
    }
    print(F);
    return 0;
}
