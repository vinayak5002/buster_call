#include<iostream>
#include<vector>
#include<algorithm>
#include<list>
#include<string>
using namespace std;


int main() {
	string taro, hanako;
	int n, taro_point = 0, hanako_point = 0, draw_point = 0;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> taro >> hanako;
		draw_point = 0;
		if (taro.size() > hanako.size()) {
			for (int j = 0; j < hanako.size(); j++) {
				if (taro.at(j) - hanako.at(j) > 0) {
					taro_point += 3;
					break;
				}
				else if (taro.at(j) - hanako.at(j) < 0) {
					hanako_point += 3;
					break;
				}
				else if (taro.at(j) - hanako.at(j) == 0) draw_point++;

			}
			if (draw_point == hanako.size()) {
				taro_point += 3;
			}
		}
		else if (taro.size() == hanako.size()) {
			for (int j = 0; j < hanako.size(); j++) {
				if (taro.at(j) - hanako.at(j) > 0) {
					taro_point += 3;
					break;
				}
				else if (taro.at(j) - hanako.at(j) < 0) {
					hanako_point += 3;
					break;
				}
				else if (taro.at(j) - hanako.at(j) == 0) draw_point++;

			}
			if (draw_point == hanako.size()) {
				hanako_point++;
				taro_point++;
			}
		}
		else if (taro.size() < hanako.size()) {
			for (int j = 0; j < taro.size(); j++) {
				if (taro.at(j) - hanako.at(j) > 0) {
					taro_point += 3;
					break;
				}
				else if (taro.at(j) - hanako.at(j) < 0) {
					hanako_point += 3;
					break;
				}
				else if (taro.at(j) - hanako.at(j) == 0) draw_point++;

			}
			if (draw_point == taro.size()) {
				hanako_point += 3;
			}
		}
	}
	cout << taro_point << " " << hanako_point << endl;

}
