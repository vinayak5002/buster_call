#include<stdio.h>
#include<iostream>
#include <stdlib.h>

using namespace std;


int n;

struct Node{
    int key;
    Node *parent, *leftChild, *rightChild;
};

Node *root, *NIL;

void insert(int k){
    Node* p = NIL;
    Node* cur = root;
    Node* z = (Node*) malloc(sizeof(Node));
    z->key = k;
    z->leftChild = NIL;
    z->rightChild = NIL;

    while(cur != NIL){
        p = cur;
        if(z->key < cur->key){
            cur = cur->leftChild;
        }else{
            cur = cur->rightChild;
        }
    }

    z->parent = p;

    if(p == NIL){
        root = z;
    }else if(p->key < z->key){
        p->rightChild = z;
    }else{
        p->leftChild = z;
    }
}


void inOrderPrint(Node* n){
    if(n){
        inOrderPrint(n->leftChild);
        cout << " "<< n->key;
        inOrderPrint(n->rightChild);
    }
}

void preOrderPrint(Node* n){
    if(n){
        cout<< " "<< n->key;
        preOrderPrint(n->leftChild);
        preOrderPrint(n->rightChild);
    }
}



int main(){

    string s;
    int key;
    scanf("%d", &n);
    for(int i = 0; i< n; i++){
        cin >> s;
        if(s== "insert"){
            scanf("%d", &key);
            insert(key);
        }
            
        else{
            inOrderPrint(root);
            cout<< endl;
            preOrderPrint(root);
            cout<< endl;
        }
    }


    return 0;
}
