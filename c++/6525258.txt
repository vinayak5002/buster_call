#include <bits/stdc++.h>
using namespace std;

void createPrimesList(int n, vector<int> &primes) {
    vector<bool> isPrimes(n + 1, true);

    isPrimes.at(0) = false;
    isPrimes.at(1) = false;
    for (int i = 2; i <= n; i++) {
        if (isPrimes.at(i) == true) {
            for (int j = 2; i * j <= n; j++) {
                isPrimes.at(i * j) = false;
            }
        }
    }

    for (int i = 2; i <= n; i++) {
        if (isPrimes.at(i) == true) primes.push_back(i);
    }
}

double ratioNum(int a, int b) {
    if (a > b)
        return (double)b / (double)a;
    else
        return (double)a / (double)b;
}

int main() {
    vector<int> p, q;
    int k = 0;

    while (1) {
        int m, a, b;
        cin >> m >> a >> b;
        if (m == 0 && a == 0 && b == 0) break;

        vector<int> primes;
        createPrimesList(m / 2, primes);

        p.push_back(1);
        q.push_back(1);

        for (int i = primes.size() - 1; i >= 0; i--) {
            for (int j = i; j >= 0; j--) {
                if (ratioNum(a, b) <= ratioNum(primes.at(i), primes.at(j))) {
                    if (p.at(k) * q.at(k) <= primes.at(i) * primes.at(j) &&
                        primes.at(i) * primes.at(j) <= m) {
                        q.at(k) = primes.at(i);
                        p.at(k) = primes.at(j);
                    }
                }
            }
        }

        k++;
    }

    for (int i = 0; i < p.size(); i++) {
        cout << p.at(i) << " " << q.at(i) << endl;
    }

    return 0;
}

