#include<stdio.h>

#include<stdlib.h>

#define NIL NULL

struct node{
  struct node *right;
  struct node *left;
  struct node *parent;
  int key;
};
typedef struct node * Node;

Node root;

Node treeMini(Node x){
  while(x->left!=NIL){
    x=x->left;
  }
  return x;
}

void insert(int k){
  Node y = NIL;
  Node x = root;
  Node z;

  z = malloc(sizeof(struct node));
  z->key = k;
  z->left = NIL;
  z->right = NIL;

 while(x!=NIL){
   y=x;
   if(z->key<x->key){
     x=x->left;
   }
   else{
     x=x->right;
   }
 }
 z->parent=y;

 if(y==NIL){
   root=z;
 }
 else if(z->key<y->key){
   y->left=z;
 }
 else{
   y->right=z;
 }
}
Node Inheritor(Node x){
Node a;
if(x->right!=NIL){
  return treeMini(x->right);
}
a=x->parent;
while(a!=NIL && x==a->right){
  x=a;
  a= a->parent;
}
return a;
}

void Deletion(Node z){
  Node a;
  Node b;
  Node c;

  if(z->left==NIL || z->right==NIL){
    b=z;
  }
  else{
    b=Inheritor(z);
  }
  if(b->left!=NIL){
    a=b->left;
  }
  else{
    a=b->right;
  }
  if(a!=NIL){
    a->parent=b->parent;
  }
  c=b->parent;
  if(b->parent==NIL){
    root = a;
  }
  else if(b==c->left){
    c->left=a;
  }
  else{
    c->right = a;
  }
  if(b!=z){
    z->key = b->key;
  }
}

Node Search(Node u, int k){
while(u!=NIL){
  if(u->key==k){
    return u;
  }
  else if(u->key>k){
    u=u->left;
  }
  else{
    u=u->right;
  }
}
return NIL;
}


void inorder(Node u){
  if(u==NIL){
    return;
  }
  inorder(u->left);
  printf(" %d",u->key);
  inorder(u->right);
}
void preorder(Node u){
  if(u==NIL){
    return;
  }
  printf(" %d",u->key);
  preorder(u->left);
  preorder(u->right);
}


int main(){
  int n, i, x;
  char com[20];
  scanf("%d", &n);

  for ( i = 0; i < n; i++ ){
    scanf("%s", com);
    if ( com[0] == 'f' ){
  scanf("%d", &x);
  Node t =Search(root,x);
  if(t!=NIL){
    printf("yes\n");
  }
  else{
      printf("no\n");
  }
    }
    else if ( com[0] == 'i' ){
      scanf("%d", &x);
      insert(x);
    } else if ( com[0] == 'p' ){
      inorder(root);
      printf("\n");
      preorder(root);
      printf("\n");
    } else if ( com[0] == 'd' ){
        scanf("%d", &x);
        Deletion(Search(root,x));
    }
  }

  return 0;
}

