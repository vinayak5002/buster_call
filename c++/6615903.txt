#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

vector<ll> fact, factinv, inv;
ll mod = 998244353;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}

bool chmax(ll& p, ll q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

bool chmin(ll& p, ll q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll sti(string S){
    ll res=0;
    rep(i,S.size()){
        res+=S[i]-'0';
        res*=10;
    }
    return res/10;
}

string ist(ll n,ll L){
    string res="";
    rep(l,L)res+='0';
    ll p=L-1;
    while(n>0){
        res[p]=char(n%10+'0');
        p--;
        n/=10;
    }
    return res;
}


int main() {
    //cin.tie(nullptr);
    //ios::sync_with_stdio(false);
    

    ll P,Q,R;
    cin>>P>>Q>>R;

    ll t=0;
    while(t<1e4){
        if((t+(60-R))%60==0){
            cout<<t<<endl;
            return 0;
        }
        if((t+Q)%(P+Q)==0){
            t+=Q;
        }
        else{
            t++;
        }
    }
    cout<<-1<<endl;

    
}
