#include <bits/stdc++.h>
using namespace std;

vector<vector<int> > connect(110);
vector<int> start(110);
vector<int> goal(110);
int cnt;

void dfs(int num){
	start[num] = ++cnt;
	for(int i = 0;i < connect[num].size();i++){
		if(connect[num][i] != num && !start[connect[num][i]] && !goal[connect[num][i]]) dfs(connect[num][i]);
	}
	goal[num] = ++cnt;
}

int main(){
	int n;
	cin >> n;
	for(int i = 0;i < n;i++){
		int now, k;
		cin >> now >> k;
		for(int j = 0;j < k;j++){
			int temp;
			cin >> temp;
			connect[now].push_back(temp);
		}
	}
    dfs(1);
    for (int i = 1; i < n + 1; i++)
    {
        if(!goal[i]) dfs(i);
    }
    for(int i = 1; i < n + 1;i++){
		cout << i << " " << start[i] << " " << goal[i] << endl;
	}
	return 0;
}
