#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <bitset>
using namespace std;
using ll = long long;

const int inf = 1e9+7;

int main() {
    int n, m;
    cin >> n >> m;
    vector<vector<int>> g(n, vector<int>(n, inf));
    for (int i = 0; i < m; i++) {
        int v, u, d;
        cin >> v >> u >> d;
        g[v][u] = d;
    }

    vector<vector<int>> dp(1<<n, vector<int>(n, inf));
    dp[0][0] = 0;

    for (int s = 0; s < 1<<n; s++) {
        for (int u = 0; u < n; u++) {
            for (int v = 0; v < n; v++) {
                if (!(s & (1<<u)) && s != 0) continue;
                if ((s & (1<<v)) == 0) {
                    dp[s|(1<<v)][v] = min(dp[s|(1<<v)][v], dp[s][u] + g[u][v]);
                }
            }
        }
    }

    if (dp[(1<<n)-1][0] == inf) {
        cout << -1 << endl;
    } else {
        cout << dp[(1<<n)-1][0] << endl;
    }

    return 0;
}

