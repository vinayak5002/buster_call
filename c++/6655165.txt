#define quick ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define rep(i, n) for (int i = 0; i < n; i++)
#define reps(i, n) for (int i = 1; i <= n; i++)
#include <bits/stdc++.h>
using namespace std;
int largestRectangleArea(vector<int> &heights)
{
    int n = heights.size();
    vector<int> left(n), right(n, n);

    stack<int> mono_stack;
    for (int i = 0; i < n; ++i)
    {
        while (!mono_stack.empty() && heights[mono_stack.top()] >= heights[i])
        {
            right[mono_stack.top()] = i;
            mono_stack.pop();
        }
        left[i] = (mono_stack.empty() ? -1 : mono_stack.top());
        mono_stack.push(i);
    }

    int ans = 0;
    for (int i = 0; i < n; ++i)
    {
        ans = max(ans, (right[i] - left[i] - 1) * heights[i]);
    }
    return ans;
}
int main()
{
    quick;
    int n;
    cin >> n;
    vector<int> l(n);
    for (int i = 0; i < n;i++)
    {
        cin >> l[i];
    }
    cout << largestRectangleArea(l) << endl;
}
