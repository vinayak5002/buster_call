#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=998244353;
#define rep(i,a) for (int i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N;
	cin>>N;
	int base=(N*(N-1))/2;
	vector<vector<int>> G(N,vector<int>(N));
	rep(i,N) rep(j,N){
		char c;
		cin>>c;
		if(c=='Y'){
			G[i][j]=1;
			if(i<j) base--;
		}
	}
	if(N%2){
		if(base%2) cout<<"Taro\n";
		else cout<<"Hanako\n";
		return ;
	}
	int A=0,B=0;
	vector<int> seen(N);
	rep(i,N){
		if(seen[i]) continue;
		vector<int> p={i};
		int ind=0;
		while((int)(p.size())!=ind){
			rep(j,N){
				if(G[p[ind]][j]&&seen[j]==0){
					seen[j]=1;
					p.push_back(j);
				}
			}
			ind++;
		}
		if(ind%2) A++;
		else B++;
	}
	if((B==0)^(base%2==0)) cout<<"Taro\n";
	else cout<<"Hanako\n";
}
/*
(a(a-1)+(N-a)(N-a-1))/2
=(a^2-a+N^2-(2*a+1)N+a^2+a)/2
=a^2+(N(N-1-2*a))/2

(N(N-1))/2-Yの偶奇
Nが奇数->それで決まる。
Nが偶数->偶数の塊と奇数の塊の数の差で決まる

*/
