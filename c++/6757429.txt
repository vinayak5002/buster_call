#include <bits/stdc++.h>
#define rep(i, n) for (long long  i = 0; i < (long long )(n); i++) 
#define all(x) (x).begin(),(x).end() 
#define fix(x) fixed << setprecision(x)
#define BACK(x) x.rbegin(),x.rend()
//MOD1 1000000007
//MOD2 998244353
#define pb push_back
#define mp make_pair
#define bit(n) (1LL<<(n))
using namespace std;
using ull = unsigned long long;
using ll = long long;
using vl = vector<long long>;
using vvl = vector<vector<long long>>;
using vs = vector<string>;
using pl = pair<long long, long long>;
template <typename T> inline bool chmin(T& a, const T& b) {bool compare = a > b; if (a > b) a = b; return compare;}
template <typename T> inline bool chmax(T& a, const T& b) {bool compare = a < b; if (a < b) a = b; return compare;}
const ll INF = 1LL << 60;
//#include <atcoder/all>
//using namespace atcoder;
//using mint = modint1000000007;
//using mint = modint998244353;

void solve(){
  const int N = 8;
  int k;cin>>k;
  vector<pl> P(k);
  rep(i,k)cin>>P[i].first>>P[i].second;
  vl Q(N);
  int M = Q.size(); 
  iota(all(Q),0);
  do{
    //重なりがないかどうかを調べる
    bool flag1 {};
    //絶対値が違うかどうか
    //つまり斜めにあるかどうかを調べる
    bool flag2 {};
    for(auto p:P){
      if(Q[p.second]!=p.first) flag1=true;
    }
    if(flag1)continue;
    rep(i,M){
      for(int j=i+1;j<M;j++){
        if(abs(i-j)==abs(Q[i]-Q[j]))flag2=true;
      }
    }
    if(!flag2)break;
  }while(next_permutation(all(Q)));
  vs ans(N,"........");
  rep(i,N)ans[i][Q[i]] = 'Q';
  rep(i,N)cout<<ans[i]<<endl;
}
int main(){cin.tie(nullptr);ios::sync_with_stdio(false);solve();}

