#include <bits/stdc++.h>
using namespace std;

int main() {
    vector<int> resultX, resultY;
    int count = 0;

    while (1) {
        int N;
        cin >> N;
        if (N == 0) break;

        vector<int> n(200), d(200), x(200), y(200);
        for (int i = 1; i <= N - 1; i++) {
            cin >> n.at(i) >> d.at(i);
        }

        x.at(0) = 0;
        y.at(0) = 0;
        for (int i = 1; i <= N - 1; i++) {
            switch (d.at(i)) {
                case 0:  //左
                    x.at(i) = x.at(n.at(i)) - 1;
                    y.at(i) = y.at(n.at(i));
                    break;
                case 1:  //下
                    x.at(i) = x.at(n.at(i));
                    y.at(i) = y.at(n.at(i)) - 1;
                    break;
                case 2:  //右
                    x.at(i) = x.at(n.at(i)) + 1;
                    y.at(i) = y.at(n.at(i));
                    break;
                default:  //上
                    x.at(i) = x.at(n.at(i));
                    y.at(i) = y.at(n.at(i)) + 1;
                    break;
            }
        }

        int max = -200, min = 200;
        for (int i = 0; i <= N - 1; i++) {
            if (max < x.at(i)) max = x.at(i);
            if (min > x.at(i)) min = x.at(i);
        }
        resultX.push_back(max - min + 1);

        max = -200;
        min = 200;
        for (int i = 0; i <= N - 1; i++) {
            if (max < y.at(i)) max = y.at(i);
            if (min > y.at(i)) min = y.at(i);
        }
        resultY.push_back(max - min + 1);

        count++;
    }

    for (int i = 0; i < count; i++) {
        cout << resultX.at(i) << " " << resultY.at(i) << endl;
    }

    return 0;
}

