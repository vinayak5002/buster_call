#include<bits/stdc++.h>
using namespace std;
#pragma GCC target("avx2")
#pragma GCC optimize("O3")
using ll = long long;
using pii = pair<ll, ll>;
vector<int> a;
int memo[310][310];

int dp(int l, int r){
	if (memo[l][r] != -1) return memo[l][r];
	if (r - l < 2) return memo[l][r] = 0;

	int pos = 0;
	if (abs(a[r - 1] - a[l]) <= 1 && dp(l + 1, r - 1) == r - l - 2) pos = 2 + dp(l + 1, r - 1);
	for (int i = l + 1; i < r; i++){
		pos = max(pos, dp(l, i) + dp(i, r));
	}
	return memo[l][r] = pos;
}

void solve(int n){
	a.clear();
	a.resize(n);
	for (int i = 0; i < n; i++) cin >> a[i];

	for (int i = 0; i < 310; i++){
		for (int j = 0; j < 310; j++){
			memo[i][j] = -1;
		}
	}

	cout << dp(0, n) << endl;
}

int main(){
ios::sync_with_stdio(false);
std::cin.tie(nullptr);
	while (1){
		int n;
		cin >> n;
		if (n == 0) return 0;
		solve(n);
	}
}
