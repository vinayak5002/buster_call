#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

map<string,bool> F;
bool cat(string S){
    if(F.count(S))return F[S];
    ll N=S.size();
    if(N==0)return 1;
    if(N<3){
        F[S]=0;
        return 0;
    }
    if(S[0]!='m'||S[N-1]!='w'){
        F[S]=0;
        return 0;
    }
    if(N==3){
        F[S]=(S[1]=='e');
        return F[S];
    }
    for(ll j=1;j<N-1;j++){
        if(S[j]=='e'){
            string P=S.substr(1,j-1);
            string Q=S.substr(j+1,N-P.size()-3);
            if(!F.count(P))F[P]=cat(P);
            if(!F.count(Q))F[Q]=cat(Q);
            if(F[P]&&F[Q]){
                F[S]=1;
                return 1;
            }
        }   
    }
    F[0]=0;
    return 0;
}

ll mod = 1e9 + 7;
int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    
    while(1){
        ll A,B,C;
        cin>>A>>B>>C;
        if(A==0)return 0;
        vector<ll> AA(A,2),BB(B,2),CC(C,2);
        ll N;
        cin>>N;
        vector<tuple<ll,ll,ll>> D;
        rep(i,N){
            ll a,b,c,t;
            cin>>a>>b>>c>>t;
            if(t==0){
                D.push_back({a-1,b-A-1,c-A-B-1});
            }
            else{
                AA[a-1]=BB[b-A-1]=CC[c-A-B-1]=1;
            }
        }
        N=D.size();
        rep(i,N){
            ll a=get<0>(D[i]);
            ll b=get<1>(D[i]);
            ll c=get<2>(D[i]);
            if(AA[a]==1&&BB[b]==1&&CC[c]==2){
                CC[c]=0;
            }
            if(AA[a]==2&&BB[b]==1&&CC[c]==1){
                AA[a]=0;
            }
            if(AA[a]==1&&BB[b]==2&&CC[c]==1){
                BB[b]=0;
            }
        }
        rep(a,A)cout<<AA[a]<<endl;
        rep(b,B)cout<<BB[b]<<endl;
        rep(c,C)cout<<CC[c]<<endl;
        //return 0;
    }
    

}
