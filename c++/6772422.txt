#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

struct node {
    int state[8];
    int dis;
};

map<string,int> mp;

int dir[4][2]={{0,1},{0,-1},{-1,0},{1,0}};

string tox(int s[8]) {
    string ans="";
    for(int i=0;i<8;i++) {
        ans+=(s[i]+'0');
    }
    return ans;
}

void init() {
    string st="01234567";
    mp[st]=1;
    int starts[]={0,1,2,3,4,5,6,7};
    node start;
    memcpy(start.state,starts,sizeof start.state);
    start.dis=1;
    queue<node> q;
    q.push(start);
    while(!q.empty()) {
        start=q.front();
        q.pop();
        int z;
        for(z=0;z<8;z++) {
            if(start.state[z]==0) break;
        }
        int x,y;
        if(z<4) {
            x=0;y=z;
        } else {
            x=1;y=z-4;
        }
        for(int i=0;i<4;i++) {
            int nx=x+dir[i][0];
            int ny=y+dir[i][1];
            if(nx>=0&&nx<2&&ny>=0&&ny<4) {
                node next;
                memcpy(&next,&start,sizeof(next));
                int nz=nx*4+ny;
                swap(next.state[nz],next.state[z]);
                string es=tox(next.state);
                if(!mp[es]) {
                    next.dis++;
                    mp[es]=next.dis;
                    q.push(next);
                }
            }
        }
    }
}

int main() {
    //freopen("t.in","r",stdin);
    init();
    int ss[8];
    int txx;
    while(cin>>ss[0]>>ss[1]>>ss[2]>>ss[3]>>ss[4]>>ss[5]>>ss[6]>>ss[7]) {
        string eex=tox(ss);
        cout<<mp[eex]-1<<endl;
    }
    return 0;
}
