#include<bits/stdc++.h>
#define ll long long
#define ri register
#define all(x) x.begin(),x.end()
using namespace std;
namespace jh{
	const double EPS=1e-9,PI=acos(-1);
	inline bool equ(double x,double y){return fabs(x-y)<=EPS;}
	struct P{
		double x,y;
		inline double operator^(const P&b)const{return x*b.x+y*b.y;}
		inline double operator*(const P&b)const{return x*b.y-b.x*y;}
		inline P operator+(const P&b)const{return{x+b.x,y+b.y};}
		inline P operator-(const P&b)const{return{x-b.x,y-b.y};}
		inline P operator*(const double&b)const{return{x*b,y*b};}
		inline P operator/(const double&b)const{return{x/b,y/b};}
		inline double len()const{return sqrt(x*x+y*y);}
		inline double sqr()const{return x*x+y*y;}
		inline double ang()const{return atan2(y,x);}
		inline void read(){scanf("%lf%lf",&x,&y);}
	};
	inline double ang(const P&x,const P&y){return (x^y)/x.len()/y.len();}
	struct L{
		P a,b;
		inline double mxx()const{return max(a.x,b.x);}
		inline double mxy()const{return max(a.y,b.y);}
		inline double mix()const{return min(a.x,b.x);}
		inline double miy()const{return min(a.y,b.y);}
	};
	inline bool Lcross(const L&l1,const L&l2){
		if((l1.mxx()<l2.mix())||(l1.mxy()<l2.miy())||
		   (l2.mxx()<l1.mix())||(l2.mxy()<l1.miy()))
		   return 0;
		if(((l1.a-l2.a)*(l2.b-l2.a))*((l1.b-l2.a)*(l2.b-l2.a))<=0&&
		   ((l2.a-l1.a)*(l1.b-l1.a))*((l2.b-l1.a)*(l1.b-l1.a))<=0)
			return 1;
		return 0;
	}
	inline P focus(const L&l1,const L&l2){
		P x,y,z,k;
		x=l2.b-l1.a,y=l2.a-l1.a,z=l1.b-l1.a;
		double X,Y;
		X=x*z/z.len(),Y=y*z/z.len();
		X=fabs(X),Y=fabs(Y);
		k=l2.a-l2.b;
		return l2.b+(k*X/(X+Y));
	}
	struct O{
		P a;double r;
		inline void read(){a.read(),scanf("%lf",&r);}
	};
	inline int Orela(const O&o1,const O&o2){
		double d=(o1.a-o2.a).len();
		if(equ(d,0)&&equ(o1.r,o2.r))return -1;
		if(o1.r>d+o2.r||o2.r>d+o1.r)return 0;
		if(equ(o1.r+o2.r,d))return 3;
		if(o1.r+o2.r<d)return 4;
		if(fabs(o1.r-o2.r)==d)return 1;
		if(o1.r+o2.r>d)return 2;
		return -2;
	}
}
using namespace jh;
P p1,p2,p3,p4,p;
O a,b;
int n;
int main(){
	a.read(),b.read();
	printf("%d\n",Orela(a,b));
	return 0;
}
//eriajvgneriyveui5e78otou8mn 
