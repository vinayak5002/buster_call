#include <bits/stdc++.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string.h>
#include <queue>
using namespace std;

int main(){
  int N,W;
  cin>>N>>W;
  vector<pair<int,int> > V;
  int v,w;
  for(int i=0; i<N; i++){
    cin>>v>>w;
    V.push_back({v,w});}
  int DP[N+1][W+1];//DP[i][j],品物i個までで重さjの価値、存在しなければ0
  for(int i=0; i<N+1; i++)for(int j=0; j<W+1; j++)DP[i][j]=0;
  for(int i=0; i<N; i++){
    for(int j=0; j<W+1; j++){
      if(DP[i][j]>0||i+j==0){
        for(int k=0; k<N; k++){
          if(j+V[k].second<=W){
            DP[i+1][j+V[k].second]=DP[i][j]+V[k].first;
          }
        }
        DP[i+1][j]=max(DP[i][j],DP[i+1][j]);
      }
    }
  }
  
  int max=0;
  for(int i=0; i<N+1; i++){
    for(int j=0; j<W+1; j++){
      if(DP[i][j]>max)max=DP[i][j];
    }
  }
  cout<<max<<endl;
}
