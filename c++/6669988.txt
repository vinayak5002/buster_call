# https://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=DPL_2_A&lang=ja
V, E = map(int, input().split())
ALL = 1 << V
S = []
for _ in range(V):
    S.append([-1] * V)

for _ in range(E):
    s, t, d = map(int, input().split())
    S[s][t] = d

dp = []
INF = 10**18
for _ in range(ALL):
    dp.append([INF] * V)

# 初期値
dp[0][0] = 0

for i in range(ALL):
    for j in range(V):
        for k in range(V):
            if S[j][k] == -1 or i & (1 << k) > 0:
                continue
            dp[i | 1 << k][k] = min(dp[i][j] + S[j][k], dp[i | 1 << k][k])

# result = min(dp[ALL - 1])
result = dp[ALL - 1][0]
if result == INF:
    print(-1)
else:
    print(result)

