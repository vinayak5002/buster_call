#include <iostream>
#include<string.h>
using namespace std;

const int MAX_T=10000;
const int MAX_P=10000;
bool valid_shift[MAX_T];
char T[MAX_T+1],P[MAX_T+1];

bool isValidShift (char P[],int s,char T[]){
    int P_len=strlen(P);
    for(int i=0;i<P_len;i++){
        if(P[i]!=T[s+i]){
            return false;
        }
    }
    return true;
}

void NaiveStringMatch(char T[],char P[]){
    int T_len=strlen(T);
    int P_len=strlen(P);
    for(int s=0;s+P_len<=T_len;s++){
        if(isValidShift(P,s,T)){
            valid_shift[s]=true;
        }
    }
}

int main()
{
    cin>>T;
    cin>>P;
    NaiveStringMatch(T,P);
    for(int i=0;i+strlen(P)<=strlen(T);i++){
        if(valid_shift[i]){
            cout<<i<<endl;
        }
    }
}

