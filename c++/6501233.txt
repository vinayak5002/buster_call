#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=1167167167167167167;
const int INF=1050000000;
const ll mod=998244353;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

int N,M,C;

void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	while(cin>>N>>M>>C,N) solve();
}

void solve(){
	vector<vector<pair<int,int>>> G(N*(M+1));
	rep(i,M){
		int f,t,w;
		cin>>f>>t>>w;
		f--,t--;
		rep(j,M){
			G[f+j*N].push_back({t+j*N,w});
			G[f+j*N].push_back({t+j*N+N,0});
		}
	}
	vector<int> dp(N*(M+1),INF);
	_pq<pair<int,int>> pq;
	dp[0]=0;
	pq.push({0,0});
	while(!pq.empty()){
		int ind,time;
		tie(time,ind)=pq.top();
		pq.pop();
		if(dp[ind]>time) continue;
		for(auto x:G[ind]){
			if(chmin(dp[x.first],time+x.second)){
				pq.push({dp[x.first],x.first});
			}
		}
	}
	rep(i,M){
		if(dp[i*N+N-1]>C&&C>=dp[N*(i+2)-1]){
			cout<<i+1<<"\n";
			return;
		}
	}
}

