#include<stdio.h>

int cnt=0,S[500000];
void merge(int A[], int left, int mid, int right);
void mergeSort(int A[],int left,int right);

int main(){
    int i,n,A[500000];
    scanf("%d",&n);
    for(i=0;i<n;i++){
        scanf("%d",&A[i]);
    }
    mergeSort(A,0,n);
    
    for(i=0;i<n-1;i++){
        printf("%d ",A[i]);
    }
    printf("%d\n%d\n",A[i],cnt);
    
    return 0;
}

void merge(int A[],int left,int mid,int right){
    int i,j,k;
    int a = mid - left;
    int b = right - mid;
    int L[a+1], R[b+1];
    for (i=0;i<a;i++){
        L[i] = A[left + i];
    }
    
    for(i=0;i<b;i++){
        R[i] = A[mid + i];
    }
     
    L[a] = 1000000001;
    R[b] = 1000000001;
    i = 0;
    j = 0;
    for (k=left;k<right;k++){
        cnt++;
        if (L[i] <= R[j]){
            A[k] = L[i];
            i = i + 1;
        }
        else{
            A[k] = R[j];
            j = j + 1;
        }
    }
}

void mergeSort(int A[],int left,int right){
    int i;
    if(left+1 < right){
        int mid = (left + right)/2;
        mergeSort(A, left, mid);
        mergeSort(A, mid, right);
        merge(A, left, mid, right);
    }
        
}

