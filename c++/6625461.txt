#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>
#include <map>
#include <queue>

using namespace std;

using ll = long long;
using pii = pair<int, int>;	using pll = pair<ll, ll>;	using pil = pair<int, ll>;	using pli = pair<ll, int>;
using vi = vector<int>;		using vvi = vector<vi>;		using vvvi = vector<vvi>;
using vll = vector<ll>;		using vvll = vector<vll>;	using vvvll = vector<vvll>;
using vb = vector<bool>;	using vvb = vector<vb>;		using vvvb = vector<vvb>;
template <class T> using pqr = priority_queue<T, vector<T>, greater<T>>;

const ll INFL = (ll)1e18;	const int INF = (int)1e9;
const int MOD = 1000000007;

template <class T> inline bool chmax(T& M, const T& x) { if (M < x) { M = x; return true; } return false; } // 最大値を更新（更新されたら true を返す）
template <class T> inline bool chmin(T& m, const T& x) { if (m > x) { m = x; return true; } return false; } // 最小値を更新（更新されたら true を返す）


//ユークリッドの互除法
ll gcd(ll a, ll b) {
	if (b == 0) return a;
	return gcd(b, a % b);
}

//拡張ユークリッドの互除法
ll extgcd(ll a, ll b, ll& x, ll& y){
	ll d = a;
	if (b != 0) {
		d = extgcd(b, a % b, y, x);
		y -= (a / b) * x;
	}
	else {
		x = 1; y = 0;
	}
	return d;
}


int main()
{
	ll a,b;

	cin >> a >> b;
	ll x, y;
	extgcd(a, b, x, y);
	cout << x << ' ' << y;

	return 0;
}
