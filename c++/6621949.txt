#include <bits/stdc++.h>
#define int long long
#define endl "\n"
using namespace std;
const int MAXN = 1e3 + 5;
int up[MAXN][20], n, m, h[MAXN];
vector<int> adj[MAXN];
void dfs(int s){
    for (auto i : adj[s]){
        if (up[s][0] == i) continue;
        h[i] = h[s] + 1;
        up[i][0] = s;
        for (int j = 1; j < 20; j++) up[i][j] = up[up[i][j - 1]][j - 1];

        dfs(i);
    }
}
int lca(int u, int v){
    if (h[u] != h[v]){
        if (h[u] < h[v])
            swap(u, v);

        int k = h[u] - h[v], lg = (int)log2(k) + 1;

        for (int j = 0; (1 << j) <= k; j++){
            if (k >> j & 1) u = up[u][j];
        }
        if (u == v) return u;
    }
    int k = (int)log2(h[u]);

    for (int j = k; j >= 0; j--){
        if (up[u][j] != up[v][j]){
            u = up[u][j], v = up[v][j];
        }
    }
    return up[u][0];
}
void program(int iTest){
    cin >> n;
    for (int i = 0; i <= n - 1; i++) {
        adj[i].clear();
        h[i] = 0;
        for (int j = 0; j <= 19; j++) up[i][j] = 0;
        cin >> m;
        while (m--){
            int x;  cin >> x;
            adj[i].push_back(x);
            adj[x].push_back(i);

        }
    }
    dfs(0);
    int q;  cin >> q;
    while (q--){
        int u, v;
        cin >> u >> v;
        cout << lca(u, v) << endl;
    }
}
signed main(){
    ios_base::sync_with_stdio(false);   cin.tie(0);
    int test = 1;
    for (int i = 1; i <= test; i++){
        program(i);
    }

}
