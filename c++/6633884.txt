#include <stdio.h>
int n, max;
char grid[287][287];
void dfs(int x, int y, int step, int mode)
{
    if (x >= n || y >= n || x < 0 || y < 0)
        return;
    if (grid[x][y] == '0')
        return;
    step++;
    if (step > max)
        max = step;
    if (mode == 0) //up-right
        dfs(x + 1 , y - 1, step, mode);
    else if (mode == 1) //right
        dfs(x + 1, y, step, mode);
    else if (mode == 2) //down-right
        dfs(x + 1, y + 1, step, mode);
    else if (mode == 3) //down
        dfs(x, y + 1, step, mode);
    return;
}

int main()
{
    while (1)
    {
        scanf("%d", &n);
        if (n == 0)
            break;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                scanf(" %c", &grid[i][j]);
            }
        }
        max = 0;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                dfs(i, j, 0, 0);
                dfs(i, j, 0, 1);
                dfs(i, j, 0, 2);
                dfs(i, j, 0, 3);
            }
        }
        printf("%d\n", max);
    }
    return 0;
}
