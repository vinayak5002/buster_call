#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}
ll modPow(long long a, long long n, long long p) {
  if (n == 0) return 1; // 0乗にも対応する場合
  if (n == 1) return a % p;
  if (n % 2 == 1) return (a * modPow(a, n - 1, p)) % p;
  long long t = modPow(a, n / 2, p);
  return (t * t) % p;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    while(1){
    ll N;
    cin>>N;
    if(N==0)return 0;
    vector<pair<ll,ll>> P(N);
    rep(i,N){
        cin>>P[i].first>>P[i].second;
    }
    ll M;
    cin>>M;
    set<pair<ll,ll>> Q;
    rep(i,M){
        ll X,Y;
        cin>>X>>Y;
        Q.insert({X,Y});
    }
    for(auto q:Q){
        ll dx=q.first-P[0].first;
        ll dy=q.second-P[0].second;
        bool C=1;
        rep(i,N){
            ll x=dx+P[i].first;
            ll y=dy+P[i].second;
            if(!Q.count({x,y}))C=0;
        }
        if(C){
            cout<<dx<<" "<<dy<<endl;
            return 0;
        }
    }}

}
