#include <bits/stdc++.h>
using namespace std;

int counter = 0;

void dfs(int now, vector<vector<int> >& con, vector<vector<int> >& ans, vector<bool>& v){
    counter++;
    ans[now].push_back(counter);
    v[now] = 1;
    for (int i = 0; i < con[now].size(); i++)
    {
        int to = con[now][i];
        if(!v[to]){
            dfs(to, con, ans, v);
        }     
    }
    counter++;
    ans[now].push_back(counter);
}

int main(){
    int n;
    cin >> n;
    vector<vector<int> > connect(n + 1);
    vector<bool> visited(n + 1);
    vector<vector<int> > res(n + 1);
    for (int i = 0; i < n; i++){
        int num, k;
        cin >> num >> k;
        for (int j = 0; j < k; j++)
        {
            int temp;
            cin >> temp;
            connect[num].push_back(temp);
        }
    }
    dfs(1, connect, res, visited);
    for (int i = 1; i < n + 1; i++){
        cout << i << " ";
        for (int j = 0; j < res[i].size(); j++){
            cout << res[i][j];
            if(j != res[i].size() - 1){
                cout << " ";
            }
        }
        cout << endl;
    }
}
