#include<bits/stdc++.h>
using namespace std;
#define rep(i,n) for (int i=0;i<(int)(n);i++)
#define all(v) v.begin(),v.end()
using ll=long long;
using pll=pair<ll,ll>;
template<class T> void chmin(T &a,T b){
  if(a>b){
    a=b;
  }
}
template<class T> void chmax(T &a,T b){
  if(a<b){
    a=b;
  }
}
int main(){
  while(true){
    ll h,w;
    cin >> w >> h;
    if(h==0&&w==0) break;
    vector<vector<bool>> l(h+1,vector<bool>(w+1,true)),u=l,r=l,d=l;
    rep(i,h){
      rep(j,w-1){
        ll x;
        cin >> x;
        if(x==1){
          r[i][j]=false;
          l[i][j+1]=false;
        }
      }
      if(i==h-1) break;
      rep(j,w){
        ll x;
        cin >> x;
        if(x==1){
          d[i][j]=false;
          u[i+1][j]=false;
        }
      }
    }
    vector<vector<ll>> dist(h,vector<ll>(w,-1));
    queue<pll> q;
    q.push({0,0});
    dist[0][0]=0;
    
    while(!q.empty()){
       
      ll sx,sy;
      tie(sx,sy)=q.front();
      q.pop();
      if(1<=sy&&l[sx][sy]&&dist[sx][sy-1]==-1){
        dist[sx][sy-1]=dist[sx][sy]+1;
        q.push({sx,sy-1});
      }
      if(1<=sx&&u[sx][sy]&&dist[sx-1][sy]==-1){
        dist[sx-1][sy]=dist[sx][sy]+1;
        q.push({sx-1,sy});
      }
      if(sy<w-1&&r[sx][sy]&&dist[sx][sy+1]==-1){
        dist[sx][sy+1]=dist[sx][sy]+1;
        q.push({sx,sy+1});
      }
      if(sx<h-1&&d[sx][sy]&&dist[sx+1][sy]==-1){
        dist[sx+1][sy]=dist[sx][sy]+1;
        q.push({sx+1,sy});
      }
    }
    cout << dist[h-1][w-1]+1 << endl;
  }
}
