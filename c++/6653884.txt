#include<stdio.h>
#define MAX 10000
#define NIL -1

typedef struct{
	int parent;
	int left;
	int right;
}Node;

Node Tree[MAX];
int n;

void Preorder(int node){
	if(node==NIL)return;
	printf(" %d",node);
	Preorder(Tree[node].left);
	Preorder(Tree[node].right);
}

void Inorder(int node){
	if(node==NIL)return;
	Inorder(Tree[node].left);
	printf(" %d",node);
	Inorder(Tree[node].right);
}

void Postorder(int node){
	if(node==NIL)return;
	Postorder(Tree[node].left);
	Postorder(Tree[node].right);
	printf(" %d",node);
}

int main(void){
	int i,n,id,l,r,root=0;
	
	scanf("%d",&n);
	for(i=0;i<n;i++)Tree[i].parent=NIL;
	for(i=0;i<n;i++){
		scanf("%d %d %d",&id,&l,&r);
		Tree[id].left=l;
		Tree[id].right=r;
	    if(l!=NIL)Tree[l].parent=id;
	    if(r!=NIL)Tree[r].parent=id;
	 }
	 for(i=0;i<n;i++)if(Tree[i].parent==NIL)root=i;//親を持たない接点番号を探す
	 
	 printf("Preorder\n");
	 Preorder(root);
	 printf("\n");
	 printf("Inorder\n");
	 Inorder(root);
	 printf("\n");
	 printf("Postorder\n");
	 Postorder(root);
	 printf("\n");
	 
	 return 0;
}
