#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=1167167167167167167;
const int INF=2100000000;
const ll mod=998244353;
#define rep(i,a) for (int i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N,K;
	cin>>N>>K;
	vector<vector<int>> G(N);
	rep(i,N-1){
		int a,b; 
		cin>>a>>b; 
		a--,b--;
		G[a].push_back(b);
		G[b].push_back(a);
	}
	vector<int> order={0},pare(N,-1),siz(N,1),dp(N);
	pare[0]--;
	rep(i,N){
		int a=order[i];
		for(auto x:G[a]){
			if(pare[x]==-1){
				pare[x]=a;
				order.push_back(x);
			}
		}
	}
	int ans=0;
	for(int i=N-1;i>=0;i--){
		int A=-INF,B=-INF,ind=order[i];
		int tmp=0;
		for(auto x:G[ind]){
			if(pare[x]==ind){
				siz[ind]+=siz[x];
				int V=dp[x];
				if(siz[x]>=K) tmp++,V--;
				if(chmax(B,V)){
					if(A<B) swap(A,B);
				}
			}
		}
		int U=0;
		if(N-siz[ind]>=K) U=1;
		chmax(ans,tmp+A+U+max(0,B));
		dp[ind]=tmp+max(0,A);
	}
	cout<<ans<<"\n";
}

