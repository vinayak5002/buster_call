#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <bitset>
#include <functional>
#include <queue>

static const double pi = acos(-1.0);
const long long INF = pow(10,18);
const int mod1 = 1000000007;

using namespace std;

int main(){
    while (true) {
    int N,M; cin >> N >> M;
    if (N == 0 & M == 0) return 0;
    vector<int> H(2000),W(2000);
    for (int i=0; i<N; i++) cin >> H[i];
    for (int i=0; i<M; i++) cin >> W[i];
    vector<long long> Hcum(2000,0),Wcum(2000,0);
    for (int i=1; i<N+1; i++) Hcum[i] = Hcum[i-1] + H[i-1];
    for (int i=1; i<M+1; i++) Wcum[i] = Wcum[i-1] + W[i-1];
    vector<long long> Htot(0), Wtot(0);
    for (int i=1;i<N+1;i++)
        for (int j=i;j<N+1;j++)
            Htot.push_back(Hcum[j] - Hcum[i-1]);
    for (int i=1;i<M+1;i++)
        for (int j=i;j<M+1;j++)
            Wtot.push_back(Wcum[j] - Wcum[i-1]);
    sort(Wtot.begin(), Wtot.end());

    int ans = 0;
    for (int i=0; i<Htot.size(); i++){
        long long now = Htot[i];
        ans += upper_bound(Wtot.begin(), Wtot.end(), now) - lower_bound(Wtot.begin(), Wtot.end(), now);
    }
    cout << ans << endl;
    }
}
