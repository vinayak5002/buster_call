#include<stdio.h>
#define N 100
#define STILL 0
#define VISIT 1
#define FINISH 2

int n,A[N][N],state[N],s[N],f[N],time;

void dfs_visit(int u){
	int v;
	
	state[u]=VISIT;
	s[u]=++time;
	for(v=0;v<n;v++){
		if(A[u][v]==0)continue;//隣接頂点として持たない頂点番号ならforの先頭に戻る
		if(state[v]==STILL){
			dfs_visit(v);
		}
	}
	state[u]=FINISH;
	f[u]=++time;
}
void dfs(){
	int u;
	//初期化
	for(u=0;u<n;u++){
		state[u]=STILL;
	}
	time=0;
	//未訪問ノードuを始点として深さ優先
	for(u=0;u<n;u++){
		if(state[u]==STILL)dfs_visit(u);
	}
	for(u=0;u<n;u++){
		printf("%d %d %d\n",u+1,s[u],f[u]);
	}
}	

int main(void){
	int u,v,k,i,j;
	
	scanf("%d\n",&n);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			A[i][j]=0;
		}
	}
	for(i=0;i<n;i++){
		scanf("%d %d\n",&u,&k);
		u--;
		for(j=0;j<k;j++){
			scanf("%d",&v);
			v--;
			A[u][v]=1;
		}
	}
	dfs();

	return 0;
}
