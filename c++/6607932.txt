#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <bitset>
using namespace std;
using ll = long long;

const int inf = 1e14+7;

int main() {
    int n, m;
    cin >> n >> m;
    vector<vector<int>> g(n, vector<int>(n, inf));
    for (int i = 0; i < m; i++) {
        int s, t, d;
        cin >> s >> t >> d;
        g[s][t] = d;
    }

    for (int i = 0; i < n; i++) g[i][i] = 0;

    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (g[i][k] == inf || g[k][j] == inf) continue;
                g[i][j] = min(g[i][j], g[i][k] + g[k][j]);
            }
        }
    }


    bool hasNegative = false;
    for (int i = 0; i < n; i++) {
        if (g[i][i] != 0) hasNegative = true;
    }

    if (hasNegative) {
        cout << "NEGATIVE CYCLE" << endl;
        return 0;
    }

    for (auto row : g) {
        for (int i = 0; i < n; i++) {
            if (i > 0) cout << " ";

            if (row[i] == inf) cout << "INF";
            else cout << row[i];
        }
        cout << endl;
    }

    return 0;
}

