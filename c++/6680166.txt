#include<bits/stdc++.h>
using namespace std;
struct V{
    double x,y;
    V(double _x=0,double _y=0){x=_x,y=_y;}
    double len(){return sqrt(x*x+y*y);}
};
V operator - (V a,V b){return V(a.x-b.x,a.y-b.y);}
double operator ^ (V a,V b){return a.x*b.y-a.y*b.x;}
double operator * (V a,V b){return a.x*b.x+a.y*b.y;}
vector<V> P;
int n,T;
double ang(V a,V b){
    double t=(a^b);
    if (t==0) return 0;
    return (t>0?1:-1)*acos((a*b)/(a.len()*b.len()));
}
int main(){
    scanf("%d",&n);P.resize(n);
    for (int i=0;i<n;++i) scanf("%lf%lf",&P[i].x,&P[i].y);
    scanf("%d",&T);
    for (V A;T;--T){
        scanf("%lf%lf",&A.x,&A.y);
        if (A.x==4 && A.y==1){
            int t=1;++t;
        }
        int ans=-1;
        double sum=0;
        for (int i=0;i<n;++i){
            V t0=P[i]-A,t1=P[i+1==n?0:i+1]-A;
            sum+=ang(t0,t1);
            // printf("%lf ",ang(t0,t1));
            if (fabs(t0.len()+t1.len()-(P[i+1==n?0:i+1]-P[i]).len())<1e-9) ans=1;
        }
        if (ans==-1){
            if (fabs(sum)<1e-7) ans=0;
            else ans=2;
        }
        printf("%d\n",ans);
        // printf("%d %lf\n",ans,sum);
    }
    return 0;
}
