#include<stdio.h>

#include<stdlib.h>
#define MAX 500001
struct node{
  struct node *right;
  struct node *left;
  struct node *parent;
  int key;
};
typedef struct node * Node;

Node root=NULL;

int find(int a,Node u)
{
  if(u==NULL){
    return 0;
  }
  if(u->key==a){
    return 1;
  }
  else if(u->key<a){
    return find(a,u->right);
  }
  else{
    return find(a,u->left);
  }
}

void insert(int k){
  Node y = NULL;
  Node x = root;
  Node z;

  z = malloc(sizeof(struct node));
  z->key = k;
  z->left = NULL;
  z->right = NULL;

 while(x!=NULL){
   y=x;
   if(z->key<x->key){
     x=x->left;
   }
   else{
     x=x->right;
   }
 }
 z->parent=y;

 if(y==NULL){
   root=z;
 }
 else if(z->key<y->key){
   y->left=z;
 }
 else{
   y->right=z;
 }
}

void inorder(Node u){
  if(u==NULL){
    return;
  }
  inorder(u->left);
  printf(" %d",u->key);
  inorder(u->right);
}
void preorder(Node u){
  if(u==NULL){
    return;
  }
  printf(" %d",u->key);
  preorder(u->left);
  preorder(u->right);
}


int main(){
  int n, i, x;
  char com[20];
  scanf("%d", &n);

  for ( i = 0; i < n; i++ ){
    scanf("%s", com);
    if ( com[0] == 'i' ){
      scanf("%d", &x);
      insert(x);
    }
    else if ( com[0] == 'p' ){
      inorder(root);
      printf("\n");
      preorder(root);
      printf("\n");
    } else if ( com[0] == 'f' ){
      scanf("%d", &x);
      if(find(x,root)){
        printf("yes\n");
      }
      else{
          printf("no\n");
      }
    }
  }

  return 0;
}

