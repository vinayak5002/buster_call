#include <bits/stdc++.h>
////#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    

    while(1){
        ll W,H;
        cin>>W>>H;
        if(W==0)return 0;
        vector<string> S(H);
        rep(i,H)cin>>S[i];
        vector<vector<string>> DP(H,vector<string>(W,""));
        string an="";
        rep(h,H){
            rep(w,W){
                if('0'<=S[h][w]&&S[h][w]<='9'){
                    string res="";
                    if(h!=0){
                        res=DP[h-1][w];
                    }
                    if(w!=0){
                        if(res.size()<DP[h][w-1].size()){
                            res=DP[h][w-1];
                        }
                        if(res.size()==DP[h][w-1].size()&&res<DP[h][w-1]){
                            res=DP[h][w-1];
                        }
                    }
                    if(res==""&&S[h][w]=='0')continue;
                    res+=S[h][w];
                    DP[h][w]=res;
                    if(an.size()<res.size())an=res;
                    if(an.size()==res.size()&&an<res)an=res;
                }
            }
        }
        cout<<an<<endl;
    }

}
