#include <stdio.h>
#define N 200000
#define NTL -1
struct Node{
	int p,l,r;
};
struct Node T[N];

int getdepth(int u)
{
	if(T[u].p==NTL) return 0;
	return getdepth(T[u].p)+1;
}
int  main(void)
{
	int i,j,k,n,a[N],id,tmp,s;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		T[i].p=T[i].l=T[i].r=NTL;
	}
	for(i=0;i<n;i++)
	{
		scanf("%d%d",&id,&k);
		for(j=0;j<k;j++)
		{
			scanf("%d",&s);
			if(j==0)
			{
				T[id].l=s; //最初は一番左//
				T[s].p=id;
				tmp=s;
			}
			else
			{
				T[tmp].r=s; //右//
				T[s].p=id;
				tmp=s;
			}
		}
	}
	for(i=0;i<n;i++)
	{
		a[i]=getdepth(i);
		printf("node %d: parent %d: depth %d",i,T[i].p,a[i]);
		if(T[i].p==NTL) printf("root, ");
		else if(T[i].l==NTL) printf("leaf, ");
		else
			printf("internal node, [");
			if(T[i].l!=NTL)
			{
				printf("%d",T[i].l);
				tmp=T[i].l;
				while(1)
				{
					if(T[tmp].r==NTL) break; //ここでwhile(0)となって終了//
					printf(", %d",T[tmp].r);
					tmp=T[tmp].r;
				}
			}
			printf("]\n");
	}
	return 0;
}
			
				
		
