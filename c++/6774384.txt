#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define N_MAX 21 //max number intergers(n) in has table
#define Q_MAX 201 //max number intergers(q) in has table

int set_s[N_MAX];
int set_t[Q_MAX];
int q; //number of q intergers
int n; //number of n intergers

void solve(int M, int i)
{
        if (i == n)
        {
            set_t[M] = 1;
            return;
        }
        solve(M, i+1);
        solve(M+set_s[i], i+1);
}

int main()
{

    scanf("%d", &n);
    for(int i = 0; i<n; i++)
    {
        scanf("%d", &set_s[i]);
    }


    solve(0,0);
    int sum;
    scanf("%d", &q);
    for(int i = 0; i<q; i++)
    {
        scanf("%d", &sum);
        //printf("T: %d ", set_t[i]);
        if(set_t[sum] == 1)
        {
            printf("yes\n");
        }
        else
        {
            printf("no\n");
        }
    }
    
    return 0;
}
    // for (int i = 0; i<q; i++)
    // {
    //     for (int j =0; j<n; j++)
    //     {
    //         if (sum(j, 0, set_t[i]) == 0)
    //         {
    //             printf ("yes\n");
    //             break;
    //         }
    //         else if ( j+1 == n)
    //         {
    //             printf("no\n");
    //         }
    //     }
    // }


// int sum(int i, int p, int M)
//     {
//         if (i==0)
//         {
//             p++;
//         }
//         if (set_s[i] == M)
//         {
//             return 0;
//         }
//         else if((set_s[i] + set_s[p]) == M)
//         {
//             return 0;
//         }
//         else if ((p+1) < n)
//         {
//             p++;
//             if (p != i)
//             {
//                 sum(i, p, M);
//             }
//             else if ((p+1) < n)
//             {
//                 p++;
//                 sum(i, p, M);
//             }
//         }
//         else
//         {
//             return 1;
//         }
//     }
