#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
using namespace std;
void solve(int n){
    vector<vector<char>> A(n,vector<char>(n));
    for(int i = 0; n > i; i++){
      for(int j = 0; n > j; j++){
        cin>>A[i][j];
      }
    }
    int mx = 0;
    for(int i = 0; n > i; i++){
      int nw = 0;
      for(int j = 0; n > j; j++){
        if(A[i][j]=='1')nw++;
        else{
          mx = max(nw,mx);
          nw = 0;
        }
      }
      mx = max(nw,mx);
    }

    for(int j = 0; n > j; j++){
      int nw = 0;
      for(int i = 0; n > i; i++){
        if(A[i][j]=='1')nw++;
        else{
          mx = max(nw,mx);
          nw = 0;
        }
      }
      mx = max(nw,mx);
    };

    for(int i = 0; n > i; i++){
      int nw = 0;
      for(int j = 0; i >= j; j++){
        if(A[i-j][j]=='1')nw++;
        else{
          mx = max(nw,mx);
          nw = 0;
        }
      }
      mx = max(nw,mx);
      nw = 0;
      for(int j = 0; i >= j; j++){
        if(A[n-1-i+j][n-1-j]=='1')nw++;
        else{
          mx = max(nw,mx);
          nw = 0;
        }
      }
      mx = max(nw,mx);
    }

    for(int i = 0; n > i; i++){
      int nw = 0;
      for(int j = 0; n-i > j; j++){
        if(A[i+j][j]=='1')nw++;
        else{
          mx = max(nw,mx);
          nw = 0;
        }
      }
      mx = max(nw,mx);
      nw = 0;
      for(int j = 0; n-i > j; j++){
        if(A[j][i+j]=='1')nw++;
        else{
          mx = max(nw,mx);
          nw = 0;
        }
      }
      mx = max(nw,mx);
    }
    cout << mx << endl;

}

int main(){
  int n;
  while(cin>>n,n){
    solve(n);
  }
}
