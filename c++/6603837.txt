#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<string.h>
#define MAX 2000000000
long long int count = 0;

int bubbleSort (int *A , int n){
    int i,j;
    int tmp = 0;
    int cnt = 0;
    int all = 0;
    int B[10000000];
    for(i=0;i<10000000;i++){
        B[i] = 0;
    }

    for(i=0;i<n;i++){
        B[A[i]]++;
        tmp++;
        cnt = 0;
        for(j=0;j<=A[i];j++){
            cnt = cnt + B[j];
        }
        all = all + tmp - cnt ;
    }
    return all;

    
}

void merge(int *A,int left,int mid,int right){
    int i,j,k;
    int n1= mid - left;
    int n2= right - mid;
    int L[n1+1];
    int R[n2+1];
    for(i=0;i<n1;i++){
        L[i] = A[left+i];
    }
    for(i=0;i<n2;i++){
        R[i] = A[mid+i];
    }
    L[n1] = MAX;
    R[n2] = MAX;
    i=0;
    j=0;
    for(k=left;k<right;k++){
        if(L[i] <= R[j]){
            A[k] = L[i];
            i++;
        }else{
            A[k] = R[j];
            j++;
            count = count +(n1-i);
        }
    }


}

void mergesort(int *A,int left,int right){
    int i,j,k,mid;
    int work[200000];
    if(left+1<right){
        mid = (left+right)/2;
        mergesort(A,left,mid);
        mergesort(A,mid,right);
        merge(A,left,mid,right);
    }
        
}



int main(){
    int i,j,k;
    int n;
    int A[200000];

    scanf("%d",&n);

    for(i=0;i<n;i++){
        scanf("%d",&A[i]);
    }
    mergesort(A,0,n);

    printf("%lld\n",count);

    return 0;
}





