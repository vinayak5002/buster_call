#include<bits/stdc++.h>
using namespace std;
const int N=1010;
int k;
int pre[N],in[N],post[N];
struct node
{
	int value;
	node *left,*right;
	node(int val=0,node *lt=NULL,node *rt=NULL)
	{
		value=val;
		left=lt;
		right=rt;
	}
};
void buildTree(int lf,int rf,int &t,node *&root)
{
	int flag=-1,i;
	for(i=lf;i<=rf;i++)
	{
		if(pre[t]==in[i])
		{
			flag=i;
			break;
		}
	}
	if(flag==-1)
	{
		return;
	}
	root=new node(in[i]);
	t++;
	buildTree(lf,flag-1,t,root->left);
	buildTree(flag+1,rf,t,root->right);
}
void postOrder(node *root)
{
	if(root==NULL)
	{
		return;
	}
	postOrder(root->left);
	postOrder(root->right);
	post[k++]=root->value;
}
int main()
{
	int n,h=1;
	while(cin>>n)
	{
		node *root;
		h=1;
		for(int i=1;i<=n;i++)
		{
			cin>>pre[i];
		}
		for(int i=1;i<=n;i++)
		{
			cin>>in[i];
		}
		buildTree(1,n,h,root);
		k=1;
		postOrder(root);
		for(int i=1;i<k;i++)
		{
			if(i!=k-1)
				cout<<post[i]<<' ';
			else
				cout<<post[i]<<endl;
		}
	}
	return 0;
}
