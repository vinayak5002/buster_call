#include <stdio.h>
#define MAX 100005
#define NIL -1

typedef struct{
	int p,l,r;
}Node;

Node T[MAX];
int n,D[MAX];

void print(int u)
{
	int i,c;
	printf("node %d: ",u);
	printf("parent = %d, ",T[u].p);
	printf("depth = %d, ",D[u]);
	
	if(T[u].p==NIL){
		printf("root, ");
	}
	else if(T[u].l==NIL){
		printf("leaf, ");
	}
	else{
		printf("internal node, ");
	}
	
	printf("[");
	
	for(i=0,c=T[u].l;c!=NIL;i++,c=T[c].r)
	{
		if(i){
			printf(", ");
		}
		printf("%d",c);
	}
	printf("]\n");
}

void rec(int u,int p)
{
	D[u]=p;
	if(T[u].r!=NIL){
		rec (T[u].r,p);
	}
	if(T[u].l!=NIL){
		rec(T[u].l,p+1);
	}
}

int main(void)
{
	int n;
	scanf("%d", &n);
	
	int i;
	for(i=0;i<n;i++){
		T[i].p=NIL;
		T[i].l=NIL;
		T[i].r=NIL;
	}
	
	int j,number,depth,element,a,b;
	for(i=0;i<n;i++){
		scanf("%d",&number);
		scanf("%d",&depth);
		
		for(j=0;j<depth;j++){
			scanf("%d",&element);
			
			if(j==0){
				T[number].l=element;
			}
			else{
				T[a].r=element;
			}
			
			a=element;
			T[element].p=number;
		}
	}
	
	for(i=0;i<n;i++){
		if(T[i].p==NIL){
			b=i;
		}
	}
	
	rec(b,0);
	
	for(i=0;i<n;i++){
		print(i);
	}
	
	return 0;
}
