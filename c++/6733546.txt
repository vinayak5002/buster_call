# 2次元累積和
def cumulative_sum_2d(arr):
    # cumsum_2d[i][j] = [0, i) * [0, j) の総和
    h = len(arr)
    w = len(arr[0])
    cumsum_2d = [[0] * (w + 1) for i in range(h + 1)]
    for i in range(h):
        for j in range(w):
            cumsum_2d[i + 1][j + 1] = cumsum_2d[i + 1][j] + cumsum_2d[i][j + 1] - cumsum_2d[i][j] + arr[i][j]
    return cumsum_2d

while True:
    n = int(input())
    if n == 0:
        break
    w, h = map(int, input().split())
    grid = [[0] * w for _ in range(h)]
    for i in range(n):
        y, x = map(int, input().split())
        x -= 1; y -= 1
        grid[x][y] = 1

    cumsum = cumulative_sum_2d(grid)
    
    s, t = map(int, input().split())

    ans = 0
    for i in range(h - t + 1):
        for j in range(w - s + 1):
            h1, h2, w1, w2 = i, i + t, j, j + s
            ans = max(ans, cumsum[h2][w2] - cumsum[h1][w2] - cumsum[h2][w1] + cumsum[h1][w1])

    print(ans)

