#include "bits/stdc++.h"
using namespace std;

typedef complex<double> xy_t;

double dot_product(xy_t a, xy_t b){
    return (conj(a)*b).real();
}

double cross_product(xy_t a, xy_t b){
    return (conj(a)*b).imag();
}

xy_t projection(xy_t p, xy_t b){//pのb方向への投影
    return b*dot_product(p,b)/norm(b);
}

double x[4], y[4];
double area[3];

int main(){
    while(true){
        for(int i=0; i<4; i++) cin >> x[i] >> y[i];

        if (!cin) break;
        xy_t a(x[0],y[0]), b(x[1], y[1]), c(x[2], y[2]), p(x[3], y[3]);
        area[0] = cross_product(a-p, b-p);
        area[1] = cross_product(b-p, c-p);
        area[2] = cross_product(c-p, a-p);

        bool ok = (area[0] * area[1] > 0 && area[1] *area[2] > 0);
        cout << (ok ? "YES" : "NO") << endl;
    }
}
