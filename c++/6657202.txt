#include<stdio.h>
#include<stdbool.h>

typedef struct card
{
	char suit,value;
}card;

void bubble(card A[],int N)
{
	for(int i = 0; i<N; i++)
	{
		for(int j = N-1; j>=i+1; j--)
		{
			if(A[j].value < A[j-1].value)
			{
				card t = A[j]; A[j] = A[j-1]; A[j-1] = t;
			}
		}
	}
}

void selection(card A[],int N)
{
	for(int i=0; i<N; i++)
	{
		int minj = i;
		for(int j=1; j<N; j++)
		{
			if(A[j].value < A[minj].value) minj = j;
		}
		card t = A[i]; A[i] = A[minj]; A[minj] = t;
	}
}

void print(card A[], int N)
{
	for(int i = 0; i<N; i++)
	{
		if(i>0)printf(" ");
		printf("%d%d",A[i].suit,A[i].value);
	}
	printf("\n");
}

bool isStable(card C1[], card C2[], int N)
{
	for(int i = 0; i < N; i++)
	{
		if(C1[i].suit != C2[i].suit)return false;
	}
	return true;
}
	
int main()
{
	card C1[100],C2[100];
	int N;
	
	scanf("%d",&N);
	for(int i=0; i<N; i++)
	{
		scanf("%s %s",&C1[i].suit,&C1[i].value);
	}
	
	for(int i=0; i<N; i++)
		{
			C2[i] = C1[i];
		}
	
	bubble(C1,N);
	selection(C2,N);

	print(C1,N);
	printf("Stable\n");
	print(C2,N);
	
	if(isStable(C1,C2,N))
	{
		printf("Stable\n");
	}
	else
	{
		printf("Not Stable\n");
	}
		
	return 0;
		
}
		
