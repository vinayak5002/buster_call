#include <iostream>
#include <vector>

using namespace std;

class Solution {
public:
	vector< vector<int> > createSpreadSheetMatrix(vector< vector<int> > &mat) {
		int row = mat.size();
		int col = mat[0].size();

		int rowsum = 0;
		int colsum = 0;

		vector< vector<int> > result(row + 1, vector<int>(col + 1));
		int i = 0;
		int j = 0;

		for (i = 0; i < row; i++)
		{
			rowsum = 0;
			for (j = 0; j < col; j++)
			{
				rowsum = rowsum + mat[i][j];
				result[i][j] = mat[i][j];
			}

			result[i][j] = rowsum;
		}

		for (i = 0; i < result[0].size(); i++)
		{
			colsum = 0;
			for (j = 0; j < result.size() - 1; j++)
			{
				colsum = colsum + result[j][i];
			}
			result[j][i] = colsum;
		}

		return result;
	}
};

int main()
{
	Solution solObj;
	int row;
	int col;

	cin >> row >> col;
	vector<vector<int>> mat(row, vector<int>(col));

	vector<vector<int>> resultMat(row + 1, vector<int>(col + 1));

	for (int i = 0; i < mat.size(); i++)
	{
		for (int j = 0; j < mat[0].size(); j++)
		{
			cin >> mat[i][j];
		}
	}

	resultMat = solObj.createSpreadSheetMatrix(mat);

	for (int i = 0; i < resultMat.size(); i++)
	{
		for (int j = 0; j < resultMat[0].size(); j++)
		{
			cout << resultMat[i][j] << " ";
		}

		cout << "\n";
	}
}
