#include<stdio.h>
#define MAX 100000
struct Node{int parent;int l;int r; };
struct Node T[MAX];
int n,D[MAX];
void print(int u){
	int i,c;
	printf("node%d:",u);
	printf("parent=%d,",T[u].parent);
	printf("depth = %d,",D[u]);
	if(T[u].parent == -1){
		printf("root,");
	}
	else if(T[u].l == -1){
		printf("leaf,");
	}
	else{
		printf("internal node,");  
	}
	printf("[");
	for(i=0,c = T[u].l;c != -1;i++,c =T[c].r){
		if(i>0){
			printf(",");
		}
		printf("%d",c);
	}
	printf("]\n");
}
int rec(int u,int p){
	D[u] = p;
	if(T[u].r != -1)rec(T[u].r,p);
	if(T[u].l != -1)rec(T[u].l,p+1);
}
int main(){
	int i,j,d,v,c,l,r;
	scanf("%d",&n);
	for(i = 0;i<n;i++){
		T[i].parent = T[i].l =T[i].r = -1;
	}
	for(i=0;i<n;i++){
		scanf("%d %d",&v,&d);
			for(j=0;j<d;j++){
				scanf("%d",&c);
				if(j==0){
				T[v].l = c;
				l = c;
				T[c].parent = v;
				}
				else{
					T[l].r = c;
					l = c;
					T[c].parent	= v;
				}
			}
		}
	for(i=0;i<n;i++){
		if(T[i].parent==-1){
			r = i;
			}
		}
	rec(r,0);
	for(i=0;i<n;i++){
		print(i);
	}
		return 0;
}	
			
			
	
