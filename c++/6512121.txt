#include <iostream>

using namespace std;

/*
int getMax(int *ptr, int s)
{
  int max = 0;
  int maxIndex = 0;

  for (int i = 0; i < s; i++)
  {
    if (max < ptr[i])
    {
      max = (ptr[i]);
      maxIndex = i;
    }
  }

  ptr[maxIndex] = 0;
  return max;
}

  int arraySize = sizeof array / sizeof array[0];

  int alice = 0;
  int bob = 0;
  int ret = 0;

  do
  {
    // alice's turn
    ret = getMax(array, arraySize);
    alice += ret;


*/

bool search(char e, int r, char *ptrE, int *ptrR, int sz)
{
  bool ret = false;
  for (int i = 0; i < sz; i++)
  {
    if (ptrE[i] == e && ptrR[i] == r)
    {
      ret = true;
    }
  }

  return ret;
}

int main()
{
  char ie[4] = {'S', 'H', 'C', 'D'};

  int n;
  cin >> n;

  char e[n];
  int r[n];

  for (int i = 0; i < n; i++)
  {
    cin >> e[i] >> r[i];
  }

  // search and print
  int arrSz = sizeof e / sizeof e[0];

  for (int i = 0; i < 4; i++)
  {
    for (int j = 1; j <= 13; j++)
    {
      if (!search(ie[i], j, e, r, arrSz))
      {
        cout << ie[i] << " " << j << endl;
      }
    }
  }

  return 0;
}

