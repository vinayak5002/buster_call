#define READ_FROM_FILE 0
#if READ_FROM_FILE
#include <fstream>
#endif

#include <iostream>
#include <vector>
using namespace std;


int main() {
#if READ_FROM_FILE
	ifstream ifs("test0.txt");
	cin.rdbuf(ifs.rdbuf());
#endif
	int n = -1;
	int n2 = -1;
	int result = -1;
	int inf = 0;
	vector<int> t_vec;
	vector<vector<vector<int>>> dp;

	cin >> n;
	n2 = n / 2;

	t_vec = vector<int>(n, 0);
	t_vec[0] = 0;
	for (int i = 1; i < n; ++i) {
		cin >> t_vec[i];
		inf += t_vec[i];
	}

	dp = vector<vector<vector<int>>>(2, vector<vector<int>>(2 , vector<int>(n2 + 1, inf)));
	dp[0][0][0] = 0;
	dp[0][1][0] = 0;
	for (int i = 0; i < n; ++i) {
		int cur = i & 1;
		int nex = 1 - cur;

		fill(dp[nex][0].begin(), dp[nex][0].end(), inf);
		fill(dp[nex][1].begin(), dp[nex][1].end(), inf);
		for (int j = 0; j < n2; j++) {
			dp[nex][0][j + 1] = dp[cur][0][j];
			dp[nex][0][j + 1] = min(dp[nex][0][j + 1], dp[cur][1][j] + t_vec[i]);
			dp[nex][1][j] = dp[cur][1][j];
			dp[nex][1][j] = min(dp[nex][1][j], dp[cur][0][j] + t_vec[i]);
		}
	}

	result = min(dp[n & 1][0][n2], dp[n & 1][1][n2]);
	cout << result << endl;
	return 0;
}
