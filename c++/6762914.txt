# coding: utf-8
# Your code here!

while 1:
    m, n, t, p = map(int, input().split(" "))
    if not sum([n, m, t, p]): break
    
    f = [[1] * m for _ in range(n)]
    
    for _ in range(t):
        d, c = map(int, input().split(" "))
        
        # 左から右へ
        if d == 1:
            # 折る側の長さが折られる側の長さより短い
            if c <= m - c:
                # 全ての行について
                for i in range(n):
                    # 全ての列について
                    for j in range(c):
                        f[i][c + j] += f[i][c - j - 1]
                f = [F[c:] for F in f]
                m = m - c
            else:
                tmp_f = [F[:c] for F in f]
                # all colum
                for i in range(n):
                    # all row
                    for j in range(n - c):
                        tmp_f[i][j] += f[i][c + j]
                f = tmp_f
                m = c
        # 下から上へ
        else:
            # 折る側の長さが折られる側の長さより短い
            if c <= n - c:
                # all colum
                for i in range(c):
                    # all row
                    for j in range(m):
                        f[n - c - c + i][j] += f[n - 1 - i][j]
                f = f[:n - c]
                n = n - c
            else:
                tmp_f = [f[n - 1 - i] for i in range(c)]
                # all column
                for i in range(n - c):
                    # all row
                    for j in range(m):
                        tmp_f[c - 1 - i][j] += f[n - c - i - 1][j]
                n = c
    
    for _ in range(p):
        x, y = map(int, input().split(" "))
        y = n - y - 1
        print(f[y][x])
