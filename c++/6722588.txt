#include <bits/stdc++.h>
using namespace std;

class primeSieve {
private:
    vector<bool> container;
public:
    vector<int> primes;

    primeSieve(int n) {
        container = vector<bool>(n + 1, true);
        container[0] = false;
        container[1] = false;
        for (int i = 2 ; i < n + 1 ; i++) {
            if (!container[i]) continue;
            primes.push_back(i);
            for (int j = i + i ; j < n + 1 ; j += i) container[j] = false;
        } 
    }

    bool isPrime(int x) {return container[x];}
};

primeSieve siv(1001000);

int solve(int a, int d, int n) {
    int cnt = 0;
    int now = a;

    while(1) {
        if (siv.isPrime(now)) cnt++;
        if (cnt == n) break;
        now += d;
    }

    return now; 
}

int main() {
    while(1) {
        int a, d, n; cin >> a >> d >> n;
        if (!a) break;
        cout << solve(a, d, n) << endl;
    }
}

