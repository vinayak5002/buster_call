#include <stdio.h>
#define MAX 10000
#define NIL -1

struct Node 
{
	int parent;
	int left;
	int right;
};
struct Node T[MAX];
int n,D[MAX],H[MAX];

void setDepth(int u,int d)//深さを調べる
{
	if (u==NIL)//根がないとき
	{
		return;
	}
	D[u]=d;
	
	setDepth(T[u].left,d+1);
	setDepth(T[u].right,d+1);
}

int setHeight(int u)
{
	int h1,h2;
	
	
	h1=0;
	h2=0;
	
	if(T[u].left!=NIL)
	{
		h1=setHeight(T[u].left)+1;
	}
	
	if(T[u].right!=NIL)
	{
		h2=setHeight(T[u].right)+1;
	}
	
	return H[u]=(h1>h2?h1:h2);//h1がh2より小さいとき、h1にh2を入れて返す(深いほうを返す)
}

int getSibling(int u)//兄弟を取得
{
	if(T[u].parent==NIL)//親がいなかったらNIL
	{
		return NIL;
	}
	
	if(T[T[u].parent].left!=u&&T[T[u].parent].left!=NIL)//兄弟を返す
	{
		return T[T[u].parent].left;
	}
	
	if(T[T[u].parent].right!=u&&T[T[u].parent].right!=NIL)//兄弟を返す
	{
		return T[T[u].parent].right;
	}
	
	
	return NIL;
}

void print(int u)
{
	printf("node %d: ",u);
	printf("parent = %d, ",T[u].parent);
	printf("sibling = %d, ",getSibling(u));
	
	int deg;//兄弟の数
	
	deg=0;
	
	if( T[u].left!=NIL)
	{
		deg++;
	}
		if(T[u].right!=NIL)
	{
		deg++;
	}
	printf("degree = %d, ",deg);
	printf("depth = %d, ",D[u]);
	printf("height = %d, ",H[u]);
	
	
	if(T[u].parent==NIL)//根
	{
		printf("root\n");
	}
	else if(T[u].left==NIL&&T[u].right==NIL)//葉
	{
		printf("leaf\n");
	}
	
	else//中間接点
	{
		printf("internal node\n");
	}
}

int main()
{
	int i,v,l,r,root=0;
	
	scanf("%d",&n);
	
	for(i=0;i<n;i++)
	{
		T[i].parent=NIL;
	}
	
	for(i=0;i<n;i++)
	{
		scanf("%d %d %d",&v,&l,&r);
		
		T[v].left=l;
		T[v].right=r;
		
		if(l!=NIL)
		{
			T[l].parent=v;
		}
		
		if(r!=NIL)
		{
			T[r].parent=v;
		}
	}
	
	for(i=0;i<n;i++)
	{
		if(T[i].parent==NIL)
		{
			root=i;
		}
	}
	
	setDepth(root,0);
	setHeight(root);
	
	for(i=0;i<n;i++)
	{
		print(i);
	}
	
	return 0;
}

