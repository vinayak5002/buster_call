#include <bits/stdc++.h>
using namespace std;
#define MAX 10000
#define NIL -1
int n;
struct Node {
  int p = NIL, l = NIL, r = NIL;
}; // parent = 親、left = 左の子、right = 右の子

struct Node T[MAX];

void preorder(int u) {
  if (u == NIL) return;
  printf(" %d", u);
  preorder(T[u].l);
  preorder(T[u].r);
}

void inorder(int u) {
  if (u == NIL) return;
  inorder(T[u].l);
  printf(" %d", u);
  inorder(T[u].r);
}

void postorder(int u) {
  if (u == NIL) return;
  postorder(T[u].l);
  postorder(T[u].r);
  printf(" %d", u);
}


int main()
{
  int i, v, l, r, root;
  scanf("%d", &n);

  for (int i = 0; i < n; i++)
  {
    for (i = 0; i < n; i++) {
      T[i].p = NIL;
    }
  }
  for (int i = 0; i < n; i++) {
    scanf("%d %d %d", &v, &l, &r);
    T[v].l = l;
    T[v].r = r;
    if (l != NIL) T[l].p = v;
    if (r != NIL) T[r].p = v;
  }

  // rootを求める
  for (i = 0; i < n; i++) if (T[i].p == NIL) root = i;

  printf("Preorder\n");
  preorder(root);
  printf("\n");
  printf("Inorder\n");
  inorder(root);
  printf("\n");
  printf("Postorder\n");
  postorder(root);
  printf("\n");

  return 0;
}
