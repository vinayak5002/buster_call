#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

typedef vector<ll> vl;
typedef vector<vector<ll>> vvl;

typedef pair<ll, ll> pll;
typedef vector<pll> vpll;

#define FOR(i, a, b) for(ll i=(a); i<(b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define NREP(i, n) FOR(i, 1, n+1)

template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

ll isfin = 0;

ld EPS = 1e-5;

ld when(ll R, ll x, ll y) {
    if(R <= abs(x)) {return 1e9;}
    
    ld s = sqrt(R*R-x*x);
    return (ld)y - s;
}

void solve() {
    ll R, N; cin >> R >> N;
    if(R == 0 && N == 0) {
        isfin = 1;
        return;
    }
    
    vpll W(N+1);
    vl H(N+1);
    REP(i, N) {
        ll x, y, h; cin >> x >> y >> h;
        W[i] = {x, y};
        H[i] = h;
    }
    W[N] = {-21LL, -21LL};
    H[N] = 0;
    
    const ll base = 21;
    vl M(43, 0);
    for(ll i = 0; i < N+1; ++i) {
        auto [x, y] = W[i];
        ll h = H[i];
        for(ll j = x; j < y; ++j) {
            chmax(M[j+base], h);
        }
    }
    
    vpll pos;
    for(ll i = -21; i <= 21; ++i) {
        ll id = i + base;
        pos.push_back({i, M[id]});
        pos.push_back({i+1, M[id]});
    }
    
    ld res = 1e9;
    for(auto [x, y]:pos) {
        chmin(res, when(R, x, y)+R);
    }
    
    cout << fixed << setprecision(15);
    cout << res << endl;
    
    
    return;
}

int main(void) {
    while(1) {
        solve();
        if(isfin) {break;}
    }


    return 0;
}
