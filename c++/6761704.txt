#include<stdio.h>
#define STILL 0
#define VISIT 1
#define FINISH 2
#define INFTY 1<<21
#define NIL -1
#define N 100

int A[N][N],n;

int prim(int n){
	int u,min;
	int weight[N],parent[N],state[N];
	
	for(int i=0;i<n;i++){
		weight[i]=INFTY;
		parent[i]=NIL;
		state[i]=STILL;
	}
	weight[0]=0;//初回探索地点が持つ辺の重み
	
	while(1){//無限ループ処理
		min=INFTY;
		u=NIL;
		for(int i=0;i<n;i++){
			if(state[i]!=FINISH && weight[i]<min){
				min=weight[i];
				u=i;
			}
		}
		if(u==NIL)break;//辺なし
		state[u]=FINISH;
		
		for(int v=0;v<n;v++){
			if(state[v]!=FINISH && A[u][v] !=INFTY){
				if(A[u][v]<weight[v]){
					weight[v]=A[u][v];
					parent[v]=u;
					state[v]=VISIT;
				}
			}
		}
	}
	int sum=0;
	for(int i=0;i<n;i++){
		if(parent[i]!=NIL)sum+=A[i][parent[i]];
	}
	return sum;
}
		
int main(void){
	int i,j;
	scanf("%d\n",&n);
	
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			A[i][j]=0;
		}
	}
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			scanf("%d",&A[i][j]);
			if(A[i][j]==NIL)A[i][j]=INFTY;
		}
	}
	
	printf("%d\n",prim(n));
	
	return 0;
}

