#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const long long INF = 1LL<<60;
const double PI = acos(-1.0);
using Graph = vector<vector<ll>>;
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

void dfs(const Graph &graph, vector<int> &d, vector<int> &f, int u, int &time)
{
    d[u] = time++;
    for (int v:graph[u]) {
        if (d[v] > 0)
            continue;
        dfs(graph, d, f, v, time);
    }
    f[u] = time++;
}

int main()
{
    int n;
    cin >> n;
    Graph graph(n);
    int u,v;
    for (int i=0; i<n; i++) {
        int k;
        cin >> u >> k;
        --u;
        for (int j=0; j<k; j++) {
            cin >> v;
            --v;
            graph[u].push_back(v);
        }
    }

    vector<int> d(n, -1), f(n, -1);
    int time = 1;
    for (int u=0; u<n; u++) {
        if (d[u] > 0)
            continue;
        dfs(graph, d, f, u, time);
    }
    for (int u=0; u<n; u++)
        cout << u + 1 << " " << d[u] << " " << f[u] << endl;
}
