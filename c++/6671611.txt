#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

map<string, bool> F;
bool cat(string S) {
    if (F.count(S))return F[S];
    ll N = S.size();
    if (N == 0)return 1;
    if (N < 3) {
        F[S] = 0;
        return 0;
    }
    if (S[0] != 'm' || S[N - 1] != 'w') {
        F[S] = 0;
        return 0;
    }
    if (N == 3) {
        F[S] = (S[1] == 'e');
        return F[S];
    }
    for (ll j = 1; j < N - 1; j++) {
        if (S[j] == 'e') {
            string P = S.substr(1, j - 1);
            string Q = S.substr(j + 1, N - P.size() - 3);
            if (!F.count(P))F[P] = cat(P);
            if (!F.count(Q))F[Q] = cat(Q);
            if (F[P] && F[Q]) {
                F[S] = 1;
                return 1;
            }
        }
    }
    F[S] = 0;
    return 0;
}

ll mod = 1e9 + 7;
int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    F[""] = 1;
    string S;
    cin >> S;
    cout << (cat(S) ? "Cat" : "Rabbit") << endl;

}
