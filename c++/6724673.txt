# s_t = list(map(int, input().split()))
# st = [[]]*(s_t[0]+1)
# print(st)
# #st = [input().split() for i in range(s_t[1])]
# for i in range(s_t[1]):
#     st[i][0], st[i][1] = list(map(int, input().split()))
#
#
# print(st)
def dfs(current, before):
    # print(isPassed)
    isPassed[current] = True
    for i in range(len(graph[current])):
        if graph[current][i] == before:
            continue
        if isPassed[graph[current][i]]:
            return True

        # print(graph[current][i])
        dfs(graph[current][i], current)

    return False


s, t = map(int, input().split())
graph = [[] for _ in range(t+1)]
for i in range(t):
    a, b = map(int, input().split())
    graph[a].append(b)

isPassed = [False] * t
# print(type(isPassed[0]))
hasLoop = dfs(0, -1)
if hasLoop:
    print('1')
else:
    print('0')

