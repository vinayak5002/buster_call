#include<iostream>
#include<vector>
using namespace std;
int n, a[1<<20];

bool check(int A, int B) {
  for (int i = 0; i < n; i++) if (A & (1 << i)) {
    if (a[A xor (1 << i) xor B]) return false;
  }
  return true;
}

int solve() {
  int ans = 0;
  for (int i = 1; i < (1 << n); i++) {
    if (__builtin_popcount(i) == 1) {
      if (a[i]) ans++;
      continue;
    }
    vector<bool> tmp;
    for (int j = 0; j < n; j++) if (i & (1 << j)) {
      int B = 1 << j;
      if (a[B]) {
        if (a[i] == 0) return -1;
        tmp.push_back(false);
        continue;
      }
      int A = i xor B;
      if (a[i]) {
        if (a[A]) tmp.push_back(false);
        else tmp.push_back(check(A, B));
      } else {
        if (a[A]) return -1;
      }
    }
    bool t = tmp[0];
    for (bool t2 : tmp) if (t != t2) return -1;
    if (t) ans++;
  }
  return ans;
}
int main() {
  cin >> n;
  for (int i = 0; i < (1 << n); i++) cin >> a[i];
  cout << solve() << endl;
}
