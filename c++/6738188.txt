#include <bits/stdc++.h>
using namespace std;
using ld = long double;
using pii = pair<int, int>;
using pdd = pair<ld, ld>;

const ld eps = 0.000001;

bool comp(pdd a, pdd b) {
    return (abs(b.first - a.first) < eps and abs(b.second - a.second) < eps);
}

int main() {
    int n; cin >> n;
    vector<int> xs(n), ys(n); for (int i = 0 ; i < n ; i++) cin >> xs[i] >> ys[i];

    if (n & 1) {
        cout << "NA" << endl;
        return 0;
    }

    vector<pdd> p;
    for (int i = 0 ; i < n / 2 ; i++) {
        int vecy = ys[i + (n/2)] - ys[i];
        int vecx = xs[i + (n/2)] - xs[i];
        p.emplace_back(ys[i] + (ld)vecy / (ld)2, xs[i] + (ld)vecx / (ld)2);
    }

    bool ok = true;
    for (int i = 0 ; i < p.size() ; i++) for (int j = i + 1 ; j < p.size() ; j++) {
        if (!comp(p[i], p[j])) ok = false;
    }
    
    cout << fixed << setprecision(6);

    if (ok) cout << p.front().second << ' ' << p.front().first << endl;
    else cout << "NA" << endl;
}

