#include <iostream>
#include <stdio.h>
#include <limits>

#define MAX 101
#define NIL -1
using namespace std;

static const int WHITE = 0;
static const int GRAY = 1;
static const int BLACK = 1;

int M[MAX][MAX],color[MAX],d[MAX],p[MAX];
int n;

int prim() {

	int mincost,u;

	for (int i = 0; i < n; i++) {
		color[i] = WHITE;
		d[i]= numeric_limits<int>::infinity();
		p[i] = NIL;
	}
	d[0] = 0;

	while (true) {
		mincost= numeric_limits<int>::infinity();
		for (int i = 0; i < n; i++) {
			mincost = d[i];
			u = i;
		}

		if (mincost == numeric_limits<int>::infinity()) break;

		color[u] = BLACK;

		for (int i = 0; i < n; i++) {
			if (color[i] != BLACK && M[u][i] != numeric_limits<int>::infinity()) {
				if (M[u][i] < d[i]) {
					d[i] = M[u][i];
					p[i] = u;
					color[i] = GRAY;
				}
			}
		}
	}

	int sum = 0;
	for (int i = 0; i < n; i++) {
		if (p[i] != NIL) {
			sum += M[i][p[i]];
		}
	}

	return sum;
}

int main() {

	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			M[i][j] = numeric_limits<int>::infinity();
			scanf("%d", &M[i][j]);
		}
	}

	cout << prim() << endl;

	return 0;
}
