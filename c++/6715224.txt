#include <bits/stdc++.h>
using namespace std;

void bubbleSort(vector<pair<char, int> > &cards);
void selectionSort(vector<pair<char, int> > &cards);
void printCards(vector<pair<char, int> > &cards);

int main() {
    int n;
    cin >> n;
    vector<pair<char, int> > cards1(n), cards2(n);
    for (int i = 0; i < n; i++) {
        cin >> cards1.at(i).first >> cards1.at(i).second;
        cards2 = cards1;
    }

    bubbleSort(cards1);
    selectionSort(cards2);

    printCards(cards1);
    cout << "Stable" << endl;

    printCards(cards2);
    if (cards1 == cards2) {
        cout << "Stable" << endl;
    } else {
        cout << "Not stabel" << endl;
    }
}

void bubbleSort(vector<pair<char, int> > &cards) {
    for (int i = 0; i < cards.size(); i++) {
        for (int j = cards.size() - 1; j > i; j--) {
            if (cards.at(j - 1).second > cards.at(j).second) {
                swap(cards.at(j - 1).second, cards.at(j).second);
                swap(cards.at(j - 1).first, cards.at(j).first);
            }
        }
    }

    return;
}

void selectionSort(vector<pair<char, int> > &cards) {
    int min_j;
    for (int i = 0; i < cards.size(); i++) {
        min_j = i;
        for (int j = i; j < cards.size(); j++) {
            if (cards.at(j).second < cards.at(min_j).second) {
                min_j = j;
            }
        }
        swap(cards.at(i).second, cards.at(min_j).second);
        swap(cards.at(i).first, cards.at(min_j).first);
    }

    return;
}

void printCards(vector<pair<char, int> > &cards) {
    for (int i = 0; i < cards.size(); i++) {
        if (i) {
            cout << " ";
        }
        cout << cards.at(i).first << cards.at(i).second;
    }
    cout << endl;

    return;
}
