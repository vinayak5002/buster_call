#入力の地図の中で、島を見つけたらDFSする。
#再帰で実装する

#DFS(再帰関数)
def dfs(pos):
    y,x = pos
    G[y][x] = 2

    #上
    if G[y-1][x] == 1:
        s = (y-1, x)
        dfs(s)
    #下
    if G[y+1][x] == 1:
        s = (y+1, x)
        dfs(s)
    #左
    if G[y][x-1] == 1:
        s = (y, x-1)
        dfs(s)
    #右
    if G[y][x+1] == 1:
        s = (y, x+1)
        dfs(s)
    #左上
    if G[y-1][x-1] == 1:
        s = (y-1, x-1)
        dfs(s)
    #左下
    if G[y+1][x-1] == 1:
        s = (y+1, x-1)
        dfs(s)
    #右上
    if G[y-1][x+1] == 1:
        s = (y-1, x+1)
        dfs(s)
    #右下
    if G[y+1][x+1] == 1:
        s = (y+1, x+1)
        dfs(s)

while True:
    w,h = map(int, input().split())
    if w == 0 and h == 0:
        break
    #探索しやすくするため、入力の外側を0で囲う
    G = [[0 for i in range(w+2)] for j in range(h+2)]
    for i in range(h):
        a = list(map(int, input().split()))
        for j in range(1, w+1):
            G[i+1][j] = a[j-1]

    #探索開始
    ilands = 0
    for i in range(1, h+1):
        for j in range(1, w+1):
            if G[i][j] == 1:
                s = (i,j)
                dfs(s)
                ilands += 1

    print(ilands)
        
