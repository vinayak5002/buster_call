#include <iostream>
#include <cstdio>
#include <iterator>
#include <string>
#include <sstream>
#include <bitset>
#include <vector>
#include <array>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
#define _USE_MATH_DEFINES  // for M_PI
#include <cmath>
using std::cin;
using std::cout;
using std::endl;
using std::string;
using std::bitset;
using std::vector;
using std::array;
using std::stack;
using std::queue;
using std::set;
using std::map;
using std::pair;
using llong = long long;
template<typename T>
using nlimits = std::numeric_limits<T>;
#define REP(i, n) for (int i = 0; i < static_cast<int>(n); ++i)
#define RREP(i, n) for (int i = static_cast<int>(n) - 1; i >= 0; --i)
#define FOR(i, a, b) for (int i = static_cast<int>(a); i < static_cast<int>(b); ++i)
#define RFOR(i, a, b) for (int i = static_cast<int>(a) - 1; i >= static_cast<int>(b); --i)


template<typename T>
void PrintArray(const T* a, const size_t n);


int main() {
    std::ios::sync_with_stdio(false);
    cin.tie(0);

    while (true) {
        int m, f, r;
        cin >> m >> f >> r;
        if (m == -1 && f == -1 && r == -1) break;

        if (m == -1 || f == -1) cout << "F\n";
        else if (m + f >= 80) cout << "A\n";
        else if (m + f >= 65) cout << "B\n";
        else if (m + f >= 50) cout << "C\n";
        else if (m + f >= 30) {
            if (r >= 50) cout << "C\n";
            else cout << "D\n";
        }
        else cout << "F\n";
    }
}


template<typename T>
void PrintArray(const T* a, const size_t n) {
    string s = std::to_string(a[0]);
    FOR(i, 1, n) s += " " + std::to_string(a[i]);
    cout << s + "\n";
}

