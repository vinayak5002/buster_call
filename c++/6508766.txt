#include <iostream>

void Initialize(int* card, int initialize_num)
{
    for(int i = 0; i < 13; i++)
    {
        card[i] = initialize_num;
    }
}

void InputHoldingCard(int n, int* s_card, int* h_card, int* c_card, int* d_card)
{
    for(int i = 0; i < n; i++)
    {
        int number;
        char mark;
        std::cin >> mark >> number;
        if(mark == 'S')
        {
            s_card[number - 1] = 0;
        }
        else if(mark == 'H')
        {
            h_card[number - 1] = 0;
        }
        else if(mark == 'C')
        {
            c_card[number - 1] = 0;
        }
        else
        {
            d_card[number - 1] = 0;
        }
    }
}

void OutputLackCard(int* s_card, int* h_card, int* c_card, int* d_card)
{
    for(int i = 0; i < 13; i++)
    {
        if(s_card[i] == 1)
        {
            std::cout << "S " << i + 1 << "\n"; 
        }
    }
    for(int i = 0; i < 13; i++)
    {
        if(h_card[i] == 1)
        {
            std::cout << "H " << i + 1 << "\n"; 
        }
    }
    for(int i = 0; i < 13; i++)
    {
        if(c_card[i] == 1)
        {
            std::cout << "C " << i + 1 << "\n"; 
        }
    }
    for(int i = 0; i < 13; i++)
    {
        if(d_card[i] == 1)
        {
            std::cout << "D " << i + 1 << "\n"; 
        }
    }
}

int main()
{
    int n;
    std::cin >> n;
    
    int s_card[13];
    int h_card[13];
    int c_card[13];
    int d_card[13];
    Initialize(s_card, 1);
    Initialize(h_card, 1);
    Initialize(c_card, 1);
    Initialize(d_card, 1);
    
    InputHoldingCard(n, s_card, h_card, c_card, d_card);
    OutputLackCard(s_card, h_card, c_card, d_card);  
}
