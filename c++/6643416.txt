#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main()
{
	int l,i,j,a,k;
	a=0;
	char ch;
	//scanf("%d",&l);
	char aTmpCh;
	int answer[1000];
    
	while(scanf("%d", &l)!=EOF)
	{
	
	scanf ("%c", &aTmpCh);
	char char_array[l][l];
	int int_array[l][l];
	for(i=1;i<=l;i++)
	{
		for(j=1;j<=l;j++)
		{	
			scanf ("%c", &ch);
			char_array[i-1][j-1]=ch;
			int_array[i-1][j-1]=char_array[i-1][j-1]-48;	
			//printf("%d ",int_array[i-1][j-1]);
		}
		printf("\n");		
		scanf ("%c", &aTmpCh);			
	}
	
	if(l==0)
	{
		a=a;	
	}
	if(l!=0)
	{
		a=a+1;	
	}
	
	
	int maxr,maxur,maxu,maxul;
	maxr=maxur=maxu=maxul=0;
	int max;
	max=0;
	
	int maxsearchno = l - 1;
	int scount;
	for(i=1;i<=l;i++)
	{
		for(j=1;j<=l;j++)
		{	
			if (int_array[i-1][j - 1] == 0)
			    continue;
			int searchcountr[i-1][j-1] ;
			int searchcountur[i-1][j-1] ;	
			int searchcountu[i-1][j-1] ;					
			int searchcountul[i-1][j-1] ;			
			for (scount = 1; scount <= (l - 1); scount++)
			{
				//往右找 
				if (int_array[i-1][j - 1 + scount] == 1) 
				{
					searchcountr[i-1][j-1] = scount + 1;				
				}
				else
				{
					searchcountr[i-1][j-1] = scount;
					break;
				}					
		
				if ((j - 1 + scount) > (l - 1))
				{
					searchcountr[i-1][j-1] = scount;
					break;					
				}
			}
			for (scount = 1; scount <= (l - 1); scount++)
			{			
				//往右上找 
				if (int_array[i-1 - scount][j - 1 + scount] == 1) 
				{
					searchcountur[i-1][j-1] = scount + 1;				
				}
				else
				{
					searchcountur[i-1][j-1] = scount;
					break;
				}					
		
				if ((j - 1 + scount) > (l - 1) || ((i-1 - scount) < 0))
				{
					searchcountur[i-1][j-1] = scount;
					break;					
				}
			}

			for (scount = 1; scount <= (l - 1); scount++)
			{				
				//往上找 
				if (int_array[i-1 - scount][j - 1] == 1) 
				{
					searchcountu[i-1][j-1] = scount + 1;				
				}
				else
				{
					searchcountu[i-1][j-1] = scount;
					break;
				}					
		
				if ((i-1 - scount) < 0)
				{
					searchcountu[i-1][j-1] = scount;
					break;					
				}	
			}
			
			for (scount = 1; scount <= (l - 1); scount++)
			{				
				//往左上找 
				if (int_array[i-1 - scount][j - 1 - scount] == 1) 
				{
					searchcountul[i-1][j-1] = scount + 1;				
				}
				else
				{
					searchcountul[i-1][j-1] = scount;
					break;
				}					
		
				if (((i-1 - scount) < 0) || ((j-1 - scount) < 0))
				{
					searchcountul[i-1][j-1] = scount;
					break;					
				}									
			}
			if(searchcountr[i-1][j-1]>maxr)
			maxr=searchcountr[i-1][j-1];
			if(searchcountur[i-1][j-1]>maxur)
			maxur=searchcountur[i-1][j-1];
			if(searchcountu[i-1][j-1]>maxu)
			maxu=searchcountu[i-1][j-1];
			if(searchcountul[i-1][j-1]>maxul)
			maxul=searchcountul[i-1][j-1];
			//printf("i = %d, j = %d\n", i - 1, j - 1);			
			//printf("searchcountr=%d\n", searchcountr[i-1][j-1]);
			//printf("searchcountur=%d\n", searchcountur[i-1][j-1]);	
			//printf("searchcountu=%d\n", searchcountu[i-1][j-1]);
			//printf("searchcountul=%d\n", searchcountul[i-1][j-1]);									
		}
		
	}

	if(maxr>max)
	max=maxr;
	if(maxur>max)
	max=maxur;	
	if(maxu>max)
	max=maxu;
	if(maxul>max)
	max=maxul;
	answer[a-1]=max;
	//printf("%d",max);
	
	}
	for(k=1;k<=a;k++)
	printf("%d\n",answer[k-1]);
}
