#include <stdio.h>

int H;

void maxHeapify(int *A, int i)
{
    int l, r, largest;
    l = (i+1)*2-1;  // left(i)
    r = (i+1)*2;    // right(i)
    // 左の子、自分、右の子で値が最大のノードを選ぶ
    if(l < H && A[l] > A[i]) largest = l;
    else largest = i;

    if (r < H && A[r] > A[largest])   largest = r;

    if (largest != i) {// i の子の方が値が大きい場合
        int tmp = A[i];
        A[i] = A[largest];
        A[largest] = tmp;
        maxHeapify(A, largest); // 再帰的に呼び出し
    }
}

void buildMaxHeap(int *A)
{
    for (int i=H/2-1; i>=0; i--)  maxHeapify(A, i);
}

int main()
{
    int i;
    scanf("%d", &H);
    int A[H];
    for (i=0; i<H; i++)  scanf("%d", &A[i]);
    buildMaxHeap(A);
    for (i=0; i<H-1; i++)  printf(" %d", A[i]);
    printf(" %d\n", A[i]);
    return 0;
}
