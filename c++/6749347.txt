#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i=0; i<(n); i++)

struct Card{char suit, value;};


void bubble(struct Card a[],int n){
    bool flag = true;
    while(flag){
        flag = false;
        for(int i=n-1; i>0; i--){
            if(a[i].value<a[i-1].value){
                swap(a[i],a[i-1]);
                flag = true;
            }
        }
    }
}

void selection(struct Card a[],int n){
    int i, j, minj;
    rep(i,n-1){
        minj = i;
        for(int j=i; j<n; j++){
            if(a[j].value < a[minj].value) minj = j;
        }
        if(i!=minj) swap(a[i],a[minj]);
    }
}

void trace(struct Card a[],int n){
    rep(i,n){
        if(i>0) cout << " " ;
        cout << a[i].suit << a[i].value;
    }
    cout << endl;
}

bool isStable(struct Card c1[], struct Card c2[],int n){
    rep(i,n){
        if(c1[i].suit != c2[i].suit){
            return false;
        }
    }
    return true;
}

int main() {
    Card c1[110], c2[110];
    int n ;
    cin >> n ;

    int a[101] ;
    rep(i,n) cin >> c1[i].suit >> c1[i].value;
    rep(i,n) c2[i] = c1[i];

    bubble(c1, n);
    selection(c2, n);
    trace(c1,n);
    cout << "Stable" << endl;
    trace(c2,n);
    if(isStable(c1,c2,n)){
        cout << "Stable" << endl;
    }
    else{
        cout << "Not Stable" << endl;
    }
    

    return 0;

    
}
