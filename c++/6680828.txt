#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const long long INF = 1LL<<60;
const double PI = acos(-1.0);
using Graph = vector<vector<ll>>;
using Grid = vector<vector<char>>;
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }


int main()
{
    int N, W;
    cin >> N >> W;
    vector<int> v_vec(N);
    vector<int> w_vec(N);
    for (int i = 0; i < N; ++i)
        cin >> v_vec.at(i) >> w_vec.at(i);
    vector<vector<int>> dp(N + 1, vector<int>(W + 1, -1));
    dp.at(0).at(0) = 0;
    for (int i = 0; i < N; ++i) {
        int v = v_vec.at(i);
        int w = w_vec.at(i);
        for (int j = 0; j <= W; ++j) {
           dp.at(i + 1).at(j) = dp.at(i).at(j);
           if (j < w || dp.at(i).at(j - w) == -1)
               continue;
           int tmp = dp.at(i).at(j - w) + v;
           dp.at(i + 1).at(j) = max(tmp, dp.at(i + 1).at(j));
        }
    }
    cout << *max_element(dp.at(N).begin(), dp.at(N).end()) << endl;
}
