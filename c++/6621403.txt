#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<ld, ld> point;

#define rep(i, a, b) for(ll i = (ll)a; i < (ll)b; i++)
#define irep(i, v) for(auto i = (v).begin(); i != (v).end(); i++)
#define ALL(v) (v).begin(), (v).end()
#define SZ(v) (ll)(v).size()
#define fi first
#define se second

const ll INF = 1e18;
const ld EPS = 1e-10;
const ll MOD = 1e9 + 7;
const ld PI = M_PI;


void print(point p){
    cout << p.first << " " << p.second << endl;
}

void coch(ll d, point p1, point p2){
    if(d == 0){
        return;
    }
    point s, u, t;
    ld x1 = p1.first, x2 = p2.first, y1 = p1.second, y2 = p2.second;
    s = {(2 * x1 + x2) / 3, (2 * y1 + y2) / 3};
    t = {(x1 + 2 * x2) / 3, (y1 + 2 * y2) / 3};
    point tmp = {t.first - s.first, t.second - s.second};
    u.fi = s.fi + tmp.fi * cos(PI / 3) - tmp.se * sin(PI / 3); 
    u.se = s.se + tmp.fi * sin(PI / 3) + tmp.se * cos(PI / 3);

    coch(d - 1, p1, s);
    print(s);
    coch(d - 1, s, u);
    print(u);
    coch(d - 1, u, t);
    print(t);
    coch(d - 1, t, p2);
}

int main(){
  cin.tie(0);
  ios::sync_with_stdio(false);
  srand((unsigned)time(NULL));
  cout << fixed << setprecision(20);

  point p1 = {0, 0};
  point p2 = {100, 0};

  ll n;
  cin >> n;

  print(p1);
  coch(n, p1, p2);
  print(p2);


  return 0;
}
