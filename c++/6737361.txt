#include <bits/stdc++.h>
using namespace std;

namespace {
    const int WHITE = 0;
    const int GRAY = 1;
    const int BLACK = 2;

    int n, t;
    vector<vector<int>> m;
    vector<int> color, d, f;
}  // namespace

void dfs_visit(int u);
void dfs();

int main() {
    int u, k, v;
    cin >> n;
    m = vector<vector<int>>(n, vector<int>(n, 0));
    color = vector<int>(n, WHITE);
    d = vector<int>(n, 0);
    f = vector<int>(n, 0);

    for (int i = 0; i < n; i++) {
        cin >> u >> k;
        while (k--) {
            cin >> v;
            m.at(u - 1).at(v - 1) = 1;
        }
    }

    dfs();
}

void dfs_visit(int u) {
    int v;
    color.at(u) = GRAY;
    d.at(u) = t;
    t++;
    for (v = 0; v < n; v++) {
        if (m.at(u).at(v) == 0) {
            continue;
        }
        if (color.at(v) == WHITE) {
            dfs_visit(v);
        }
    }
    color.at(u) = BLACK;
    f.at(u) = t;
    t++;

    return;
}

void dfs() {
    int u;
    t = 1;

    for (u = 0; u < n; u++) {
        if (color.at(u) == WHITE) {
            dfs_visit(u);
        }
    }
    for (u = 0; u < n; u++) {
        printf("%d %d %d\n", u + 1, d.at(u), f.at(u));
    }

    return;
}
