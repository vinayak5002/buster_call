#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define reps(i,start,end) for(int i = start; i < (int)(end); i++)
#define ll long long
#define print(t) cout << t << endl
#define all(a)  (a).begin(),(a).end()
// << std::fixed << std::setprecision(0)
const ll INF = 1LL << 60;

template<class T> void chmin(T& a, T b){
 if(a > b){
  a = b;
 }
}

template<class T> void chmax(T& a, T b){
 if(a < b){
  a = b;
 }
}

template<class Tp>
bool zero (const Tp &x) {
    return x == 0;
}

template<class Tp, class... Args>
bool zero (const Tp &x, const Args& ...args) {
    return zero(x) and zero(args...);
}
int main(){
while(true){
  int n;cin >> n;
  if(n == 0)break;
  pair<int,int> sw = {0,0};
  pair<int,int> ne = {1,1};
  //square[3] = ３番目の正方形　左下位置
  vector<pair<int,int>> square(n);
  square[1] = {0,0};
  rep(i,n-1){
    int x,y;cin >> x >> y;
    if(y== 0){
      square[i+1] = {square[x].first -1,square[x].second};
    }else if(y==1){
      square[i+1] = {square[x].first,square[x].second-1};
    }else if(y== 2){
      square[i+1] = {square[x].first +1,square[x].second};
    }else{
      square[i+1] = {square[x].first ,square[x].second +1};
    }
  }
  sort(all(square));
  int big = 0;
  int small = 0;
  for(auto p:square){
    if(p.second > big){big = p.second;}
    if(p.second < small){small = p.second;}
  }
  int ans = big - small +1;
  cout << square.back().first  - square.front().first  +1<< " " << ans << endl;
}
}

