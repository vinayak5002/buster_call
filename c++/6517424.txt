#include <stdio.h>
#define MAX 10000
#define NIL -1

int getDepth(int u);
void printNode(int u);

typedef struct
{
    int parent;
    int left;
    int right;
} Node;

Node T[MAX];

int main(void)
{
    int n, id, k, c, left;
    scanf("%d", &n);
    for (int i = 0; i < n; i++)
    {
        T[i].left = T[i].parent = T[i].right = NIL;
    }
    for (int i = 0; i < n; i++)
    {
        scanf("%d %d", &id, &k);
        for (int j = 0; j < k; j++)
        {
            scanf("%d", &c);
            if (j == 0)
            {
                T[id].left = c;
            }
            else
            {
                T[left].right = c;
            }
            left = c;
            T[c].parent = id;
        }
    }
    for (int i = 0; i < n; i++)
    {
        printNode(i);
    }

    return 1;
}

int getDepth(int u)
{
    int d = 0;
    while (T[u].parent != NIL)
    {
        u = T[u].parent;
        d++;
    }
    return d;
}

void printNode(int u)
{
    printf("node %d: ", u);
    printf("parent = %d, ", T[u].parent);
    printf("depth = %d, ", getDepth(u));

    if (T[u].parent == NIL)
    {
        printf("root, ");
    }
    else if (T[u].left == NIL)
    {
        printf("leaf, ");
    }
    else
    {
        printf("internal node, ");
    }
    printf("[");
    for (int i = 0, c = T[u].left; c != NIL; c = T[c].right, i++)
    {
        if (i)
        {
            printf(", ");
        }
        printf("%d", c);
    }
    printf("]\n");
}
