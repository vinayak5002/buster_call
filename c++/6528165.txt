#include <bits/stdc++.h>

using namespace std;

#define rep(i, n) for (int i = 0; i < (int)n; ++i)
#define FOR(i, a, b) for (int i = (int)a; i < (int)b; ++i)
#define rrep(i, n) for (int i = ((int)n - 1); i >= 0; --i)

using ll = long long;
using ld = long double;

__attribute__((unused)) const ll INF = 1e18;
__attribute__((unused)) const int Inf = 1e9;
__attribute__((unused)) const double EPS = 1e-9;
__attribute__((unused)) const ll MOD = 1000000007;

int res = 0;

void merge(vector<int>& a, int l, int mid, int r) {
  int n = mid - l, m = r - mid;
  vector<int> left(n + 1), right(m + 1);
  rep(i, n) { left[i] = a[i + l]; }
  rep(i, m) { right[i] = a[i + mid]; }
  left[n] = INT_MAX;
  right[m] = INT_MAX;
  int i = 0, j = 0;
  FOR(k, l, r) {
    if (left[i] <= right[j]) {
      a[k] = left[i++];
    } else {
      a[k] = right[j++];
    }
    res++;
  }
}

void mergeSort(vector<int>& a, int l, int r) {
  if (r - l <= 1) {
    return;
  }
  int mid = (l + r) / 2;
  mergeSort(a, l, mid);
  mergeSort(a, mid, r);
  merge(a, l, mid, r);
}

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(0);
  int n;
  cin >> n;
  vector<int> a(n);
  rep(i, n) cin >> a[i];
  mergeSort(a, 0, n);

  rep(i, n) {
    cout << a[i];
    if (i == n - 1) {
      cout << endl << res << endl;
    } else {
      cout << " ";
    }
  }

  return 0;
}

