#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll,ll>,vector<pair<ll,ll>>,greater<pair<ll,ll>>>;

bool chmax(ll& p, ll q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

bool chmin(ll& p, ll q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}


ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    
    ll N,M,R;
    cin>>N>>M>>R;
    vector<vector<pair<ll,ll>>> G(N);
    rep(i,M){
        ll S,T,D;
        cin>>S>>T>>D;
        S--;T--;
        G[S].push_back({T,D});
    }
    R--;

    vector<bool> seen(N,false);
    vll DP(N,1e18);
    DP[R]=0;
    
    pqr Q;
    Q.push({0,R});
    while(!Q.empty()){
        auto p=Q.top();
        Q.pop();
        if(seen[p.second])continue;
        seen[p.second]=1;
        for(auto v:G[p.second]){
            if(seen[v.first])continue;
            if(DP[v.first]<=p.first+v.second)continue;
            DP[v.first]=p.first+v.second;
            Q.push({DP[v.first],v.first});
        }
    }

    rep(i,N){
        if(DP[i]<1e17)cout<<DP[i]<<endl;
        else cout<<"INF"<<endl;
    }



}
