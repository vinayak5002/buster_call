#!/usr/bin/env python3

#################################################
# 問題名: 0-1 ナップザック問題
# url: https://onlinejudge.u-aizu.ac.jp/problems/DPL_1_B
# 所要時間:
# 学んだこと:
#################################################

N, W = map(int, input().split())
val = []
wei = []
for i in range(N):
    v, w = map(int, input().split())
    val.append(v)
    wei.append(w)

V = list([0 for i in range(W + 1)] for j in range(N + 1))

# i番目までの品物を選択
# 重さはc以下
# 合計価値の最大値を求める
def calc_val(i, c):
    if i <= 0 or c <= 0:
        return 0
    elif c - wei[i - 1] < 0:
        if V[i][c] == 0:
            V[i][c] += calc_val(i - 1, c)
        return V[i][c]
    else:
        # i番目の品物を選ぶとき
        if V[i - 1][c - wei[i - 1]] == 0:
            V[i - 1][c - wei[i - 1]] += calc_val(i - 1, c - wei[i - 1])
        val_1 = val[i - 1] + V[i - 1][c - wei[i - 1]]

        # i番目の品物を選ばないとき
        if V[i - 1][c] == 0:
            V[i - 1][c] += calc_val(i - 1, c)
        val_2 = V[i - 1][c]

        if V[i][c] == 0:
            V[i][c] += max(val_1, val_2)
        return V[i][c]

def main():
    print(calc_val(N, W))

if __name__ == '__main__':
    main()
