#include <iostream>
#include <vector>
using namespace std;

void bubbleSort(vector<int> &A, int n, vector<char> &B){
    int flag = 1, tmp;
    char tmp2;
    while(flag){
        flag = 0;
        for (int i = n - 1; i > 0; i--){
            if (A[i] < A[i - 1]){
                tmp = A[i];
                A[i] = A[i - 1];
                A[i - 1] = tmp;
                tmp2 = B[i];
                B[i] = B[i - 1];
                B[i - 1] = tmp2;
                flag = 1;
            }
        }
    }
}

void selectionSort(vector<int> &A, int n, vector<char> &B){
    int minj, tmp;
    char tmp2;
    for (int i = 0; i < n; i++){
        minj = i;
        for (int j = i; j < n; j++){
            if (A[j] < A[minj]) minj = j;
        }
        if (A[i] != A[minj]){
            tmp = A[i];
            A[i] = A[minj];
            A[minj] = tmp;
            tmp2 = B[i];
            B[i] = B[minj];
            B[minj] = tmp2;
        }
    }
}

int main(){
    int n, rank;
    char suit;
    cin >> n;
    vector<int> rankList(n, 0);
    vector<char> suitList(n);

    for (int i = 0; i < n; i++){
        cin >> suit >> rank;
        suitList[i] = suit;
        rankList[i] = rank;
    }
    vector<int> rankList2 = rankList;
    vector<char> suitList2 = suitList;

    bubbleSort(rankList, n, suitList);

    for (int i = 0; i < n; i++){
        if (i == n - 1) cout << suitList[i] << rankList[i] << endl;
        else cout << suitList[i] << rankList[i] << " ";
    }
    cout << "Stable" << endl;

    selectionSort(rankList2, n, suitList2);

    for (int i = 0; i < n; i++){
        if (i == n - 1) cout << suitList2[i] << rankList2[i] << endl;
        else cout << suitList2[i] << rankList2[i] << " ";
    }
    if (suitList == suitList2) cout << "Stable" << endl;
    else cout << "Not stable" << endl;
    
    return 0;
}
