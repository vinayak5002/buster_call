#include<stdio.h>
#include<math.h>
#include<ctype.h>

int main(){
	char buf[10000];
	int num;
	double x[110], y[110];//座標x,y
	double dis1=0, dis2=0, dis3=0, dis_infini=0;//ミンコフスキー距離（1,2,3,無限）

	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d", &num);

	fgets(buf, sizeof(buf) - 1, stdin);
	char *p = buf;

	for (int i = 0; i < num; i++){
		sscanf(p, "%lf", &x[i]);

		if (*p == '-'){
			p++;
		}
		while (isdigit(*p)){
			p++;
		}
		while (isspace(*p)){
			p++;
		}
	}

	fgets(buf, sizeof(buf) - 1, stdin);
	p = buf;

	for (int i = 0; i < num; i++){
		sscanf(p, "%lf", &y[i]);

		if (*p == '-'){
			p++;
		}
		while (isdigit(*p)){
			p++;
		}
		while (isspace(*p)){
			p++;
		}
	}

	for (int i = 0; i < num; i++){//ミンコフスキー距離1
		dis1 += fabs(x[i] - y[i]);
	}

	for (int i = 0; i < num; i++){//ミンコフスキー距離2
		dis2 += pow(fabs(x[i] - y[i]),2);
	}
	dis2 = sqrt(dis2);

	for (int i = 0; i < num; i++){//ミンコフスキー距離3
		dis3 += pow(fabs(x[i] - y[i]),3);
	}
	dis3 = pow(dis3 , 1.0 / 3.0);

	for (int i = 0; i < num; i++){//ミンコフスキー距離無限
		if (fabs(x[i] - y[i])>dis_infini){
			dis_infini = fabs(x[i] - y[i]);
		}
	}

	printf("%lf\n", dis1);
	printf("%lf\n", dis2);
	printf("%lf\n", dis3);
	printf("%lf\n", dis_infini);

	return 0;
}
