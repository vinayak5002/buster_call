#pragma region

#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <numeric> // gcd, lcm
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

using ull = unsigned long long;
using ll = long long;
using vi = vector<int>;
using vll = vector<ll>;
using vvi = vector<vi>;
using vvll = vector<vll>;
using vs = vector<string>;
using pii = pair<int,int>;
using vpii = vector<pii>;

#pragma endregion

struct SegmentTree{
    int N;
    vi node;

    SegmentTree(int sz_data){
        N = 1;
        while(N < sz_data) N <<= 1;
        node.assign(2*N-1, 0);
    }

    void add(int i, int x){
        i += N-1;
        node[i] += x;
        while(i > 0){
            i = (i-1)/2;
            node[i] += x;
        }
    }

    int getSum(int l, int r, int v, int i, int j){
        if(j <= l or r <= i) return 0;
        if(l <= i and j <= r) return node[v];

        int sumi = getSum(l, r, 2*v+1, i, (i+j)/2);
        int sumj = getSum(l, r, 2*v+2, (i+j)/2, j);
        return sumi + sumj;
    }
    int getSum(int l, int r){
        return getSum(l, r, 0, 0, N);
    }
};

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n, q; cin >> n >> q;
    SegmentTree seg(n);
    while(q--){
        int c, x, y; cin >> c >> x >> y;
        if(c==0) seg.add(x-1, y);
        else cout << seg.getSum(x-1, y) << endl;
    }

    return 0;
}
