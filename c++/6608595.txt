#include <bits/stdc++.h>
using namespace std;
int mp[3+1][3+1],ans[3+1][3+1],s=999999,a,b;
const int dir [4][2]={{-1,0},{1,0},{0,-1},{0,1}};
bool mpa [3][3];
bool check ()
{
	for(int i=0;i<3;++i)
		for(int j=0;j<3;++j)
			if(mp[i][j]!=ans[i][j])return false;
	return true;
}
void dfs (int x,int y,int step)
{
	if(check()) 
	{
		s=min(s,step);
		return;
	}
	for(int i=0;i<4;++i)
	{
		int nx=x+dir[i][0],ny=y+dir[i][1];
		if(ny<=2 && nx<=2 && ny>=0 && nx>=0 && mpa[nx][ny]==false)
		{
			swap(mp[nx][ny],mp[x][y]);
			mpa[nx][ny]=true;
			dfs(nx,ny,step+1);
			mpa[nx][ny]=false;
			swap(mp[nx][ny],mp[x][y]);
		}
	}
}
int main()
{
	memset (mpa,false,sizeof(mpa)); 
	for(int i=0;i<3;++i)
	{
		for(int j=0;j<3;++j)
		{
			cin>>mp[i][j];
			if(mp[i][j]==0)a=i,b=j;
		}
	}
	int cnt=1;
	for(int i=0;i<3;++i)
	{
		for(int j=0;j<3;++j)
		{
			if (cnt==9)cnt=0;
			ans[i][j]=cnt;
			cnt++;
		}
	}
	mpa[a][b]=true;
	dfs (a,b,0);
	cout<<s<<endl;
	return 0;
}
