#include <iostream>
#include <vector>
using ll = long long;
using namespace std;
vector<ll> w;

ll rec(const vector<ll>& w, vector<vector<ll>>& memo, ll l, ll r) {
	if (r-l <= 1) return 0;
	if (r-l == 2) {
		if (abs(w[r-1] - w[l]) <= 1) return 2;
		else return 0;
	}
	if (memo[l][r] != -1) return memo[l][r];
	if (abs(w[r-1] - w[l]) <= 1 && rec(w, memo, l+1, r-1) == r-l-2) {
		return memo[l][r] = r-l;
	} else {
		for (ll mid = l+1; mid <= r-1; mid++) {
			memo[l][r] = max(memo[l][r], rec(w, memo, l, mid) + rec(w, memo, mid, r));
		}
		return memo[l][r];
	}
}
int main() {
	vector<vector<ll>> memo(310, vector<ll>(310, -1));
	vector<ll> ans;
	while (true) {
		ll n; cin >> n;
		if (n == 0) break;
		vector<ll> w(n);
		for (ll i = 0; i < n; i++) cin >> w[i];
		fill(memo.begin(), memo.end(), vector<ll>(310, -1));
		ans.push_back(rec(w, memo, 0, n));
	}
	for (auto x: ans) cout << x << endl;
}
	

