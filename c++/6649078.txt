#!/usr/bin/env PyPy3

from collections import Counter, defaultdict, deque
import itertools
import re
import math
from functools import reduce
import operator
import bisect
from heapq import *
import functools

mod=998244353

import sys
class Dice:
    def __init__(self,dice):
        self.d = dice[:]
    def move(self,s):
        self.n = len(s)
        for i in range(self.n):
            if s[i] == 'S':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[4],self.d[0],self.d[2],self.d[3],self.d[5],self.d[1]
            elif s[i] == 'N':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[1],self.d[5],self.d[2],self.d[3],self.d[0],self.d[4]
            elif s[i] == 'W':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[2],self.d[1],self.d[5],self.d[0],self.d[4],self.d[3]
            elif s[i] == 'E':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[3],self.d[1],self.d[0],self.d[5],self.d[4],self.d[2]
        return self.d
    def calc_right(self,up,flont):
        self.li = []
        for i in range(6):
            if self.d[i] == up:
                self.up_pos = i
            if self.d[i] == flont:
                self.flont_pos = i
        if self.flont_pos == 2 or self.flont_pos == 3:
            self.move('W')
            self.li.append('E')
        while self.d[1] != flont:
            self.move('S')
            self.li.append('N')
        while self.d[0] != up:
            self.move('W')
            self.li.append('E')
        ans = self.d[2]
        for s in self.li[::-1]:
            self.move(s)
        return ans
d1 = list(map(int,input().split()))
d2 = list(map(int,input().split()))
d2_c = d2[:]
c = 0
for j in range(6):
    d2_c = [d2_c[1],d2_c[2],d2_c[0],d2_c[5],d2_c[3],d2_c[4]]
    if j == 3:
        d2_c = [d2_c[1],d2_c[0],d2_c[2],d2_c[3],d2_c[5],d2_c[4]]  
    flg1 = 0
    flg2 = 0
    for i in range(3):
        if (d1[i],d1[5-i]) != (d2_c[i],d2_c[5-i]) and (d1[i],d1[5-i]) != (d2_c[5-i],d2_c[i]):
            flg1 = 1
            break
        elif (d1[i],d1[5-i]) == (d2_c[i],d2_c[5-i]) and (d1[i],d1[5-i]) == (d2_c[5-i],d2_c[i]):
            flg2 = 1
    if flg1:
        continue
    if flg2:
        print('Yes')
        exit()
    dice1 = Dice(d1)
    dice2 = Dice(d2)
    if dice1.calc_right(d1[0],d1[1]) == dice2.calc_right(d1[0],d1[1]):
        print('Yes')
        exit()
print('No')
