#include<stdio.h>

#define MAX 100005
#define NIL -1

typedef struct 
{
	int parent;
	int left;
	int right;
} Node;

Node T[MAX];
int n;

void preParse(int u)
{
	if(u == NIL) return;
	printf(" %d", u);
	preParse(T[u].left);
	preParse(T[u].right);
}

void inParse(int u)
{
	if(u == NIL) return;
	inParse(T[u].left);
	printf(" %d", u);
	inParse(T[u].right);
}

void preParse(int u)
{
	if(u == NIL) return;
	preParse(T[u].left);
	preParse(T[u].right);
	printf(" %d", u);
}

int construction(int v, int l, int r)
{
    T[v].left = l;
	T[v].right = r;
	if(l != NIL) T[l].parent = v;
	if(r != NIL) T[r].parent = v;
}

int main(void)
{
	int i, v, l, r, root;
	
	scanf("%d", &n);
	
	for(i = 0; i < n; i++)
	{
		T[i].parent = T[i].left = T[i].right = NIL;
	}
	
	for(i = 0; i < n; i++)
	{
		scanf("%d %d %d", &v, &l, &r);
		construction(v,l,r);
	}
	
	for(i = 0; i < n; i++)
	{
		if(T[i].parent == NIL)
		{
			root = i;
		}
	}
	
	printf("Preorder\n");
	preParse(root);
	printf("\n");
	printf("Inorder\n");
	preParse(root);
	printf("\n");
	printf("Postorder\n");
	preParse(root);
	printf("\n");
	
	return 0;
}
