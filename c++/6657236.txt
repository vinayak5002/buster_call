#include <iostream>
#include <vector>
using namespace std;

vector<int> w;
vector<vector<int>> dp;
int rec(int l, int r){
    if(dp[l][r] != -1) return dp[l][r];
    if(abs(l-r) <= 1) return 0;
    
    int ret = 0;
    if(abs(w[l] - w[r-1]) <= 1 && rec(l+1, r-1) == r-l-2) ret = r-l;

    for(int m = l+1; m <= r-1; ++m){
        ret = max(ret, rec(l, m) + rec(m, r);
    }

    return dp[l][r] = ret;
}


int main(){
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    while(true){
        int n;
        cin >> n;
        if(n == 0) break;
        w.resize(n);
        dp.resize(n, vector<int>(n, -1));
        for(int i = 0; i < n; ++i) cin >> w[i];
        
        cout << rec(0, n) << "\n";
    }

    return 0;
}
