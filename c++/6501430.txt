#include <bits/stdc++.h>
#include <iostream>
using namespace std;

// 一番小さい要素が入ってるindexを返す
int searchMimIndex(vector<int> list) {
  int minIndex = 0;
  int minValue = list[0];
  for (int i = 1; i < list.size(); i++)
  {
    if (minValue > list[i]) {
      minValue = list[i];
      minIndex = i;
    }
  }
  return minIndex;
}

int main()
{
  std::cin.tie(nullptr), std::ios::sync_with_stdio(false);

  int n, k;
  cin >> n >> k;
  vector<int> w(n);
  for (int i = 0; i < n; i++)
  {
    int value;
    cin >> value;
    w[i] = value;
  }

  vector<int> track(k, 0);
  std::sort(w.begin(), w.end(), greater<int>());
  for (int a: w) {
    int minIndex = searchMimIndex(track);
    track[minIndex] += a;
    // cout << a << endl;
  }
  double max = *max_element(track.begin(), track.end());
  cout << max << endl;

  return 0;
}

