#include <iostream>
#include <iomanip>
using namespace std;

struct Card {
	char suit;
	int value;
};

const int Maxn = 10000;

int partition (Card A[],int p , int r)
{
	int x = A[r].value;
	int i = p-1;
	for( int j = p ; j < r ; ++j){
		if( A[j].value > x){
			continue;
		}else{
			i++;
			swap( A[i] , A[j]);
		}
	}
	i = i+1;
	swap(A[i], A[r]);
	return i;
}

void qSort(Card  A[] , int left ,  int right){
	if(left < right){
		int q = partition( A, left , right );
		qSort(A , left , q-1);
		qSort(A , q+1  , right);
	}
}

int main (){
	int n;
	cin>>n;
    Card A[Maxn];
	int tn;
	char tc;
	for( int i = 0 ; i < n ;i++)
	{
		cin>>tc>>tn;
		A[i].suit = tc;
		A[i].value = tn;
	}
	qSort(A , 0 , n-1);
	
	cout<<"not stable"<<endl;
	for(int k = 0 ;k < n; k ++){
		cout<<A[k].suit;
		cout<<' ';
		cout<<A[k].value;
		cout<<endl;
	}
	return 0;
}
