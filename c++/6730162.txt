#include <bits/stdc++.h>
using namespace std;

namespace {
    int64_t cnt = 0;
}  // namespace

void merge(vector<int> &a, int left, int mid, int right);
void mergeSort(vector<int> &a, int left, int right);

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (auto &e : a) {
        cin >> e;
    }

    mergeSort(a, 0, n);

    cout << ::cnt << endl;
}

void merge(vector<int> &a, int left, int mid, int right) {
    int n1 = mid - left;
    int n2 = right - mid;
    vector<int> l(n1 + 1), r(n2 + 1);
    for (int i = 0; i < n1; i++) {
        l.at(i) = a.at(left + i);
    }
    for (int i = 0; i < n2; i++) {
        r.at(i) = a.at(mid + i);
    }
    l.at(n1) = INT_MAX;
    r.at(n2) = INT_MAX;

    int i = 0, j = 0;
    for (int k = left; k < right; k++) {
        if (r.at(j) < l.at(i)) {
            a.at(k) = r.at(j);
            j++;
            ::cnt += n1 - i;
        } else {
            a.at(k) = l.at(i);
            i++;
        }
    }
    return;
}
void mergeSort(vector<int> &a, int left, int right) {
    if (right - left > 1) {
        int mid = (left + right) / 2;
        mergeSort(a, left, mid);
        mergeSort(a, mid, right);
        merge(a, left, mid, right);
    }
    return;
}
