#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
//#define MOD 998244353
#define INF 1e18 + 10
#define EPS 1e-9
#define F first
#define S second

#define debug(x) cout<<x<<endl;
#define repi(i,x,n) for(int i=x;i<n;i++)
#define rep(i,n) repi(i,0,n)
#define lp(i,n) repi(i,0,n)
#define repn(i,n) for(int i=n;i>=0;i--)
#define int long long
#define endl "\n"

typedef pair<int,int> PII;
typedef pair<int,string> PIS;
typedef pair<string,int> PSI;

template <typename T>
bool chmax(T &a, const T& b) {
  if (a < b) {
    a = b; 
    return true;
  }
  return false;
}

template <typename T>
bool chmin(T &a, const T& b) {
  if (a > b) {
    a = b;
    return true;
  }
  return false;
}

#define N 300010

int prime[N];
vector<int> P;

void eratosthenes(){
  rep(i,N){
    prime[i]=1;
  }
  prime[0]=prime[1]=0;
  rep(i,N){
    if(i%7 == 1 || i%7 == 6){
      if(prime[i]){
	for(int j=i+i;j<N;j+=i){
	  prime[j]=0;
	}
	P.push_back(i);
      }
    }else{
      prime[i]=0;
    }
  }
}

vector<int> primefactor(int n){
  vector<int> ret;
  rep(i,P.size() ){
    if(n%P[i]==0){
     
      ret.push_back(P[i]);
    }
  }
  return ret;
}

signed main(){
  cin.tie(0);	
  ios::sync_with_stdio(false);
  eratosthenes();
  while(1){
    int n;
    cin>>n;
    if(n==1) break;
    vector<int> ans=primefactor(n);
    cout<<n<<":";
    rep(i,ans.size()){
      cout<<" "<<ans[i];
    }
    cout<<endl;
  }
  return 0;
}

