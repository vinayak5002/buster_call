#include <iostream>
#include <vector>
#include <algorithm>
#include <deque>
#include <queue>
#include <string>
#include <iomanip>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <utility>
#include <stack>
#include <random>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <assert.h>
#if __has_include(<atcoder/all>)
#include <atcoder/all>
using namespace atcoder;
#endif
using namespace std;
using ll=long long;
#define read(x) cin>>(x);
#define readll(x) ll (x);cin>>(x);
#define readS(x) string (x);cin>>(x);
#define readvll(x,N) vector<ll> (x)((N));for(int i=0;i<(N);i++){cin>>(x)[i];}
#define rep(i,N) for(ll (i)=0;(i)<(N);(i)++)
#define rep2d(i,j,H,W) for(ll (i)=0;(i)<(H);(i)++)for(ll (j)=0;(j)<(W);j++)
#define is_in(x,y) (0<=(x) && (x)<H && 0<=(y) && (y)<W)
#define yn {cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

ll ans;

vector<vector<pair<ll,ll>>> G;
vector<ll> used,used2;

ll f(ll x,ll c){
  used[x]=1;
  ll res=0;
  ll cnt=0;
  for(pair<ll,ll> i:G[x]){
    if(used[i.first]==0){
      res+=f(i.first,i.second)+3*i.second;
      cnt++;
    }
  }
  if(cnt==0){
    res-=2*c;
  }
  return res;
}

ll dfs(ll x,ll c,ll q){
  //cerr<<"dfs: "<<x<<" "<<c<<" "<<q<<endl;
  used2[x]=1;
  ll res=0;
  ll cnt=0;
  for(pair<ll,ll> i:G[x]){
    if(used2[i.first]==0){
      res=max(res,dfs(i.first,c+i.second,i.second));
      cnt++;
    }
  }
  if(cnt==0){
    return c-q;
  }
  //cerr<<" "<<x<<" "<<res<<endl;
  return res;
}

void solve(ll n){
  G.clear();
  G.resize(n);
  vector<ll> p(n-1);
  vector<ll> d(n-1);
  for(ll i=0;i<n-1;i++){
    cin>>p[i];
  }
  for(ll i=0;i<n-1;i++){
    cin>>d[i];
  }
  for(ll i=0;i<n-1;i++){
    G[i+1].push_back(make_pair(p[i]-1,d[i]));
    G[p[i]-1].push_back(make_pair(i+1,d[i]));
  }
  ans=1000000000000LL;
  for(ll i=0;i<n;i++){
    used.clear();
    used.resize(n);
    used2.clear();
    used2.resize(n);
    ll resf=f(i,0);
    ll resdfs=dfs(i,0,0);
    //cerr<<i<<" "<<resf<<" "<<resdfs<<endl;
    ans=min(ans,resf-resdfs);
    //cerr<<endl<<endl;
  }
  cout<<ans<<endl;
}

int main(){
  ll n;
  while(1){
    cin>>n;
    if(n==0){
      break;
    }
    solve(n);
  }
}

