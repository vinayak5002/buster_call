#include<stdio.h>
#include<string.h>

#define N 100
#define WHITE 0
#define GRAY 1
#define BLACK 2
#define INFTY 1000000

int n, M[N][N];
int color[N], d[N], f[N], visi;
int head=0,tail=0;


int Q[N];

//キューの要素を追加
void enqueue(int a){
    Q[tail]=a;
    if(tail+1>=n){tail=0;}
    else{tail++;}
}

//キューの要素を取りだす
int dequeue(){
    int a;
    a=Q[head];
    if(head+1==n){
        head=0;
    }
    else{head++;}
    return a;
    }

//キューが空かどうかの判定
int empty(){
    if(head!=tail){
        return 0;
    }
    else{return 1;}
}

void bfs(int u){
    int v,i,a;
    for(i=0;i<n;i++){
        color[i]=WHITE;
        d[i]=INFTY;
    }
    color[u]=GRAY;
    d[u]=0;

    
    enqueue(u);
    while(empty()==0){
        a=dequeue();

        for(v=0;v<n;v++){
            if(M[a][v]==0){continue;}
            if(d[v]!=INFTY){continue;}
            d[v]=d[a]+1;
            enqueue(v);
        }
    }
    for(v=0;v<n;v++){
        printf("%d ",v+1);
        if(d[v]==INFTY){
            printf("-1");
        }
        else{printf("%d",d[v]);}
        if(v!=n-1){
        printf("\n");
        }
    }
    color[u]=BLACK;
}


int main(void){
    int i,j,u,k,v;

    scanf("%d",&n);
    
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            M[i][j]=0;
        }
    }

    for( i = 0 ; i < n ; i++ ){
        scanf("%d" , &u);
        scanf("%d" , &k);
		u--;
		
		for(j = 0 ; j < k ; j++ ){
			
			scanf("%d" , &v);
			M[u][v-1] = 1;
		}
	}
	
    bfs(0);


    return 0;
}
