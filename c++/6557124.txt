# 25.
# https://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1160&lang=jp

import sys

sys.setrecursionlimit(10000)

def dfs(cells, passed, i, j):
    passed[i][j] = True
    
    for h in (-1, 0, 1):
        for w in (-1, 0, 1):
            if h == 0 and w == 0:
                continue

            h0 = i + h
            w0 = j + w
            if 0 <= h0 and h0 < len(cells) and 0 <= w0 and w0 < len(cells[0]):
                if cells[h0][w0] == 1 and not passed[h0][w0]:
                    dfs(cells, passed, h0, w0)

def main():
    answers = []
    while True:
        w, h = map(int, input().split())
        if w == 0 and h == 0:
            break
    
        cells = []
        for _ in range(h):
            cells.append(list(map(int, input().split())))
        
        passed = [[False] * w for _ in range(h)]
        count = 0
        for i in range(h):
            for j in range(w):
                if cells[i][j] == 1 and not passed[i][j]:
                    count += 1
                    dfs(cells, passed, i, j)
        answers.append(count)
    
    for ans in answers:
        print(ans)


if __name__ == "__main__":
    main()




