#include<iostream>
#include<algorithm>
#include<vector>
#include<unordered_set>
#include<map>


using namespace std;

int main(){

    int result = 0;

    //頂点Vと辺の数Eの読み取り
    int V, E;
    cin >> V >> E;

    //重み付き隣接リストの作成
    vector< vector<int> > L(V, vector<int>());
    map<pair<int,int>,int> w;
    for (int i=0; i<E; i++){
        int s, t, d;
        cin >> s >> t >> d;
        L[s].push_back(t);
        L[t].push_back(s);

        w[make_pair(s,t)]=d;
        w[make_pair(t,s)]=d;
    }

    unordered_set <int> U;
    unordered_set <int> cU;

    for (int i=0; i<V; i++){
        cU.insert(i);
    }


    U.insert(0);
    cU.erase(0);

    while (U.size() < V){
        int mini = 10000;
        int J;
        for (int i:U){
            for (int j : L[i]){
                if (cU.find(j) != cU.end() && mini > w.at(make_pair(i,j))){
                    mini = w.at(make_pair(i,j));
                    J = j;
                }
            }
        }

        U.insert(J);
        cU.erase(J);

        result += mini;

    }
    
    printf("%d\n",result);

    return 0;
}
