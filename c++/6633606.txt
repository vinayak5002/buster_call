#include<bits/stdc++.h>

using namespace std;

using ll = long long;
using ld = long double;

#define rep(i, a, b) for(ll i = (ll)a; i < (ll)b; i++)
#define irep(i, v) for(auto i = (v).begin(); i != (v).end(); i++)
#define ALL(v) (v).begin(), (v).end()
#define SZ(v) (ll)(v).size()

const ll INF = 1e18;
const ld EPS = 1e-10;
const ll MOD = 1e9 + 7;
const ld PI = M_PI;

ll pow_mod(ll x, ll y, ll mod){
  ll res = 1;
  if(y > 0){
    res = pow_mod(x, y / 2, mod);
    if(y % 2 == 0) res = (res * res) % mod;
    else res = (((res * res) % mod) * x) % mod;
  }
  return res;
}

class combination{
  private:
    ll n, mod;
    vector<ll> fact, inv, finv;
  
  public:
    combination(ll n, ll mod): n(n), mod(mod){
      fact.resize(n + 1, 1);
      inv.resize(n + 1, 1);
      finv.resize(n + 1, 1);

      for(ll i = 2; i <= n; i++){
        // 階乗
        fact[i] = fact[i - 1] * i % mod;
        // 逆元
        inv[i] = mod - inv[mod % i] * (mod / i) % mod;
        // 逆元の階乗
        finv[i] = finv[i - 1] * inv[i] % mod;
      }
    }

    //　nCkの値を返す
    ll nCk(ll x, ll y){
      if(x < y) return 0;
      else return fact[x] * (finv[y] * finv[x - y] % mod) % mod;
    }

    // nPkの値を返す
    ll nPk(ll x, ll y){
      if(x < y) return 0;
      else return fact[x] * finv[x - y] % mod;
    }
};


int main(){
  cin.tie(0);
  ios::sync_with_stdio(false);
  srand((unsigned)time(NULL));
  cout << fixed << setprecision(20);

  ll n, k;
  cin >> n >> k;
  ll nmax = 1000 + 10;

  combination com(nmax, MOD);

  ll ans = 0;

  for(ll i = 0; i <= k; i++){
    ll tmp = pow_mod(k - i, n, MOD) * com.nCk(k, i);
    if(i % 2 == 1) tmp *= -1;
    ans += tmp;
    ans %= MOD;
  }
  cout << ans << endl;




  return 0;
}
