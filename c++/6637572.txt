#include <iostream>
#include <vector>
using namespace std;
#define max(N1,N2) N1>N2?N1:N2
int main()
{
    vector<int> w, v;
    vector<vector<int>> f;
    int V, n;
    while (cin >> n >> V && !cin.eof())
    {
        w.clear();
        v.clear();
        f.clear();
        w.push_back(0);
        v.push_back(0);
        for (int i = 1; i <= n; i++)
        {
            int cur_w, cur_v;
            cin >> cur_v >> cur_w;
            w.push_back(cur_w);
            v.push_back(cur_v);
        }

        for (int i = 0; i <= n; i++)
        {
            vector<int> buff(V + 1, 0);
            f.push_back(buff);
        }

        for (int i = 1; i <= n; i++)
        {
            for (int j = V; j >= 0; j--)
            {
                if (j >= w[i])
                {
                    f[i][j] = max(f[i - 1][j], f[i - 1][j - w[i]] + v[i]);
                }
                else
                {
                    f[i][j] = f[i - 1][j];
                }
            }
        }
        int ans = f[n][V];
        cout << ans << endl;
    }
    return 0;
}

