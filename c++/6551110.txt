#include<time.h>
#include<bits/stdc++.h>
// #include<atcoder/all>


using namespace std;
// using namespace atcoder;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> Pl;
typedef pair<int,int> Pi;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<vector<vector<int> > > vvvi;
typedef vector<string> vs;
typedef vector<vector<string> > vvs;
typedef vector<ll> vl;
typedef vector<vector<ll> > vvl;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<double> vd;
typedef vector<vector<double> > vvd;
typedef tuple<int,int,int> tiii;
typedef pair<int,int> pi;
typedef vector<pair<int,int> > vpi;
typedef vector<pair<ll,ll> > vpl;
typedef pair<ll,ll> pl;
typedef pair<string,string> ps;
typedef pair<bool,bool> pb;
typedef queue<pair<int,int> > que_pi;

#define all(x) (x).begin(), (x).end()


#define rep(i, n) for(ll i = 0; i < n; i++)
#define rep2(i, x, n) for(ll i = x; i < n; i++)
#define rep3(i, x, n) for(ll i = 0; x < n; i++)

#define REP(i, n) for(ll i = 0; i <= n; i++)
#define REP2(i, x, n) for(ll i = x; i <= n; i++)
#define REP3(i, x, n) for(ll i = 0; x <= n; i++)


#define drep(i,n) for(int i = (n)-1; i >= 0; --i)
#define srep(i,s,t) for (int i = s; i < (t); ++i)


int chtoi(char ch){
    return ch-'0';
}
// ll f(ll t){
//     return t*t+2*t+3;
// }
template <typename T>
bool chmax(T &a,const T &b){
  if(a<b){
    a=b;
    return true;
  }
  return false;
}

template <typename T>
bool chmin(T &a, const T& b) {
  if (a > b) {
    a = b;  // aをbで更新
    return true;
  }
  return false;
}


int rot(int x){
  int tot=1;
  while(x>=tot*10) tot*=10;
  return x/10 + x%10*tot;
}

int rota(int x){
  int tot=1;
  while(x>tot*10) tot*=10;
  return x%10*tot+x/10;
}

string toBinary(ll n)
{
    string r;
    while (n != 0){
        r += ( n % 2 == 0 ? "0" : "1" );
        n /= 2;
    }
    reverse(r.begin(),r.end());
    return r;
}




ll INF=1LL<<60;




struct UnionFind{
  vi par,rank,siz,val;
  UnionFind(int n):par(n,-1),rank(n,0),siz(n,1),val(n){
    
  }

  int root(int x){
    if(par[x]==-1) return x;
    else return par[x]=root(par[x]);
  }

  bool issame(int x,int y){
    return root(x)==root(y);
  }

  bool unite(int x,int y){
    int rx=root(x),ry=root(y);
    if(rx==ry) return false;
    if(rx<ry) swap(rx,ry);
    par[ry]=rx;
    if(rank[rx]==rank[ry]) rank[rx]++;
    siz[rx]+=siz[ry];
    return true;
  }

  int size(int x){
    return siz[root(x)];
  }


};

ll modinv(ll a,ll m){
  ll b = m, u = 1, v = 0;
  while(b){
    ll t = a/b;
    a -= t*b; swap(a,b);
    u -= t*v; swap(u,v);
  }
  u %= m;
  if(u<0) u += m;
  return u;
}

ll mod = 998244353;

bool check(int tmp){
  if(1<=tmp && tmp<=6) return true;
  else return false;
}

ll fact[21];

ll ncr(int n,int m){
  return (n<m?0:fact[n]/fact[m]/fact[n-m]);
}


bool check(ll a, ll b, ll n){
  return (double)a+b >= (double)n / (a*a + b*b);
}

ll f(ll a,ll b){
  return a*a*a+a*a*b+a*b*b+b*b*b;
}

int ret_max(string s){
  int ret = 0;
  for(char ch: s){
    chmax(ret,ch-'0');
  }
  return ret;
}

int s(string s){
  int sum = 0;
  for(auto ch: s){
    sum += ch-'0';
  }
  return sum; 
}


bool check(double d){
  if(-1 <= d && d <=1){
    return true;
  }else{
    return false;
  }
}


double get_descent(int i,int j,vpi& vec){
  double x1 = vec[i].first;
  double y1 = vec[i].second;
  double x2 = vec[j].first;
  double y2 = vec[j].second;

  return (y2-y1)/(x2-x1);
}

struct info{
  ll aoki,takahashi,sum;
};

bool comp(info& tmp1,info& tmp2){
  if(tmp1.sum > tmp2.sum){
    return true;
  }else if(tmp1.sum == tmp2.sum){
    if(tmp1.aoki >= tmp2.aoki){
      return true;
    }else{
      return false;
    }
  }else{
    return false;
  }
}

int inv(int a,int M){return a==1?1:(M+(1-(long long)M*inv(M%a,a))/a);}
int gcd(int p,int q){while(q){int t=p%q;p=q;q=t;}return p;}



ll modPow(ll a, ll n, ll mod) { 
  if(mod==1) return 0;
  ll ret = 1; 
  ll p = a % mod; 
  while (n) { 
    if (n & 1) ret = ret * p % mod; 
    p = p * p % mod; 
    n >>= 1; 
  } 
  return ret; 
}

ll power(ll a,ll b){
  ll x=1,y=a;
  while(b>0){
    if(b&1ll){
      x=(x*y)%mod;
    }
    y =(y*y)%mod;
    b >>=1;
  }
  return x%mod;
}

const int MAX_N=100;
bool visited[MAX_N];
int d[MAX_N];

int main(){
  int n; cin >> n;
  vvi G(n);
  rep(i,n){
    int u,k;
    cin >> u >> k;
    u--;
    rep(j,k){
      int v; cin >> v;
      v--;
      G[u].push_back(v);
    }
  }
  rep(i,n) d[i]=-1;
  d[0]=0;
  que_pi que;
  que.push({0,0});
  while(!que.empty()){
    pi p = que.front();
    que.pop();
    int u = p.first;
    int cost = p.second;
    for(int v: G[u]){
      if(!visited[v]){
        visited[v]=true;
        que.push({v,cost+1});
        d[v] = cost+1;
      }
    }
  }
  rep(i,n){
    cout << (i+1) << " " << d[i] << endl;
  }
}
