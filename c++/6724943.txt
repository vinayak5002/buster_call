#include<bits/stdc++.h> 
using namespace std;
const int N = 50005;
const int M = 25;
const int INF= 0x3f3f3f3f;
int dp[M][N];

void knap(int n, int m, int c[]){
 	for(int j = 0; j <= n; j++)
 		dp[0][j] = j; 
    
  	for(int i = 1; i < m; i++){
  		for(int j = 0; j <= n; j++){
 			if(j < c[i])
 				dp[i][j] = dp[i-1][j];
 			else
 				dp[i][j] = min(dp[i-1][j], dp[i][j-c[i]] + 1);
		 } 
	 }
	 
}

//滚动数组 
int t[N]; 
void knap2(int n, int m, int c[]){
 	for(int j = 0; j <= n; j++)
 		t[j] = j; 
    
  	for(int i = 1; i < m; i++){
  		for(int j = c[i]; j <= n; j++){
 	 			t[j] = min(t[j], t[j-c[i]] + 1);
		 } 
	 }
	 
}
int main(){
	int n, m;  //n:支付n元， m:硬币种类 
	int c[M]; //每种硬币的面值 
	cin >> n >> m;
 	for(int i = 0; i < m; i++)
 		cin >> c[i];
 	
	 knap2(n, m, c);
 	cout << t[n] << endl;
 	
	return 0;
}
