#include<stdio.h>
#include<string.h>

#define M 1046527
#define NIL (-1)
#define L 14

char H[M][L];

//文字から数値に変換
int getChar(char ch){
	if ( ch == 'A' ) return 1;
	else if ( ch == 'C' ) return 2;
	else if ( ch == 'G' ) return 3;
	else if ( ch == 'T' ) return 4;
	else return 0;
}

//文字列から数値へ変換してkeyを生成する
long long getKey ( char str[] ) {
	long long sum = 0, p = 1, i;                //long long型→桁数の大きい数字が入れられる
	for ( i = 0; i < strlen(str); i++ ) {       //strlen(str)、つまり文字列の最後まで処理を繰り返す
		sum += p * ( getChar(str[i]) );         //pは文字列を数値に変換するための適当な数字
		p *= 5;                                 //今回は適当に p=p*5 とする
	}
	return sum;
}

int h1(int key){ return key % M; }              //ハッシュ関数の例 h(k)=k mod m を用いる
int h2(int key){ return 1 + ( key % (M-1) ); }  //第二のハッシュ関数の例 h(k)=1＋(k mod m) を用いる
                                                //例えば教科書p.129の場合、さらに 7 mod 7 = 0 を追加すると 8 と衝突してしまう
                                                //そこで第二のハッシュ関数を用いることで衝突を回避する

//find命令について
int find(char str[]){
	long long key, i, h;
	key = getKey(str);                          //入力した文字列を数値に変換
	for ( i = 0;; i++ ){
		h = ( h1(key) + i * h2(key) ) % M;
		if ( strcmp(H[h],str) == 0 ) return 1;  // strcmp(char s1, char s2);→s1とs2の文字列が等しい場合：0
		else if ( strlen(H[h]) == 0 ) return 0; // strlen(char str);→文字列の長さを戻り値に返す (例）ACC→3
	}
	return 0;
}

//insert命令について
int insert(char str[]) {
	long long key, i, h;
	key = getKey(str);
	for ( i = 0;; i++ ){
		h = ( h1(key) + i * h2(key) ) % M;
		if ( strcmp(H[h],str) == 0 ) return 1;
		else if ( strlen(H[h]) == 0 ) {
			strcpy(H[h], str);                 // strcpy(char str1, char str2);→str2の文字列をstr1にコピー
			return 0;
		}
	}
	return 0;
}

int main(void){
	int i, n, h;
	char str[L], com[9];
	for ( i = 0; i < M; i++ ) H[i][0] = '\0';
	scanf("%d",&n);                //命令の数nを入力
	for ( i = 0; i < n; i++ ) {
		scanf("%s %s", com, str);  //より高速な入力 scanf を使用
		
		if ( com[0] == 'i' ) {     //comの配列はinsertかfindのどちらか。com[0]='i'の場合はinsertの命令を実行する
			insert(str);
		}else{
		if ( find(str) ) {
			printf("yes\n");
		}else{
			printf("no\n");
		}
	}
}
	
	return 0;
}
