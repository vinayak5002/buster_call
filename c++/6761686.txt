#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <map>
#include <set>
#include <deque>
#include <queue>
#define TEST cout << "TEST" << endl
#define IINF 2147483647
#define LLINF 9223372036854775807
#define AMARI 998244353
using namespace std;

template <typename _T> class ococo_rmq_segtree { 
public:
    int n;
    vector<_T> value;
    void syokica(int a) {
        n = 1;
        while (n < a)n *= 2;
        value.resize(2 * n - 1);
        for (int i = 0; i < value.size(); i++) {
            value[i] = IINF;
        }
    }

    void update_num(int i, _T x) {
        i += (n - 1);
        value[i] = x;
        while (i) {
            i = (i - 1) / 2;
            value[i] = min(value[i * 2 + 1], value[i * 2 + 2]);
        }
    }

    //a:最下段の左 b:最下段の右 k:今見ている添え字 l:kの左端 r:kの右端
    _T get_minimum2(int a, int b, int k,int l, int r) {
        //cout << k << endl;
        if (a <= l && r <= b)return value[k];
        else if (r <= a || b <= l)return IINF;
        else return min(get_minimum2(a, b, k * 2 + 1, l, (l + r) / 2), get_minimum2(a, b, k * 2 + 2, (l + r) / 2,r));
    }
    _T get_minimum(int l, int r) {
        return get_minimum2(l, r, 0, 0,n);
    }
};

int main(void) {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    int n, q;
    cin >> n >> q;
    ococo_rmq_segtree<int> ors;
    ors.syokica(n);
    while (q--) {
        /*
        cout << endl << endl;
        for (int i = 0; i < ors.value.size(); i++) {
            cout << ors.value[i] << ' ';
            if (i == 0 || i == 2 || i == 6)cout << endl;
        }
        cout << endl << endl;
       */

        int a, b, c;
        cin >> a >> b >> c;
        if (a == 0)ors.update_num(b, c);
        else cout << ors.get_minimum(b, c + 1) << endl;
    }
    return 0;
}
