#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define _overload(_1, _2, _3, name, ...) name
#define rep1(n) rep3(____, 0, n)
#define rep2(i, n) rep3(i, 0, n)
#define rep3(i, a, b) for (int i=(a); i<(b); i++)
#define rep(...) _overload(__VA_ARGS__, rep3, rep2, rep1)(__VA_ARGS__)
typedef vector<vector<int>> Graph;

const int INFI = 1 << 30;
const ll INFL = 1LL << 60;
// const ll MOD = 1000000007; // 1e9 + 7
// const ll MOD = 998244353;
const int N = 1000000;

int main() {
    vector<int> prime(0);
    vector<bool> is_prime(N, true);
    rep(p, 2, N) {
        if (!is_prime[p]) continue;
        for (int k=2*p; k<N; k+=p) is_prime[k] = false;
        prime.push_back(p);
    }

    int n;
    while (cin >> n) {
        auto itr = upper_bound(prime.begin(), prime.end(), n);
        int index = itr - prime.begin();
        cout << index << endl;
    }
    return 0;
}
