#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < n; ++i)
typedef long long ll;
using namespace std;
const int dx[8] = {1, 1, 0, -1, -1, -1, 0, 1};
const int dy[8] = {0, 1, 1, 1, 0, -1, -1, -1};

void solve(int N) {
    vector<string> S(N);
    rep(i, N) cin >> S[i];

    int ans = 0;
    rep(i, N) rep(j, N) {
        if (S[i][j] == '0') continue;

        rep(k, 8) {
            int cur = 0;
            rep(l, N) {
                int ny = i + dy[k] * l;
                int nx = j + dx[k] * l;
                if (ny < 0 || ny >= N || nx < 0 || nx >= N) break;
                if (S[ny][nx] == '0') break;
                cur++;
            }
            ans = max(ans, cur);
        }
    }
    cout << ans << "\n";
}

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    int N;
    while (cin >> N, N)
        solve(N);

    return 0;
}

