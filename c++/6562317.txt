#include <bits/stdc++.h>

//#include <atcoder/all>
#define rep(i, n) for (int i = 0; i < (n); i++)
#define all(a) (a).begin(), (a).end()
using namespace std;
//using namespace atcoder;
typedef long long ll;
typedef pair<int, int> P;
typedef pair<ll, ll> Pll;
typedef tuple<ll, ll, ll> Tll;
template <typename T>
using min_priority_queue = priority_queue<T, vector<T>, greater<T>>;
const double PI = 3.14159265358979323846;
int ddx[] = {1, -1, 0, 0, 1, 1, -1, -1};
int ddy[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dx[] = {1, 0, -1, 0};
int dy[] = {0, 1, 0, -1};

void cans(bool f) {
    if (f)
        cout << "Yes" << endl;
    else
        cout << "No" << endl;
}

template <typename T>
T gcd(T a, T b) {
    if (b == 0)
        return a;
    else
        return gcd(b, a % b);
}

bool compare1(pair<ll, ll> a, pair<ll, ll> b) { return a.first < b.first; }
bool compare2(pair<ll, ll> a, pair<ll, ll> b) { return a.second < b.second; }

long long modpow(long long a, long long n, long long mod = 998244353) {
    long long res = 1;
    while (n > 0) {
        if (n & 1) res = res * a % mod;
        a = a * a % mod;
        n >>= 1;
    }
    return res;
}

template <typename T>
bool chmax(T& a, const T& b) {
    if (a < b) {
        a = b;  // aをbで更新
        return true;
    }
    return false;
}
template <typename T>
bool chmin(T& a, const T& b) {
    if (a > b) {
        a = b;  // aをbで更新
        return true;
    }
    return false;
}

//using mint = modint;

vector<vector<ll>> dp;
ll INF = 1e18;

int main() {
    ll V, E;
    cin >> V >> E;
    dp.resize(V, vector<ll>(V, INF));
    rep(i, V) dp[i][i] = 0;
    rep(i, E) {
        ll s, t, d;
        cin >> s >> t >> d;
        dp[s][t] = d;
    }
    rep(k, V) {
        rep(i, V) {
            rep(j, V) { chmin(dp[i][j], dp[i][k] + dp[k][j]); }
        }
    }
    rep(i, V) {
        if (dp[i][i] < 0) {
            cout << "NEGATIVE CYCLE" << endl;
            return 0;
        }
    }
    rep(i, V) {
        rep(j, V) {
            if (dp[i][j] == INF) {
                cout << "INF";
            } else {
                cout << dp[i][j];
            }
            if (j != V - 1) {
                cout << " ";
            }
        }
        cout << endl;
    }
}

