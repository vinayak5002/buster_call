#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>
#include <map>
using namespace std;
struct edge{
    edge(){}
    edge(int x,int y,int z){
        s=x;
        t=y;
        w=z;
    }
    int s;
    int t;
    int w;
    bool judge=0;
};
int main(){
    int n,m,s,t,w,sum=0;
    cin>>n>>m;
    vector<vector<edge>> connect(n+1);
    multimap<int,edge> heap;
    for(int i=0;i<m;++i){
        cin>>s>>t>>w;
        connect[s].push_back(edge(s,t,w));
        connect[t].push_back(edge(s,t,w));
    }
    bool flag[n+1]={};
    int nextv=s;
    flag[nextv]=1;
    for(int i=1;i<n;++i){
        for(edge x:connect[nextv]){
            if(flag[x.t]+flag[x.s]==1){
                heap.insert(make_pair(x.w,x));
            }
        }
        sum+=begin(heap)->second.w;
        if(begin(heap)->second.s){
            nextv=begin(heap)->second.t;
            flag[nextv]=1;
        }else{
            nextv=begin(heap)->second.s;
            flag[nextv]=1;
        }
        heap.erase(begin(heap));

    }
    cout<<sum<<endl;
}
