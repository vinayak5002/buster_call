#include<bits/stdc++.h>

using namespace std;

std::vector<int> nodes;
std::vector<int> lev;
int n,q;

void makeSet(int x){
    for(int i=0;i<n+1;i++){
        nodes.push_back(i);
        lev.push_back(0);
    }
}
int findSet(int x){
    if (x != nodes[x]) nodes[x] = findSet(nodes[x]);
    return nodes[x];
}

void link(int x,int y){
    if(lev[x] > lev[y]) nodes[y] = x;
    else{
        nodes[x] = y;
        if (lev[x] == lev[y]) lev[y] += 1;
    }
}
void unions(int x,int y){
    link(findSet(x),findSet(y));
}

int main(){

    int com,x,y;
    cin >> n >> q;

    makeSet(n);

    for(int i=0;i<q;i++){
        cin >> com >> x >> y;

        if(com==0) unions(x,y);
        else {
            if(findSet(x) == findSet(y)) cout << 1 << endl;
            else cout << 0 << endl;
        }
    }


}

//5 12 
// 0 1 4 
// 0 2 3 
// 1 1 2 
// 1 3 4 
// 1 14  
// 1 3 2 
// 0 1 3 
// 1 2 4 
// 1 3 0 
// 0 0 4 
// 1 0 2 
// 1 3 0
