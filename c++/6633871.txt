#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include <tuple>
#include <map>
#include <set>
#include <cmath>
#include <bitset>
#include <queue>

using namespace std;

const long long INF = 1LL << 60;
const int INT_INF = 2e9;


template<class T> inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template<class T> inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}

int main(){
    int H, W;
    cin >> H >> W;

    vector<string> map(H);

    for(int ii1=0; ii1<H; ii1++){
        cin >> map[ii1];
    }

    int dy[4] = {0, -1, 0, 1};
    int dx[4] = {1, 0, -1, 0};

    vector<vector<int>> dist(H, vector<int>(W, -1));
    dist[0][0] = 0;

    vector<pair<int, int>> queue;
    queue.push_back(make_pair(0, 0));

    while(!queue.empty()){
        pair<int, int> p;
        p = queue.front();
        queue.erase(queue.begin());

        for(int ii1=0; ii1<4; ii1++){
            int ny = p.first + dy[ii1];
            int nx = p.second + dx[ii1];

            if(ny < 0 || ny >= H || nx < 0 || nx >= W) continue;
            if(map[ny][nx] == '#') continue;
            if(dist[ny][nx] != -1) continue;

            dist[ny][nx] = dist[p.first][p.second] + 1;
            queue.push_back(make_pair(ny, nx));
        }
    }

    int ans = 0;
    for(int ii1=0; ii1<H; ii1++){
        for(int ii2=0; ii2<W; ii2++){
            if(map[ii1][ii2] == '.') ans++;
        }
    }

    if(dist[H-1][W-1] == -1) ans = -1;
    else ans -= dist[H-1][W-1]+1;

    cout << ans << endl;
    return 0;

}
