#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=1167167167167167167;
const int INF=1050000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	solve();
}

void solve(){
	int N,M;
	cin>>M>>N;
	vector<vector<ld>> dp(N,vector<ld>(1<<M));
	vector<vector<ld>> pro(M,vector<ld>(N));
	rep(i,M) rep(j,N) cin>>pro[i][j];
	rep(j,(1<<M)){
		if(j==0) continue;
		rep(i,N){
			rep(k,M){
				if(((1<<k)&j)==0) continue;
				ld tmp=0;
				ld r=1;
				int ne=((1<<k)^j);
				for(int l=i;l<N;l++){
					tmp+=dp[l][ne]*r*(1-pro[k][l]);
					r*=pro[k][l];
				}
				chmax(dp[i][j],tmp+r);
			}
		}
	}
	/*rep(i,N){
		vec_out(dp[i]);
	}*/
	cout<<setprecision(18)<<dp[0][(1<<M)-1]<<"\n";
}

