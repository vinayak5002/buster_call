#include<stdio.h>
int Max(int a, int b)
{
	if (a > b)
		return a;
	else
		return b;
}
int dp[3][400][400];
int main()
{
	int n;
	int a[1003], b[1003], w[1003];
	int i, j, k;
	int max = 365;
	int ans;
	for (;;)
	{
		scanf("%d", &n);
		if (n == 0)
			break;
		for (i = 0; i < n; i++)
			scanf("%d %d %d", &a[i], &b[i], &w[i]);
		for (i = 0; i < n - 1; i++)
		{
			if (b[i] > b[i + 1])
			{
				a[i] ^= a[i + 1];
				a[i + 1] ^= a[i];
				a[i] ^= a[i + 1];
				b[i] ^= b[i + 1];
				b[i + 1] ^= b[i];
				b[i] ^= b[i + 1];
				w[i] ^= w[i + 1];
				w[i + 1] ^= w[i];
				w[i] ^= w[i + 1];
				if (i > 0)
					i -= 2;
			}
		}
		for (k = 0; k < 3; k++)
			for (i = 0; i <= max; i++)
				for (j = 0; j <= max; j++)
					dp[k][i][j] = 0;
		for (k = 0; k < n; k++)
		{
			for (i = max; i >= 0; i--)
			{
				for (j = max; j >= 0; j--)
				{
					dp[1][i][j] = dp[2][i][j] = dp[0][i][j];
					if (i < a[k])
						dp[1][b[k]][j] = Max(dp[1][b[k]][j], dp[1][i][j] + w[k]);
					if (j < a[k])
						dp[2][i][b[k]] = Max(dp[2][i][b[k]], dp[2][i][j] + w[k]);
				}
			}
			for (i = 0; i < max; i++)
				for (j = 0; j < max; j++)
					dp[0][i][j] = Max(dp[1][i][j], dp[2][i][j]);
		}
		ans = 0;
		for (i = 0; i <= max; i++)
			for (j = 0; j <= max; j++)
				ans = Max(ans, dp[0][i][j]);
		printf("%d\n", ans);
	}
	return 0;
}
