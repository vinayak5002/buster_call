#include <bits/stdc++.h>
using namespace std;

#ifdef _RUTHEN
#include "debug.hpp"
#else
#define show(...) true
#endif

using ll = long long;
#define rep(i, n) for (int i = 0; i < (n); i++)
template <class T> using V = vector<T>;

void solve(int N) {
    const int S = 1 << 16;
    V<ll> dp(S, 0);
    rep(i, N) {
        V<ll> np = dp;
        int M, L;
        cin >> M >> L;
        int b = 0;
        rep(j, M) {
            int s, e;
            cin >> s >> e;
            for (int k = s; k < e; k++) b |= (1 << (k - 6));
        }
        rep(s, S) {
            if (s & b) continue;
            np[s | b] = max(np[s | b], dp[s] + L);
        }
        dp = np;
    }
    cout << (*max_element(dp.begin(), dp.end())) << '\n';
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int N;
    while (cin >> N, N != 0) solve(N);
    return 0;
}
