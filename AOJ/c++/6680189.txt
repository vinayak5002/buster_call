#include<bits/stdc++.h>
using namespace std;
struct V{
    double x,y;
    V(double _x=0,double _y=0){x=_x,y=_y;}
    int len(){return x*x+y*y;}
};
double operator ^ (V a,V b){return a.x*b.y-a.y*b.x;}
V operator + (V a,V b){return V(a.x+b.x,a.y+b.y);}
V operator - (V a,V b){return V(a.x-b.x,a.y-b.y);}
const int N=1e5+5;
V a[N],b[N];
int n,top;
bool cmp(V a,V b){return ((a^b)>0) || ((a^b)==0 && a.len()<b.len());}
int sign(double x){return x<0?-1:1;}
int main(){
    scanf("%d",&n);
    int id=1;
    for (int i=1;i<=n;++i){
        scanf("%lf%lf",&a[i].x,&a[i].y);
        if ((a[i].y<a[id].y) || (a[i].y==a[id].y && a[i].x<a[id].x)) id=i;
    }
    V t=a[id];
    for (int i=1;i<=n;++i) a[i]=a[i]-t;
    sort(a+1,a+1+n,cmp);
    b[top=1]=a[1];
    for (int i=2;i<=n;++i){
        while (top>=2 && ((b[top]-a[i])^(b[top-1]-a[i]))>=0) --top;
        b[++top]=a[i];
    }
    int ans=0;
    for (int i=1,j=1;i<=top;++i){
        V tmp=b[i==top?1:i+1]-b[i];
        while (sign((b[j==top?1:j+1]-b[j])^tmp)*sign((b[j==1?top:j-1]-b[j])^tmp)==-1) j=(j==n?1:j+1);
        ans=max(ans,(b[j]-b[i]).len());
        ans=max(ans,(b[j]-b[i==top?1:i+1]).len());
        ans=max(ans,(b[j==top?1:j+1]-b[i]).len());
        ans=max(ans,(b[j==top?1:j+1]-b[i==top?1:i+1]).len());
    }
    printf("%d\n",ans);
    return 0;
}
