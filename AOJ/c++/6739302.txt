#include<iostream>
#include<vector>

void makeSet(int);
void Union(int,int);
void link(int,int);
int findSet(int);

std::vector<int> rank(10000),p(10000);

int main(){
    int n,q,com;
    std::cin>>n>>q;
    for(int i=0;i<q;i++){
        makeSet(i);
    }

    for(int i=0;i<q;i++){
        std::cin>>com;
        if(com==0){
            int id1,id2;
            std::cin>>id1>>id2;
            Union(id1,id2);
        }
        else{
            int id1,id2;
            std::cin>>id1>>id2;
            if(findSet(id1)==findSet(id2)){
                std::cout<<"1"<<std::endl;
            }
            else{
                std::cout<<"0"<<std::endl;
            }
        }

    }
    return 0;
}

void makeSet(int x){
    p[x]=x;
    rank[x]=0;
}

void Union(int x,int y){
    link(findSet(x),findSet(y));
}

void link(int x,int y){
    if(rank[x]> rank[y]){
        p[y]=x;
    }
    else{
        p[x] = y;
        if(rank[x]==rank[y]){
            rank[y] = rank[y] + 1;
        }
    }
}

int findSet(int x){
    if (x != p[x]){
        p[x]= findSet(p[x]);
    }
    return p[x];
}
