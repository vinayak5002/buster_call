#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#define LEN 100005
#define MAX 100005

typedef struct pp{
  char name[100];
  int t;
}P;

P Q[LEN+1];
int head, tail, n;

void initialize(){
  head = tail = 0;
}
bool isEmpty(){
  return head == tail;
}
bool isFull(){
  return head == (tail + 1) % MAX;
}

void enqueue(P x){
  if(isFull()){
    printf("error");
    exit(EXIT_FAILURE);
  }
  Q[tail] = x;
  if(tail + 1 == MAX){
    tail = 0;
  }
  else {tail++;}
}

P dequeue(){
if(isEmpty()){
  printf("error");
  exit(EXIT_FAILURE);
}
P x = Q[head];
if(head + 1 == MAX){ head = 0;}
else {head++;}
return x;
}


int main(){
  int elaps = 0, c;
  int i, q;
  P u;
  scanf("%d %d", &n, &q);

  for ( i = 1; i <= n; i++){
    scanf("%s", Q[i].name);
    scanf("%d", &Q[i].t);
  }
  head = 1; tail = n+1;

  while(tail != head){
    if(Q[head].t <= q){
      elaps = elaps + Q[head].t;
      u = dequeue();
      printf("%s %d\n", u.name, elaps);
    }
    else{
      Q[head].t = Q[head].t - q;
      elaps += q;
      enqueue(dequeue());
    }
  }  
  return 0;
}
