#include<iostream>
#include<vector>
#include<queue>
using namespace std;
using ll = long long;
struct Edge {
	int to;
	ll cost;
	Edge(){};
	Edge(int to,ll cost): to(to),cost(cost){};
};
int main() {
	int V,E,r;
	cin >> V >> E >> r;
	vector<vector<Edge>> G(V);
	for (int i = 0; i < E; i++) {
		int s,t;
		ll w;
		cin >> s >> t >> w;
		G[s].push_back(Edge(t,w));
	}
	priority_queue<pair<ll,int>,vector<pair<ll,int>>,greater<pair<ll,int>>> pq;
	vector<ll> dist(V,1e18);
	pq.push({0,r});
	dist[r] = 0;
	while (!pq.empty()) {
		auto [a,b] = pq.top();
		pq.pop();
		for (auto i : G[b]) {
			if (a+i.cost < dist[i.to]) {
				pq.push({a+i.cost,i.to});
				dist[i.to] = a+i.cost;
			}
		}
	}
	for (ll i : dist) {
		if (i == 1e18) {
			cout << "INF" << endl;
		} else {
			cout << i << endl;
		}
	}
	return 0;
}

