#include <bits/stdc++.h>
using namespace std;
const int MAXN = 600;
int a[MAXN];
int lf (int x) { 
	return (x * 2);
}
int rg (int x) {
	return (x * 2 + 1);
}
int pa (int x) {
	return floor(x / 2);
}
bool pdl (int x, int n) {
	if ( (x * 2) <= n ) {
		return 1;
	}
	else {
		return 0;
	}
}
bool pdr (int x, int n){
	if ( (x * 2 + 1) <= n ) {
		return 1;
	}
	else {
		return 0;
	}
}
int main() {
	//freopen(".in","r",stdin);
	//freopen(".out","w",stdout);
	int n;
	cin >> n;
	for ( int i = 1; i <= n; i++ ) {
		cin >> a[i];
	}
	for (int i = 1; i <= n; i ++) {
        cout << "node " << i << ": key = " << a[i];
        if ( i == 1) {
			cout << ",";
		}
        if ( i != 1 ) {
        	cout << ", parent key = " << a[pa(i)] << ",";
		}
		if ( pdl(i,n) ) {
			cout << " left key = " << a[lf(i)] << ",";
		}
		if ( pdr(i,n) ) {
			cout << " right key = " << a[rg(i)] << ",";
		}
		cout << endl;
	}
	return 0;
}
/*
5
7 8 1 2 3
*/

