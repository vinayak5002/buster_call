#include <stdio.h>
#include <string.h> 

#define MAX_TEXT 1000000
#define MAX_PATTERN 1000

void makeTable(int *table,char *pattern,int pattern_len) {
	int i,pos;
	
    for(i=0;i<256;i++)
        table[i]=pattern_len;

    for(pos=0;pos<pattern_len;pos++)
        table[pattern[pos]]=pattern_len-1-pos;
}

int bmSearch(char *text,int text_len,char *pattern,int pattern_len){
    int text_pos; 
    int pattern_pos; 
    int table[256];

    makeTable(table,pattern,pattern_len);

    pattern_pos=pattern_len-1;
    text_pos=pattern_len-1;

    while(text_pos<text_len){
    	
        if(text[text_pos]==pattern[pattern_pos]){
            if(pattern_pos==0)
                return text_pos;
            
            text_pos--;
            pattern_pos--;
        }
		else{
            if(table[text[text_pos]]>pattern_len-1-pattern_pos)
                text_pos+=table[text[text_pos]];
            else
                text_pos+=pattern_len-pattern_pos;
            
            pattern_pos=pattern_len-1;
        }
    }

    return -1;
}

int main(void){
	int number,find;
	int i;
    char text[MAX_TEXT];
    char pattern[MAX_PATTERN];
    
	scanf("%s",text);
	scanf("%d",&number);
	
	for(i=0;i<number;i++){
		scanf("%s",pattern);
	
    	find=bmSearch(text,strlen(text),pattern,strlen(pattern));
    
    	if(find!=-1)
        	printf("1\n");
		else 
        	printf("0\n");
    }

    return 0;
}
