#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

#define rep(i, n) for(int i = 0; i < (int)n; i++)
#define repp(i, m, n) for(int i = (int)m; i < (int)n; i++)

#define ALL(x) x.begin(),x.end()

#define YESNO(bool) if(bool){cout<<"YES"<<endl;}else{cout<<"NO"<<endl;}
#define yesno(bool) if(bool){cout<<"yes"<<endl;}else{cout<<"no"<<endl;}
#define YesNo(bool) if(bool){cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}
#define keta(x) cout << std::fixed << std::setprecision(15) << (double)x << endl;

vector<ll> mt, mt_prime;

void make_mt(){
    for(ll i = 2; i <= 300000; i++){
        if((i%7==1 || i%7==6)) mt.push_back(i);
    }
    for(int p = 0; p < mt.size(); p++){
        bool ok = true;
        int j = 0;
        while(mt[j]*mt[j] <= mt[p]){
            if(mt[p]%mt[j] == 0) ok = false;
            j++;
        }
        if(ok) mt_prime.push_back(mt[p]);
    }
}

void solve(ll n){
    int i = 0;
    vector<ll> ans;
    for(auto p : mt_prime){
        if(n%p == 0) ans.push_back(p);
    }
    cout << n << ": ";
    rep(i, ans.size()-1) cout << ans[i] << " ";
    cout << ans[ans.size()-1] << endl;
}

int main(){
    make_mt();
    while(1){
        ll n;
        cin >> n;
        if(n == 1) break;
        solve(n);
    }
}
