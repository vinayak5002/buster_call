#include <iostream>

using namespace std;

int bsort(int A[], int n)
{
  int cnt = 0;
  for (int i = 0; i < n; i++)
    for (int j = n - 1; j > i; j--)
      if (A[j] < A[j-1]) {
	swap(A[j], A[j - 1]);
	cnt++;
      }
    
  return cnt;
}

void cp_array(int *to, int *from, int n)
{
  for (int i = 0; i < n; i++)
    to[i] = from[i];
}

void pr_array(int A[], int n)
{
  for (int i = 0; i < n - 1; i++) 
    cout << A[i] << ' ';
  cout << A[n - 1] << endl;
}

// A1 と A2 はともに昇順に並べらた数列
// これらを統合して昇順に整列させて数列 A をつくる。
// A2 の元 < A1 の元 となっていたペアの総数を返す。
int merge(int A[], int A1[], int A2[], int n1, int n2)
{
  int cnt = 0;
  int i1 = 0;
  int i2 = 0;
  while (i1 < n1 || i2 < n2) {
    if (A2[i2] < A1[i1]) {
      cnt += n1 - i1;
      A[i1 + i2] = A2[i2];
      i2++;
    } else {
      A[i1 + i2] = A1[i1];
      i1++;
    }
  }
  if (i2 == n2) {        // A2 の元はすべて定位置においた
    for (; i1 < n1; i1++) {
      cnt += n2;         // A1[i1] は A2 の元のすべてより大きかった
      A[i1 + i2] = A1[i1];
    }
  } else {
    for (; i2 < n2; i2++) {
      A[i1 + i2] = A2[i2];
    }
  }
  return cnt;
}
  
int cnt_inv(int A[], int n)
{
  if (n == 1)
    return 0;

  int cnt = 0;
  int n1 = n/2;
  int n2 = n - n1;
  
  int A1[n1];
  cp_array(A1, A, n1);
  cnt += bsort(A1, n1);
  
  int A2[n2];
  cp_array(A2, A + n1, n2);
  cnt += bsort(A2, n2);
  
  cnt += merge(A, A1, A2, n1, n2);
  return cnt;
}

int main()
{
  int n;
  cin >> n;
  int A[n];
  for (int i = 0; i < n; i++)
    cin >> A[i];

  cout << cnt_inv(A, n) << endl;
  return 0;
}

