#include <bits/stdc++.h>
using namespace std;
using ll=long long;
using ld=long double;
ll inf=999999999999999;
int main(){
    vector<ll>ans;
    while (1)
    {
        ll n,m;
        cin >> n >> m;
        if (n==0&&m==0)
        {
            break;
        }
        vector<ll>a(n),w(m);
        for (ll i = 0; i < n; i++)
        {
            cin >> a[i];
        }
        for (ll i = 0; i < m; i++)
        {
            cin >> w[i];
        }
        vector<ll>b;
        b.push_back(w[0]);
        b.push_back(w[0]*(-1));
        b.push_back(0);
        for (ll i = 1; i < m; i++)
        {
            ll x=b.size();
            for (ll j = 0; j < x; j++)
            {
                if (1)
                {
                    b.push_back(w[i]+b[j]);
                }
                if (1)
                {
                    b.push_back(b[j]-w[i]);
                }
            }
        }
        sort(b.begin(),b.end());
        map<ll,ll>memo;
        ll x=n;
        vector<ll>c;
        for (ll i = 0; i < n; i++)
        {
            if (a[i]<=b[b.size()-1])
            {
                ll v=lower_bound(b.begin(),b.end(),a[i])-b.begin();
                if (b[v]==a[i])
                {
                    x-=1;
                    continue;
                }
            }
            if (a[i]>=b[0])
            {
                ll v=lower_bound(b.begin(),b.end(),-a[i])-b.begin();
                if (b[v]==-a[i])
                {
                    x-=1;
                    continue;
                }
            }
            
            map<ll,ll>memo2;
            for (ll j = 0; j < b.size(); j++)
            {
                if (memo2[abs(a[i]-b[j])]>=1)
                {
                    continue;
                }
                memo[abs(a[i]-b[j])]+=1;
                memo2[abs(a[i]-b[j])]+=1;
                if (memo[abs(a[i]-b[j])]==1)
                {
                    c.push_back(abs(a[i]-b[j]));
                }
            }
        }
        ll y=inf;
        if (x==0)
        {
            ans.push_back(0);
            continue;
        }
        for (ll i = 0; i < c.size(); i++)
        {
            if (memo[c[i]]==x&&y>c[i])
            {
                y=abs(c[i]);
            }
        }
        if (y==inf)
        {
            ans.push_back(-1);
            continue;
        }
        ans.push_back(y);
    }
    for (ll i = 0; i < ans.size(); i++)
    {
        cout << ans[i] << endl;
    }
    
}
