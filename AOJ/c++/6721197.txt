#include <bits/stdc++.h>
using namespace std;
int N;
void kaiten(vector<string> &row, int q) {
    vector<string> temp_row(N);
    for (int i = 0; i < N; i++)
        temp_row[i] = row[i];
    if (q == 1)
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                row[j][N - 1 - i] = temp_row[i][j];
            }
        }
    if (q == -1)
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                row[N - 1 - j][i] = temp_row[i][j];
            }
        }
}
int main() {
    cin >> N;
    vector<string> row(N);
    for (int i = 0; i < N; i++) {
        cin >> row[i];
    }
    int Q;
    cin >> Q;
    int right_cnt = 0;
    int left_cnt = 0;
    for (int i = 0; i < Q; i++) {
        int r;
        cin >> r;
        if (r == 1)
            right_cnt++;
        else
            left_cnt++;
    }
    for (int i = 0; i < (right_cnt % 4); i++)
        kaiten(row, 1);
    for (int i = 0; i < (left_cnt % 4); i++)
        kaiten(row, -1);
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            cout << row[i][j];
        cout << endl;
    }
}
