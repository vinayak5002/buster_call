#include <bits/stdc++.h>
#define int long long
using namespace std;

void solve() {
  int n; cin >> n;
  if (n == 0) exit(0);
  vector<int> l(n), h(n);
  for (int i = 0; i < n; i++) cin >> l[i] >> h[i];

  vector<unordered_map<int, int>> dp(2);
  dp[0][1] = 1;
  int ans = 0;
  for (int i = 0; i < 2 * n + 1; i++) {
    for (const auto& p : dp[0]) {
      const int S = p.first;
      if (S >> (4 * n) & 1) ans += p.second;
      for (int x = 0; x < 10; x++) {
        int T = 0;
        for (int j = 0; j < 25; j++) {
          int k = j / 4;
          if ((S >> j & 1) == 0 || k >= n) continue;
          if (j % 4 == 0) {
            // k個目はじめから
            if (l[k] <= x && x <= h[k]) T |= 1 << (j + 4);
            if (x == 0) continue;
            if (l[k] / 10 == x) {
              T |= 1 << (j + 1);
            } else if (h[k] / 10 == x) {
              T |= 1 << (j + 3);
            } else if (l[k] / 10 < x && x < h[k] / 10) {
              T |= 1 << (j + 2);
            }
          } else if (j % 4 == 1) {
            // k個目10の位最小を使った
            int up = l[k] / 10 == h[k] / 10 ? h[k] % 10 : 9;
            if (l[k] % 10 <= x && x <= up) T |= 1 << (j + 3);
          } else if (j % 4 == 2) {
            // k個目10の位真ん中を使った
            T |= 1 << (j + 2);
          } else {
            // k個目10の位最大を使った
            if (x <= h[k] % 10) T |= 1 << (j + 1);
          }
        }
        dp[1][T] += p.second;
      }
    }
    swap(dp[0], dp[1]);
    dp[1].clear();
  }
  cout << ans << endl;
}
signed main() {
  while (1) solve();
}
