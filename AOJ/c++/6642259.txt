#include <iostream>
#include <cstdio>  // 包含scanf等(速度更快)
#include <algorithm>
#include <cmath>                                                             
#include <vector>
using namespace std;

long long cnt;  // count
int A[1000000];
int n;
vector<int> G;

// 指定了间隔为g的插入排序
void insertSort(int A[], int n, int g) {
    for (int i = g; i < n; ++i) {
        int k = A[i];
        int v = i - g;
        while (v >= 0 && A[v] > k) {
            A[v + g] = A[v];
            v -= g;
            ++cnt;
        }
        A[v + g] = k;
    }
}

void shellSort(int A[], int n) {
    for (int i = 1; ; ) {
        if (i > n) break;
        G.push_back(i);
        i = 3 * i + 1;  // 产生一个an+1 = 3 * an + 1 的数组，作为间隔g
    }
    for (int j = G.size() - 1; j >= 0; --j) {
        insertSort(A, n, G[j]);
    }
}

int main()
{
    cin >> n;
    for (int s = 0; s < n; ++s) scanf("%d", &A[s]);
    cnt = 0;

    shellSort(A, n);

    cout << G.size() << endl;
    for (int j = G.size() - 1; j <= 0; ++j) {
        printf("%d", G[j]);
        if (j) printf(" ");
    }
    printf("\n");
    printf("%lld\n", cnt);
    for (int q = 0; q < n; ++q)
        printf("%d\n", A[q]);

    return 0;
}
