#include <iostream>
using namespace std;

#define MAX_n 100000

int n;
int W[MAX_n];

int P2k(int P)
{
    int k = 0;
    int w = 0;
    // 最後から２番めまでの２持つの処理
    for (int i = 0; i < n - 1; i++) {
	if (w + W[i] > P) {
	    ++k;            // k 番目のトラックへの積載終了
	    w = W[i];       // 残った積荷
	} else {
	    w += W[i];
	}
    }
    // 一番最後の積荷の処理
    if (w + W[n-1] <= P)
	k += 1;
    else
	k += 2;
	
    return k;
}

int k2P(int k, int minP)
{
    for (int i = minP; ; i++)
	if (P2k(i) <= k)
	    return i;
}
	
int main()
{
    int k;
    int minP = 1;
    cin >> n >> k;
    for (int i = 0; i < n; i++) {
	cin >> W[i];
	if (W[i] > minP)
	    minP = W[i];
    }

    cout << k2P(k, minP) << endl;

    return 0;
}

