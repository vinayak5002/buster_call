#include<iostream>
#include<string.h>
#include<algorithm>
using namespace std;
struct s{
	int id,l,r;
}Tree[30];

void Preorder(int node){
	if(node==-1)return;
	cout<<node<<" ";
	Preorder(Tree[node].l);
	Preorder(Tree[node].r);
}
void Postorder(int node){
	if(node==-1)return;
	Postorder(Tree[node].l);
	Postorder(Tree[node].r);
	cout<<node<<" ";
}

void Inorder(int node){
	if(node==-1)return;
	Inorder(Tree[node].l);
	cout<<node<<" ";
	Inorder(Tree[node].r);
}


int main(){
	int n;
	cin>>n;
	for(int i=0;i<n;i++)
		Tree[i].id=-1;
		
	int id,l,r;
	for(int i=0;i<n;i++){
		cin>>id>>l>>r;
		Tree[id].l=l;
		Tree[id].r=r; 
		if(l!=-1)Tree[l].id=l;
		if(r!=-1)Tree[r].id=r;
	}
	int node=0;
	for(int i=0;i<n;i++){
		if(Tree[i].id==-1){
			node=i;
			break;
		}
	}
	Preorder(node);
	cout<<endl;
	Inorder(node);
	cout<<endl;
	Postorder(node);
	cout<<endl;
	return 0;
}
