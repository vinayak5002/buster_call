#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

#include <bits/stdc++.h>

#define _overload(_1, _2, _3, _4, name, ...) name
#define _rep1(Itr, N) _rep3(Itr, 0, N, 1)
#define _rep2(Itr, a, b) _rep3(Itr, a, b, 1)
#define _rep3(Itr, a, b, step) for (i64 Itr = a; Itr < b; Itr += step)
#define repeat(...) _overload(__VA_ARGS__, _rep3, _rep2, _rep1)(__VA_ARGS__)
#define rep(...) repeat(__VA_ARGS__)

#define ALL(X) begin(X), end(X)

using namespace std;
using i64 = int64_t;
using u64 = uint64_t;

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);

  i64 n, p;
  while (cin >> n >> p, n > 0) {
    vector<i64> stone(n);
    i64 zcnt = n;
    i64 i = n - 1;
    do {
      i = (i + 1) % n;

      if (p == 0) {
        p = stone[i];
        if (stone[i] > 0) {
          stone[i] = 0;
          zcnt++;
        }
      } else {
        stone[i] += 1;
        p--;
        if (stone[i] == 1) {
          zcnt--;
        }
      }

      /*
        cout << p << endl;
        cout << zcnt << endl;
        rep(i, n) { cout << stone[i] << ' '; }
        cout << endl;
        */
    } while (zcnt != n - 1 || p != 0);

    cout << i << endl;
  }

  return 0;
}
