#include <bits/stdc++.h>

using namespace std;
#define ll long long
auto chmax = [](auto& a, auto b) {bool ret=a<b; if(ret)a=b; return ret; };
auto chmin = [](auto& a, auto b) {bool ret=a>b; if(ret)a=b; return ret; };

struct Solver {
    int score(int l, int r, vector<int>& W) {
        return abs(W[l] - W[r]) <= 1 ? 2 : 0;
    }
    void solve(int N) {
        vector<int> W(N);
        for(int i=0; i<N; i++) cin >> W[i];
        vector<vector<int>> dp(N, vector<int>(N));
        for (int w = 1; w < N; w++) {
            for (int l = 0; l < N; l++) {
                int r = l + w;
                if (r >= N) break;
                for (int k = l; k + 1 <= r; k++) chmax(dp[l][r], dp[l][k] + dp[k + 1][r]);

                if (l + 1 == r)
                    chmax(dp[l][r], score(l, r, W));
                else if (l + 1 < r - 1 && dp[l + 1][r - 1] == (r-1) - (l+1) + 1)
                    chmax(dp[l][r], dp[l + 1][r - 1] + score(l, r, W));
            }
        }
        cout << dp[0][N - 1] << endl;
    };
};

int main() {
    std::cin.tie(nullptr);
    while (true) {
        int N;
        cin >> N;
        if(N==0)break;
        Solver solver;
        solver.solve(N)
    }
    return 0;
}


