#include <iostream>
#include <algorithm>
#include <cmath>
#include <numeric>
#include <iomanip>
#include <string>
#include <regex>
#include <array>
#include <vector>
#include <map>
#include <set>
#include <bitset>
using namespace std;
#define rep(x,to) for(int x=0;x<to;++x)
#define rep2(x,from,to) for(int x=from;x<=to;++x)
typedef long long ll;
typedef unsigned long long ull;

vector<vector<int>> board;
vector<vector<bool>> visited;
int w, h;

void dfs(int x, int y) {
    visited[y][x] = true;
    rep2(i,-1,1) {
        rep2(j,-1,1) {
            if(i != 0 || j != 0) {
                int yy = y + i;
                int xx = x + j;
                if(board[yy][xx] && !visited[yy][xx]) {
                    dfs(xx, yy);
                }
            }
        }
    }
}

int main(void) {
    while(true){
        cin >> w >> h;
        if(w == 0 && h == 0) break;
        board.assign(h+2, vector<int>(w+2, 0));
        visited.assign(h+2, vector<bool>(w+2, false));
        rep(y,h) {
            rep(x,w) {
                cin >> board[y+1][x+1];
            }
        }
        rep(y,h+2) {
            visited[y][0] = true;
            visited[y][w+1] = true;
        }
        rep(x,w+2) {
            visited[0][x] = true;
            visited[h+1][x] = true;
        }
        int count = 0;
        rep2(y,1,h) {
            rep2(x,1,w) {
                if(board[y][x] && !visited[y][x]) {
                    dfs(x, y);
                    count++;
                }
            }
        }
        cout << count << endl;
    }
}
