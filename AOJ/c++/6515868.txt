#include <iostream>
#include <unordered_map>
using namespace std;
typedef long long ll;
ll n, l, k, q;
struct point{double x, y;};

void koch(ll N, point a, point b){
    if(N < 1){
        return;
    }
    else {
        point s, t, u;
        double cos60, sin60;
        cos60 = 1 / 2;
        sin60 = sqrt(3) / 2;
        s.x = (a.x * 2 + b.x) / 3;
        s.y = (a.y * 2 + b.y) / 3;
        t.x = (a.x + b.x * 2) / 3;
        t.y = (a.y + b.y * 2) / 3;
        u.x = (t.x - s.x) * cos60 - (t.y - s.y) * sin60 + s.x;
        u.y = (t.y - s.y) * sin60 + (t.x - s.x) * cos60 + s.y;
        koch(N - 1, a, s);
        cout << s.x << " " << s.y << endl;
        koch(N - 1, s, u);
        cout << t.x << " " << t.y << endl;
        koch(N - 1, u, t);
        cout << u.x << " " << u.y << endl;
        koch(N - 1, t, b);
    }
}

int main(){
    cin >> n;
    point a, b;
    a.x = 0;
    a.y = 0;
    b.x = 100;
    b.y = 0;
    cout << a.x << " " << a.y << endl;
    koch(n, a, b);
    cout << b.x << " " << b.y << endl;


}
