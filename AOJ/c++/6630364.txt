#include<stdio.h>

#define MAX 100
#define INF 1<<20

#define WHITE 0
#define GRAY  1
#define BLACK 2

int am[MAX][MAX];

int prim(int number){
    int vertex,min_cost,sum_weight=0;
    int cost[MAX],colar[MAX];
    int i;
    
    for(i=0;i<number;i++){
    	cost[i]=INF;
    	colar[i]=WHITE;
	}
	cost[0]=0;
	colar[0]=GRAY;
    
    while(1){
    	vertex=-1;
    	min_cost=INF;
    	
    	for(i=0;i<number;i++){
    		if(colar[i]==GRAY&&cost[i]<min_cost){
    			min_cost=cost[i];
    			vertex=i;
			}
		}
		if(vertex==-1)
			break;
			
    	colar[vertex]=BLACK;
    	sum_weight+=cost[vertex];
    	
    	for(i=0;i<number;i++){
    		if(colar[i]!=BLACK&&am[vertex][i]<INF){
    			colar[i]=GRAY;
    			if(cost[i]>am[vertex][i])
    				cost[i]=am[vertex][i];
			}
		}	
	}
	return sum_weight;
}
 
int main(void){
	int number,edge;
	int result;
    int i,j;
     
    scanf("%d",&number);
    for(i=0;i<number;i++){
		for(j=0;j<number;j++){
			scanf("%d",&edge);
			if(edge==-1)
				am[i][j]=INF;
			else
				am[i][j]=edge;
		}
    }
    printf("%d\n",prim(number));
    
    return 0;
}

