#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

ll f(ll a){
	ll l=0,r=1e6+167;
	while(r-l>1){
		ll med=(r+l)/2;
		if(med*med>a) r=med;
		else l=med;
	}
	return l;
}

void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	solve();
}

void solve(){
	ll w,h,v,t,x,y,p,q;
	cin>>w>>h>>v>>t>>x>>y>>p>>q;
	ll ans=0;
	for(ll i=-(v*t);i<=v*t;i++){
		ll X=i*w;
		if(i%2==0){
			X+=p;
		}else{
			X+=w-p;
		}
		if(abs(X-x)>v*t) continue;
		ll diff=f(v*v*t*t-(X-x)*(X-x));
		ll a=(2*h+q-y)%(2*h);
		ll b=(2*h-q-y);
		ll l=-diff-1,r=diff;
		ll S=((abs(l)+6*h)/(2*h))*2*h;
		l+=S,r+=S;
		ans+=(r-a)/(2*h)-(l-a)/(2*h);
		ans+=(r-b)/(2*h)-(l-b)/(2*h);
	}
	cout<<ans<<"\n";
}

