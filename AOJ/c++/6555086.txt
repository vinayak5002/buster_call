#include<iostream>
#include<vector>
#include<algorithm>
#include<map>
#include<set>
#include<cmath>
#include<queue>
#include<stack>
#include<string>

#define rep(i,n) for(int i=0;i<(n);i++)

using ll = long long;
using namespace std;

int H, W;
vector<vector<int>> seen, g;
int cnt;

int dh[8] = { -1,-1,0,1,1,1,0,-1 };
int dw[8] = { 0,1,1,1,0,-1,-1,-1 };

void dfs(int h, int w) {
	seen[h][w] = cnt;
	for (int dir = 0; dir < 8; dir++) {
		int nh = h + dh[dir];
		int nw = w + dw[dir];
		if (nh < 0 || nh >= H || nw < 0 || nw >= W) continue;
		if (g[nh][nw] == 0) continue;
		if (seen[nh][nw] == -1) dfs(nh, nw);
	}
}

int main() {

	while (1) {
		cin >> W >> H;
		if (H == 0 && W == 0) break;
		seen = vector<vector<int>>(H, vector<int>(W, -1));
		g = vector<vector<int>>(H, vector<int>(W));
		rep(i, H)rep(j, W) cin >> g[i][j];
		cnt = 0;
		rep(i, H) {
			rep(j, W) {
				if (seen[i][j] == -1) {
					if (g[i][j] == 1) {
						cnt++;
						dfs(i, j);
					}
				}
			}
		}
		cout << cnt << endl;
	}

	return 0;
}
