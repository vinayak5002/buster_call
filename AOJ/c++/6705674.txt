#include <stdio.h>
#include <string.h>
#include <stdlib.h>


#define N 100000

struct node{
	int key;
	struct node *l;
	struct node *r;
	struct node *p;
};
struct node *root,*NIL;

int find(int k,struct node *u)
{
	if(u==NIL)
	{
		return 0;
	}
	
	if(u->key==k)
	{
		return 1;
	}
	else if(u->key<k)
	{
		return find(k,u->r);
	}
	else
	{
		return find(k,u->l);
	}
}

void insert(int k)
{
	struct node *y=NIL;
	struct node *x=root;
	struct node *z;
	
	z=(struct node *)malloc(sizeof(struct node));
	z->key=k;
	z->l=NIL;
	z->r=NIL;
	
	while(x!=NIL)
	{
		y=x;
		if(z->key < x->key)
		{
			x=x->l;
		}
		else{
			x=x->r;
		}
	}
	z->p=y;
	if(y==NIL)
	{
		root=z;
	}
	else
	{
		if(z->key < y->key)
		{
			y->l=z;
		}
		else
		{
			y->r=z;
		}
	}
}

void inorder(struct node *i) //中間順//
{
	if(i==NIL) return;
	inorder(i->l);
	printf(" %d",i->key);
	inorder(i->r);
}
void preorder(struct node *i) //先行順//
{
	if(i==NIL) return;
	printf(" %d",i->key);
	preorder(i->l);
	preorder(i->r);
}

int main(void)
{
	int i,n,x;
	char com[10];
	
	scanf("%d",&n);
	
	for(i=0;i<n;i++)
	{
		scanf("%s",&com);
		if(com[0]=='i')
		{
			scanf("%d",&x);
			insert(x);
		}
		else if(com[0]=='p')
		{
			inorder(root);
			printf("\n");
			preorder(root);
			printf("\n");
		}
		else if(com[0]=='f')
		{
			scanf("%d",&x);
			if(find(x,root))
			{
				printf("yes\n");
			}
			else
			{
				printf("no\n");
			}
		}
	}
	
	return 0;
}
	
