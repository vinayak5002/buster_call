#include<iostream>
#include<queue>
using namespace std;


	

int main(){
	
	int a,b,i,j,x,y;
	int meiro[120][120];
	int map[120][120];
	queue<int> que;
	
	while(1){
	
		
		cin >> a >> b ;
		
		if(a==0&&b==0) return 0;
		
		
		for(i=0;i<100;i++){
			for(j=0;j<100;j++){
				map[i][j] = 0;
				meiro[i][j]=1;
			}
		}
		
		
		for(i=0;i<2*b-1;i++){
			
			if(i%2 == 0){
				for(j=0;j<a-1;j++){
					cin >> meiro[i][j];
				}
			}
			else {
				for(j=0;j<a;j++){
					cin >> meiro[i][j];
				}
			}
		}
		
		map[0][0] = 1;
		que.push(0);
		que.push(0);
		
		while(que.size()>0){
	
			
			x = que.front();
			que.pop();
			y = que.front();
			que.pop();
			
			//右へいけるか
			if(map[x][y+1]==0 && meiro[2*x][y]==0 && y<a-1) {
				map[x][y+1]=map[x][y]+1;
				que.push(x);
				que.push(y+1);
			}
			//下へいけるか
			if(map[x+1][y]==0 && meiro[2*x+1][y]==0 && x<b-1) {
				map[x+1][y]=map[x][y]+1;
				que.push(x+1);
				que.push(y);
			}
			//左へいけるか
			if(map[x][y-1]==0 && meiro[2*x][y-1]==0 && y>0) {
				map[x][y-1]=map[x][y]+1;
				que.push(x);
				que.push(y-1);
			}
			//上へいけるか
			if(map[x-1][y]==0 && meiro[2*x-1][y]==0 && x>0) {
				map[x-1][y]=map[x][y]+1;
				que.push(x-1);
				que.push(y);
			}
			
			
		}
		
		
		cout << map[b-1][a-1]<< endl;
	
	
	}
	
	
	
	
}
