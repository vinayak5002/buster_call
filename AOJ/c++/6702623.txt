#include <iostream>
#define inf 1e9
 
using namespace std;
 
int n, m;
int b[505][505];
int B[505];
int bit[505];
int dp[2][1 << 22];
 
int main(void)
{
    while(1){
        cin >> n >> m;
        if(n == 0 && m == 0) break;
         
        for(int i = 1; i <= n; i++){
            for(int j = 0; j < m; j++){
                char c;
                cin >> c;
                b[i][j] = c - '0';
            }
        }
         
        int ans = 0;
        if(n <= 22){
            int S = 1 << n;
            for(int i = 0; i < S; i++){
                int cnt = 0;
                for(int j = 0; j < m; j++) bit[j] = 0;
                for(int j = 1; j <= n; j++){
                    if( (i & (1<<(j-1))) == 0) continue;
                    cnt++;
                    for(int k = 0; k < m; k++) bit[k] ^= b[j][k];
                }
                bool flag = false;
                for(int j = 0; j < m; j++) flag |= bit[j];
                if(!flag) ans = max(ans, cnt);
            }
        }
        else{
             
            for(int i = 1; i <= n; i++){
                B[i] = 0;
                for(int j = 0; j < m; j++) B[i] |= (b[i][j] << j);
            }
             
            int S = 1 << m;
            for(int i = 0; i < S; i++) dp[0][i] = dp[1][i] = -inf;
            dp[0][0] = 0;
            for(int i = 0; i < n; i++){
                for(int j = 0; j < S; j++){
                    dp[(i+1)%2][j^B[i+1]] = max(dp[(i+1)%2][j^B[i+1]], dp[i%2][j] + 1);
                    dp[(i+1)%2][j] = max(dp[(i+1)%2][j], dp[i%2][j]);
                }
            }
            ans = dp[n%2][0];
        }
        cout << ans << endl;
    }
    return 0;
}
