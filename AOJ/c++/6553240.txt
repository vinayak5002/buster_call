#include<iostream>
#include<vector>
#include<stack>
using namespace std;
const int maxn = 100010;
const int NIL = -1;

int n, m, q;
vector<int> p[maxn];

int color[maxn];

void dfs(int x, int c)
{
    stack<int> s;
    s.push(x);
    color[x] = c;
    for(int i = 0;i < p[x].size();i++){
        int v = p[x][i];
        if(color[v] == NIL){
            color[v] = c;
            s.push(v);
        }
    }
}
void AssignColor()
{
    int id = 1;
    for(int i = 0;i < n;i++)
        color[i] = NIL;
    for(int u = 0;u < n;u++){
        if(color[u] == NIL)
            dfs(u, id++);
    }
}

int main()
{
    cin >> n >> m;
    for(int i = 0;i < m;i++){
        int u, v;
        cin >> u >> v;
        p[u].push_back(v);
        p[v].push_back(u);
    }
    // for(int i = 0;i < n;i++){
    //     u[i] = false;
    // }

    AssignColor();

    cin >> q;
    int s, t;
    for(int i = 0;i < q;i++){
        cin >> s >> t;
        if(color[s] == color[t]){
            cout << "yes" << endl;
        }
        else
            cout << "no" << endl;
    }

}
