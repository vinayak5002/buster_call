#include <iostream>
#include <vector>

#define FOR(i,a,b) for(int i=(a);i<(b);++i)

struct Card{char suit,value;};

using namespace std;
void selection_sort(struct Card A[],int n);
void bubble_sort(struct Card A[],int n);
void print(struct Card A[],int n);

int main() {
    Card C1[100],C2[100];
    int N;
    char ch;
    cin>>N;
    for(int i=0;i<N;i++){
        cin>>C1[i].suit>>C1[i].value;
    }
    for(int i=0;i<N;i++)C2[i]=C1[i];
    bubble_sort(C1,N);
    selection_sort(C2,N);

    print(C1,N);
    cout<<"Stable"<<endl;
    print(C2,N);
    int i=0;
    while(1){
        if(i==N){
            cout<<"Stable"<<endl;
            break;
        }
        if(C1[i].suit != C2[i].suit){
            cout<<"Not stable"<<endl;
            break;
        }
        i++;
    }
    return 0;
}

void print(struct Card A[],int n)
{
    for(int i=0;i<n;i++){
        if(i>0)cout<<" ";
        cout<<A[i].suit<<A[i].value;
    }
    cout<<endl;
}

void selection_sort(struct Card A[],int n){
    for(int i=0;i<n;i++){
        int minj=i;
        for(int j=i;j<n;j++){
            if(A[j].value<A[minj].value)minj=j;
        }
        Card t=A[i];A[i]=A[minj];A[minj]=t;
    }
}
void bubble_sort(struct Card A[],int n){
    for(int i=0;i<n;i++){
        for(int j=n-1;j>=i+1;j--){
            if(A[j].value<A[j-1].value){
                Card t=A[j];A[j]=A[j-1];A[j-1]=t;
            }
        }
    }
}
