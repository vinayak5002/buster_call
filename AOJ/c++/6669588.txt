#include <include>

#define INF 100000000

void merge(int A[], int left, int mid, int right)
{
    int n1, n2;

    n1 = mid - left;
    n2 = right - mid;

    int L[n1 + 1], R[n2 + 1];

    for (int i = 0; i < n1; i++)
    {
        L[i] = A[left + i];
    }

    for (int i = 0; i < n2; i++)
    {
        R[i] = A[mid + i];
    }

    L[n1] = INF;
    R[n2] = INF;

    int j = 0;
    int k = 0;
    for (int i = left; i < right; i++)
    {
        if (L[j] <= R[k])
        {
            A[i] = L[j];
            j++;
        }
        else
        {
            A[i] = R[k];
            k++;
        }
    }
}

void merge_sort(int A[], int left, int right)
{
	if (left + 1 < right)
	{
    	int mid;
        mid = (left + right) / 2;
        merge_sort(A, left, mid);
        merge_sort(A, mid, right);
    	merge(A, left, mid, right);
    }
}

int main(int argc, char const *argv[])
{
	int n;
	int A[n];
    for (int i = 0; i < n; i++)
	{
		printf("%d ",A[i]);
	}
	
    merge_sort(A, 0, n);//マージソートを行う

    for (int i = 0; i < n; i++)
    {
        printf("%d ",A[i]);
    }
	printf("\n");

    return 0;
}


