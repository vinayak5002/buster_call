#include <bits/stdc++.h>

using namespace std;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    string s;
    cin >> s;

    int level = 0, max_level = 0, j_cnt = 0, o_cnt = 0, i_cnt = 0;
    string::size_type j_pos = s.find('J');  // 'J'を探す
    while (j_pos != string::npos) {
        string::size_type o_pos, i_pos;
        o_pos = s.find_first_not_of('J', j_pos);  // 'J'以外を探す
        if (o_pos == string::npos) {  // 末尾まで'J'だった場合
            break;
        } else if (s.at(o_pos) == 'O') {  // 'O'が見つかった
            j_cnt = (int)o_pos - j_pos;
            i_pos = s.find_first_not_of('O', o_pos);  // 'O'以外を探す
            if (i_pos == string::npos) {  // 末尾まで'O'だった場合
                break;
            } else if (s.at(i_pos) == 'I') {  // 'I'が見つかった
                o_cnt = (int)i_pos - o_pos;
                string::size_type i_end = s.find_first_not_of('I', i_pos);
                if (i_end != string::npos) {
                    i_cnt = (int)i_end - i_pos;
                } else {  // 末尾まで'I'だった場合
                    i_cnt = (int)s.length() - i_pos;
                }
                if (o_cnt <= min(j_cnt, i_cnt)) {  // 'O'の長さが'J','I'以下なら
                    level = min({j_cnt, o_cnt, i_cnt});
                    max_level = max(max_level, level);
                }
                j_pos = s.find('J', i_end);
            } else if (s.at(i_pos) == 'J') {  // 'J'が見つかった
                j_pos = i_pos;
            }
        } else if (s.at(o_pos) == 'I') {  // 'I'が見つかった
            j_pos = s.find('J', o_pos);
        }
    }
    cout << max_level << endl;
    return 0;
}
