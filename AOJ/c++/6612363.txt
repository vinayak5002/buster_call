#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

vector<ll> fact, factinv, inv;
ll mod = 998244353;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}

bool chmax(ll& p, ll q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

bool chmin(ll& p, ll q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    prenCkModp(100000);

    ll N,U,V,M;
    cin>>N>>U>>V>>M;
    ll WIN=-1;

    map<ll,pair<ll,ll>> R,C;
    rep(i,N)rep(j,N){
        ll A;
        cin>>A;
        R[A]={i,j};
    }
    rep(i,N)rep(j,N){
        ll A;
        cin>>A;
        C[A]={i,j};
    }

    vll RR(N,0),RC(N,0),CR(N,0),CC(N,0);
    ll RQ=0,RL=0,CQ=0,CL=0;
    ll RS=0,CS=0;
    string AN="MADA";
    rep(m,M){
        ll P;
        cin>>P;
        if(R.count(P)){
            RR[R[P].first]++;
            RC[R[P].second]++;
            if(RR[R[P].first]==N){
                RS++;
                RR[R[P].first]++;
            }
            if(N!=1)if(RC[R[P].second]==N){
                RR[R[P].second]++;
                RS++;
            }

            if(R[P].second==R[P].first)RQ++;
            if(R[P].second+R[P].first==N-1)RL++;

            if(N!=1)if(RQ==N){
                RS++;
                RQ++;
            }
            if(N!=1)if(RL==N){
                RS++;
                RL++;
            }


        }
        if(C.count(P)){
            CR[C[P].first]++;
            CC[C[P].second]++;
            if(N!=1)if(CR[C[P].first]==N)CS++,CR[C[P].first]++;
            if(CC[C[P].second]==N)CS++,CC[C[P].second]++;

            if(C[P].second==C[P].first)CQ++;
            if(C[P].second+C[P].first==N-1)CL++;

            if(N!=1)if(CQ==N)CS++,CQ++;
            if(N!=1)if(CL==N){
                CS++;
                CL++;
            }
        }
        //cout<<RS<<" "<<CS<<endl;
        if(AN=="MADA"){
            if(RS>=U&&CS>=V)AN="DRAW";
            else if(RS>=U)AN="USAGI";
            else if(CS>=V)AN="NEKO";
        }
    }

    if(AN=="MADA")AN="DRAW";

    cout<<AN<<endl;


    
}
