#include <stdio.h>

void maxHeapify(int A[], int i, int n)
{
    int l = i * 2;
    int r = i * 2 + 1;
    int large, tmp;

    if (l <= n && A[l] > A[i])
    {
        large = l;
    }
    else
    {
        large = i;
    }
    if (r <= n && A[r] > A[large])
    {
        large = r;
    }

    if (large != i)
    {
        tmp = A[i];
        A[i] = A[large];
        A[large] = tmp;
        maxHeapify(A, large, n);
    }
}

void buildMaxHeap(int A[], int n)
{
    int i;

    for (i = n / 2; i >= 1; i--)
    {
        maxHeapify(A, i, n);
    }
}

int main(void)
{
    int n, i;

    scanf("%d", &n);

    int A[n + 1];

    for (i = 1; i < n + 1; i++)
    {
        scanf("%d", &A[i]);
    }
    buildMaxHeap(A, n);

    for (i = 1; i < n + 1; i++)
    {
        printf(" %d", A[i]);
    }

    printf("\n");

    return 0;
}
