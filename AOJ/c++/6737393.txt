#include <stdio.h>
#include <stdlib.h>
#define MAX 36

typedef struct {
    char suit;
    int val;
    int id;
} Data;

void printArray(Data a[], int n) {
    int flag = 1;
    printf("%c%d", a[0].suit, a[0].val);
	for (int i = 1; i < n; i++) {
	    printf(" %c%d", a[i].suit, a[i].val);
    
        if(a[i].val == a[i-1].val && a[i].id < a[i-1].id) {
            flag = 0;
        }
	}
	
	if(flag) {
	    printf("\nStable\n");
	}
	else {
	    printf("\nNot stable\n");
	}
}

void inputArray(int n, Data a1[], Data a2[]) {
    for(int i = 0; i < n; i++) {
        scanf(" %c%d", &a1[i].suit, &a1[i].val);
        a1[i].id = i;
        a2[i] = a1[i];
    }
}

void bubbleSort(Data a[], int n) {
    int c = 0;
    Data temp;
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = n - 1; j > i; j--)
        {
            if (a[j].val <  a[j-1].val)
            {
                temp = a[j];
                a[j] = a[j-1];
                a[j-1] = temp;
                
                c++;
            }
        }
    }
    printArray(a, n);
}


void selectionSort(Data a[], int n) {
    int c = 0;
    Data temp;
    for (int i = 0; i < n - 1; i++)
    {
        int mini = i;
        for (int j = i + 1; j < n; j++)
        {
            if (a[mini].val > a[j].val)
            {
                mini = j;
            }
        }
        if (i != mini)
        {
            temp = a[i];
            a[i] = a[mini];
            a[mini] = temp;
            
            c++;
        }
    }
    printArray(a, n);
}
    

int main() {
    int n;
    scanf("%d", &n);
    if (n < 1 | n > MAX)
    {
        printf("Invalid input. (1 ≤ n ≤ 36).\n");
        return EXIT_FAILURE;
    }
    
    Data a1[n], a2[n];
    inputArray(n, a1, a2);
    
    bubbleSort(a1, n);
    selectionSort(a2, n);
    
    return EXIT_SUCCESS;
}




