#include<stdio.h>
#include<stdlib.h>

/*
2022 NTHU PME Programming Practice #1
A - Laver
*/
/*version:1
*/

int main(void)
{
	unsigned int	x1, y1, w1, h1	;
	unsigned int	x2, y2, w2, h2	;
	unsigned int	x3, y3, w3, h3	;
	unsigned int	A_x[4], A_y[4]	;
	unsigned int	B_x[4], B_y[4]	;
	signed int	delta_x		;
	signed int	delta_y		; 
	unsigned char	running		;


			running		=	1		;
	while(running==1) {
		if(scanf("%d%d%d%d", &x1, &y1, &w1, &h1)==EOF) 
			running		=	0		;
		if(scanf("%d%d%d%d", &x2, &y2, &w2, &h2)==EOF) 
			running		=	0		;
        			
		if(running==1) {
		  if(			x1>x2					) {		//swap
				x3		=	x2		;
				y3		=	y2		;
				w3		=	w2		;
				h3		=	h2		;
		
				x2		=	x1		;
				y2		=	y1		;
				w2		=	w1		;
				h2		=	h1		;
		
				x1		=	x3		;
				y1		=	y3		;
				w1		=	w3		;
				h1		=	h3		;
	  	  }
				A_x	[3]	=	x1+w1		;
				A_y	[3]	=	y1+0		;
				
				A_x	[0]	=	x1+w1		;
				A_y	[0]	=	y1+h1		;
				
				A_x	[1]	=	x1+0		;
				A_y	[1]	=	y1+h1		;
				
				A_x	[2]	=	x1+0		;
				A_y	[2]	=	y1+0		;
				
				B_x	[3]	=	x2+w2		;
				B_y	[3]	=	y2+0		;
				
				B_x	[0]	=	x2+w2		;
				B_y	[0]	=	y2+h2		;
				
				B_x	[1]	=	x2+0		;
				B_y	[1]	=	y2+h2		;
				
				B_x	[2]	=	x2+0		;
				B_y	[2]	=	y2+0		;

	  
//				printf("A=(%d,%d) (%d,%d)\n",A_x[2],A_y[2],A_x[0],A_y[0])	;
//				printf("B=(%d,%d) (%d,%d)\n",B_x[2],B_y[2],B_x[0],B_y[0])	;

	  	  if(			B_y[2]>=A_y[1]				||
	  	  			B_y[1]<=A_y[2]				) {		//
		  		delta_y		=	0		;
	  	  }
	  	  else if(		B_y[1]<A_y[1]				&&
					B_y[2]>A_y[2]				) {
				delta_y		=	h2		;
	  	  }
	  	  else if(		B_y[1]>A_y[1]				&&
					B_y[2]<A_y[2]				) {
				delta_y		=	h1		;
	  	  }
	 	   else if(		B_y[2]<A_y[1]				&&
					B_y[2]>A_y[2]				) {
				delta_y		=	A_y[1]-B_y[2]	;
	  	  }
	  	  else {
				delta_y		=	B_y[1]-A_y[2]	;
	  	  }


	  	  if(			B_x[2]>A_x[3]				) {		//
				delta_x		=	0		;
	  	  }
	  	  else if(		B_x[3]<A_x[3]				&&
					B_x[2]>A_x[2]				) {
				delta_x		=	w2		;
	  	  }
	  	  else if(		B_x[3]>A_x[3]				&&
					B_x[2]<A_x[2]				) {
				delta_x		=	w1		;
	  	  }
	  	  else if(		B_x[3]>A_x[3]				&&
					B_x[2]>A_x[2]				) {
				delta_x		=	A_x[3]-B_x[2]	;
		  }
	  	  else {
				delta_x		=	B_x[3]-A_x[2]	;
		  }
//			printf("delat(%d,%d)\n",delta_x,delta_y);
			printf("%d\n",w1*h1+w2*h2-2*delta_x*delta_y);
		}
	}

    	return 0;
}

