#include <stdio.h>
#include <string.h>
#define N 101
#define M -1

int n;
int a[N][N];
int d[N];
int Q[N];
int head = 0;
int tail = 0;

void enqueue(int x)
{
    Q[tail] = x;
    tail = (tail + 1) % N;
}

int dequeue(int x)
{
    x = Q[head];
    head = (head + 1) % N;
    return x;
}

void dfs(int s)
{
    int i, u;

    enqueue(s);

    for (i = 0; i < n; i++)
    {
        d[i] = M;
    }

    d[s] = 0;

    while (tail != head)
    {
        u = dequeue(s);

        for (i = 0; i < n; i++)
        {
            if (a[u][i] == 0)
            {
                continue;
            }

            if (d[i] != M)
            {
                continue;
            }

            d[i] = d[u] + 1;

            enqueue(i);
        }
    }
}

void dfs_print()
{
    int u;

    for (u = 0; u < n; u++)
    {
        printf("%d %d\n", u + 1, d[u]);
    }
}

int main()
{
    int i, j, u, k, v;

    scanf("%d", &n);

    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            a[i][j] = 0;
        }
    }

    for (i = 0; i < n; i++)
    {
        scanf("%d %d", &u, &k);

        u--;

        for (j = 0; j < k; j++)
        {
            scanf("%d", &v);

            v--;

            a[u][v] = 1;
        }
    }

    dfs(0);

    dfs_print();

    return 0;
}
