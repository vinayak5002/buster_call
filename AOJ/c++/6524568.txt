#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	solve();
}

void solve(){
	int N;
	cin>>N;
	vector<pair<int,int>> p(N);
	rep(i,N){
		string S;
		cin>>S;
		int tmp=0;
		for(auto c:S){
			if(c=='(') tmp++;
			else tmp--;
			chmin(p[i].second,tmp);
		}
		p[i].first=tmp;
	}
	sort(all(p),[&](pair<int,int> l,pair<int,int> r){
		if((l.second==0)^(r.second==0)){
			return l.second==0;
		}
		if((l.second==0)&&(r.second==0)){
			return false;
		}
		if((l.first>0)^(r.first>0)){
			return l.first>0;
		}
		if((l.first>0)&&(r.first>0)){
			return l.second>r.second;
		}
		if((l.first==l.second)||(r.first==r.second)){
			return l.first!=l.second;
		}
		return l.second<r.second;
	});
	int tmp=0;
	rep(i,N){
		if(tmp+p[i].second<0){
			cout<<"No\n";
			return ;
		}
		tmp+=p[i].first;
		if(tmp<0){
			cout<<"No\n";
			return;
		}
	}
	yneos(tmp==0);
}

