#include<bits/stdc++.h>
using namespace std;
vector<vector<int>> graph;
vector<bool> used;
vector<int> d;
int nowtime = 1;
int main(){
    int n;
    cin >> n;
    graph = vector<vector<int>>(n);
    used = vector<bool>(n);
    d = vector<int>(n, -1);
    for(int i = 0; i < n; ++i){
        int k;
        cin >> k >> k;
        for(int j = 0; j < k; ++j){
            int v;
            cin >> v;
            --v;
            graph[i].push_back(v);
        }
    }
    queue<pair<int, int>> q;
    q.push(make_pair(0, 0));
    while(!q.empty()){
        auto [cur, dist] = q.front();
        q.pop();
        if(used[cur]) continue;
        d[cur] = dist;
        for(auto&& nx:graph[cur]){
            if(used[nx]) continue;
            q.push(make_pair(nx, dist+1));
        }
    }

    for(int i = 0; i < n; ++i){
        cout << i+1 << " " << d[i] << endl;
    }
}
