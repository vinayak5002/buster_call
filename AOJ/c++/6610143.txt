#include <bits/stdc++.h>

using namespace std;
#define rep(i,n) for(int i=0;i<n;++i)
#define rep1(i,n) for(int i=1;i<=n;++i)
#define rrep(i,n) for(int i=n-1;i>=0;--i)
#define debug(output) if(debugFlag)cout<<#output<<"= "<<output<<"\n";
using lint = long long;
typedef pair<int,int> P;
const bool debugFlag=true;
const lint linf=1.1e18;const int inf=1.01e9;
constexpr int MOD=1000000007;
template<class T>bool chmax(T &a, const T &b) { if(a < b){ a = b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if(a > b){ a = b; return 1; } return 0; }

signed main(){
  int m;cin>>m;
  vector<int> a;
  rep(i,m){
      char c;cin>>c;
      if(c=='U')a.push_back(0);
      else if(c=='D')a.push_back(1);
  }
  int n=a.size();
  vector<lint> dp(n+1,0);
  dp[0]=1;
  rep(i,n){
      vector<lint> ndp(n+1,0);
      rep(j,n){
          if(a[i]==1){
              ndp[j]+=dp[j+1]*(j+1)%MOD*(j+1)%MOD;
              ndp[j]+=dp[j]*j%MOD;
              ndp[j]%=MOD;
          }
          else{
              ndp[j]+=dp[j]*j%MOD;
              ndp[j+1]+=dp[j];
              ndp[j]%=MOD;
              ndp[j+1]%=MOD;
          }
      }
      swap(dp,ndp);
  }
  cout<<dp[0]<<"\n";
  return 0;
}
