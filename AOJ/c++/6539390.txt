#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=1167167167167167167;
const int INF=2100000000;
const ll mod=998244353;
#define rep(i,a) for (int i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

int N;

void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	while(cin>>N,N) solve();
}

void solve(){
	ld pw;
	cin>>pw;
	vector<ld> vw(N),pf(N),vf(N),th(N);
	rep(i,N) cin>>vw[i]>>pf[i]>>vf[i]>>th[i];
	ld l=0,r=100;
	rep(roop,200){
		ld med=(l+r)/2;
		ld diff=pw;
		rep(i,N){
			if(th[i]<=vw[i]*med) continue;
			diff-=vw[i]*pf[i]/vf[i];
		}
		if(diff<0) l=med;
		else r=med;
	}
	ld ans=l*pw;
	rep(i,N){
		ans+=max((ld)0,th[i]-vw[i]*l)*pf[i]/vf[i];
	}
	//cout<<l<<" ";
	cout<<setprecision(18)<<ans<<"\n";
}

