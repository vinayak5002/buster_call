#include<stdio.h>

#define N_MAX 100
#define NEW 2
#define YET 1
#define ALR 0

int A[N_MAX][N_MAX];
int state[N_MAX],d[N_MAX],f[N_MAX],time;
int n;

void dfs_visit(int u){
    int v;
    state[u] = YET;              //探索中に更新
    d[u] = ++time;
    for(v=0; v<n; v++){
        if(A[u][v]!=0 && state[v]==NEW){  //辺があり未探索なら訪問
            dfs_visit(v);
        }
    }
    state[u] = ALR;              //探索完了
    f[u] = ++time;
}

void dfs(){
    int u;
    for(u=0; u<n; u++){
        state[u] = NEW;
    }
    time = 0;

    for(u=0;u<n;u++){
        if(state[u] == NEW){
            dfs_visit(u);
        }
    }
    for(u=0; u<n; u++){
        printf("%d %d %d\n", u+1, d[u], f[u]);
    }
}

int main(void){
    int i,j,u,k,v;

    scanf("%d",&n);           //頂点数

    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            A[i][j] = 0;
        }
    }


    for(i=0; i<n; i++){

        scanf("%d",&u);       //頂点番号
        scanf("%d",&k);       //出次数
        u = u-1;
        
        for(j=0; j<k; j++){
            scanf("%d",&v);
            v = v-1;
            A[u][v] = 1;
        }

    }

    dfs();



    return 0;
}
