#include<iostream>
#include<algorithm>
using namespace std;

int par[10005],ranks[10005];
int marked[1005];
int n,k;

void init(){
    for(int i = 1;i<=n;i++){
        par[i] = i;
        ranks[i] = 0;
    }
}

int find(int x){
    if(marked[x]) return x;
    if(par[x] == x) return x;
    else{
        return find(par[x]);
    }
}

void unite(int x, int y){
    int a = find(x);
    int b = find(y);
    if(a == b) return ;
    if(ranks[a]<ranks[b]) par[a] = b;
    else{
        par[b] = a;
        if(ranks[a] == ranks[b]) ranks[a]++;
    }
}

bool same(int x, int y){
    return find(x) == find(y);
}

int main(){
    cin>>n>>k;
    init();
    for(int i =2;i<=n;i++){
        cin>>par[i];
    }
    char c;
    long long result = 0;
    while(cin>>c){
        if(c == '0') break;
        if(c == 'M'){
            int mid ;
            cin>>mid;
            marked[mid] =1;

        }
        if(c == 'Q'){
            int mid;
            cin>>mid;
            result += find(mid);
        }
    }
    cout<<result;

}
