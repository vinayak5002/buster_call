#include<bits/stdc++.h>
using namespace std;
using pii = pair<int,int>;
using ll = long long;

template<class t=ll>
t in(){
	t res;
	cin >> res;
	return res;
}

ll bit(ll n){
	return 1 << n;
}

ll readBit(){
	string str = in<string>();
	ll res = 0;
	for(auto i:str){
		res = res * 2 + i - '0';
	}
	return res;
}

vector<bool> readBit2(){
	string str = in<string>();
	vector<bool> res;
	for(auto i:str)res.emplace_back(i=='1');
	return res;
}
vector<bool> BitOr(vector<bool> a,vector<bool> b){
	for(int i=0;i<a.size();++i)a[i] = a[i] != b[i];
	return a;
}

int solvem(int n,int m){
	vector<int> dp1(bit(m),-1e9);
	vector<int> dp2(bit(m),-1e9);
	dp1[0] = 0;
	for(int j=0;j<n;++j){
		int v = readBit();
		for(int i=0;i<dp1.size();++i){
			dp2[i] = max(dp2[i],dp1[i]);
			dp2[i^v] = max(dp2[i^v],dp1[i]+1);
		}
		swap(dp1,dp2);
		for(int i=0;i<dp2.size();++i)dp2[i] = -1e9;
	}
	return dp1[0];
}

int solven(int n,int m){
	vector<vector<bool>> line(n);
	for(int i=0;i<n;++i){
		line[i] = readBit2();
	}
	function<int(int p,vector<bool>)> rec = [&](int p,vector<bool> sum)->int{
		if(p == n){
			bool flag = false;
			for(int i=0;i<m;++i){
				flag = flag or sum[i];
			}
			return flag ? -1e5 : 0;
		}
		int res = -1e5;
		res = max(res,rec(p+1,sum));
		res = max(res,rec(p+1,BitOr(sum,line[p]))+1);
		return res;
	};
	vector<bool> start(m,0);
	return rec(0,start);
}


int func(int n){
	int m = in();
	if(m <= 22){
		return solvem(n,m);
	}else{
		return solven(n,m);
	}
}

int main(){
	while(true){
		int n = in();
		if(n==0)break;
		cout << func(n) << endl;
	}
}

