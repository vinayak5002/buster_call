#pragma region

#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <numeric> // gcd, lcm
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

using ull = unsigned long long;
using ll = long long;
using vi = vector<int>;
using vll = vector<ll>;
using vvi = vector<vi>;
using vvll = vector<vll>;
using vs = vector<string>;
using pii = pair<int,int>;
using vpii = vector<pii>;

#pragma endregion

const ll INF = (1 << 60);

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n, m; cin >> n >> m;
    vvll d(n, vll(n, INF));
    for(int i=0; i<n; ++i) d[i][i] = 0;
    for(int i=0; i<m; ++i){
        int s, t, c; cin >> s >> t >> c;
        d[s][t] = c;
    }
    
    for(int k=0; k<n; ++k){
        for(int i=0; i<n; ++i){
            for(int j=0; j<n; ++j){
                if(d[i][k] == INF or d[k][j] == INF) continue;
                d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
            }
        }
    }
    for(int i=0; i<n; ++i){
        if(d[i][i] < 0){
            cout << "NEGATIVE CYCLE" << endl; return 0;
        }
    }
    for(int i=0; i<n; ++i){
        for(int j=0; j<n; ++j){
            if(d[i][j] == INF) cout << "INF";
            else cout << d[i][j];
            cout << (j==n-1 ? "\n" : " ");
        }
    }

    return 0;
}
