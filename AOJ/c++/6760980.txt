#include <algorithm>
#include <bits/stdc++.h>
#include <functional>
#include <vector>
#include <iostream>
using namespace std;

#define rep(j ,i, n) for (int i = j; i < (int)(n); i++)

int main(){
  cin.tie(0);
  ios::sync_with_stdio(false);
  int d, w;

  while(cin >> d, d){
    cin >> w;
    if(d == 0 && w == 0){
      return 0;
    }
    int input;
    vector<vector<int>> a(d, vector<int>(w));
    for(int i = 0; i<d; i++){
      for(int j = 0; j < w; j++){
        cin >> input;
        a[i][j] = input;
      }
    }
    int d_len = d;
    int w_len = w;
    int ans = 0;
    
    //ここから先をループしたい
    while(3 <= d_len){
      while(3 <= w_len){
        int outer = INT_MAX;
        int inner = 0;
        for(int d_index = 0; d_index <= d-d_len; d_index++){
          for(int w_index = 0; w_index <= w-w_len; w_index++){
            int outer = INT_MAX;
            int inner = 0;
            for(int i = 0; i < d_len; i++){
              for(int j = 0; j < w_len; j++){
                if(i == 0 || i == d_len-1 || j == 0 || j == w_len -1){
                  outer = min(outer, a[i + d_index][j + w_index]);
                } else {
                  inner = max(inner, a[i + d_index][j + w_index]);
                }
              }
            }
            int tmp = 0;
            if (outer > inner){
              for(int i = 0; i < d_len; i++){
                  for(int j = 0; j < w_len; j++){
                  if(i == 0 || i == d_len-1 || j == 0 || j == w_len -1){
                  } else {
                    tmp += outer - a[i+d_index][j+w_index];
                  }
                }
              }
              if (tmp > ans){
                ans = tmp;
              }
            }
          }
        }
        w_len--;
      }
      w_len = w;
      d_len--;
    }

    cout << ans << endl;
  }
}

//長方領域を全探索
//外周の最小値より、内部の最大値が大きければbreak; else 長方領域の面積を記録。
