#include <stdio.h>
#include <stdlib.h>

#define ull unsigned long long 

typedef struct{
    int v, w;
    char t, s[21];
    ull d;
}Good;

int comp(const void *p1, const void *p2){
    Good *g1 = (Good*)p1;
    Good *g2 = (Good*)p2;
    
    if(g1->v != g2->v){
        return g1->v - g2->v;
    }else if(g1->w != g2->w){
        return g1->w - g2->w;
    }else if(g1->t != g2->t){
        return g1->t - g2->t;
    }else if(g1->d != g2->d){
        return g1->d - g2->d;
    }else{
        char *gs1 = g1->s;
        char *gs2 = g2->s;
        while(*gs1 == *gs2){
            if(*(++gs1) != *(++gs2)) return *gs1 - *gs2;
        };
        return *gs1 - *gs2;
    }
}

int main(){
    int n;    
    scanf("%d", &n);
    Good *g = (Good*)malloc(sizeof(Good)*n);
    for(int i = 0; i < n; i++)scanf("%d %d %c %llu %s", &g[i].v, &g[i].w, &g[i].t, &g[i].d, g[i].s);
    qsort(g, n, sizeof(Good), comp);    
    for(int i = 0; i < n; i++) printf("%d %d %c %llu %s\n", g[i].v, g[i].w, g[i].t, g[i].d, g[i].s);
}
