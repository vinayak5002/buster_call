#include<cstdio>
#include<cstdlib>
#include<cstring>
using namespace std;
struct Node{
    int key;
    Node *prev, *next;
};

//初期化
Node *nil;
void init(){
    //メモリの確保
    nil = (Node *)malloc(sizeof(Node));
    nil->next = nil;
    nil->prev = nil;
}
//要素の追加
void insert(int key){
    Node *x = (Node *)malloc(sizeof(Node));
    x->key = key;
    x->next = nil->next;
    nil->next->prev = x;
    nil->next = x;
    x->prev = nil;
}
//要素の探索
Node* listserch(int key){
    Node *cur = nil->next;
    while(cur != nil && cur->key != key){
        cur = cur->next;
    }
    return cur;
}

//要素の削除
void deleteNode(Node *t){
    if(t == nil) return;
    t->prev->next = t->next;
    t->next->prev = t->prev; 
    //メモリの解放
    free(t);
}

//最初の要素の削除
void deleteFirst(){
    deleteNode(nil->next);
}

//最後の要素の削除
void deleteLast(){
    deleteNode(nil->prev);
}

//指定した要素の削除
void deleteKey(int  key){
    deleteNode(listserch(key));
}

void printList(){
    Node *cur =nil->next;
    int isf = 0;
    while(1){
        if(cur == nil)break;
        if(isf++ > 0)printf(" ");
        printf("%d",cur->key);
        cur = cur->next;
    }
    printf("\n")
}
int main(){
    int key,n,i;
    int size = 0;
    char com[20];
    int np=0,nd=0;
    scanf("%d",&n);
    init();
    for(i=0;i<n;i++){
        scanf("%s%d",com,&key);
        if(com[0] == 'i'){
            insert(key);
            np++;
            size++;
            }
        else if(com[0] == 'd'){
            if(strlen(com) > 6){
                if (com[6] == 'F') deleteFirst(); 
                else if(com[6] == 'L') deleteLast();
            }
            else{
                deleteKey(key);
            }
            size--;
        }
    }

    printList();

    return 0;
}

