#include <bits/stdc++.h>
using namespace std;
double Maximumloot(int w,vector <int> &weight, vector<int> &value,vector <double>& ratio)
{  int n = weight.size();
   double res = 0;
   int sumofweights = 0;
   int sumofvalues = 0;
   for(int j=0;j<n;j++)
   { sumofweights += weight[j];
     sumofvalues += value[j];}
   if( sumofweights <= w)
   { res = (double)sumofvalues; }
   else
   {
   if(w == 0)
       { return 0;}
   else
      { for(int i=0; i<n; i++)
          { if(ratio[i] == *max_element(ratio.begin(),ratio.end()))
             { if(weight[i] < w)
                { res += (double)value[i];
                  w = w - weight[i];}
               else
                 { res += (double)w/weight[i] * value[i];
                   w = 0;
                   break;} 
               ratio[i] = 0; 
               i = -1;    }
          
          }

      }  }
      return res;
}

int main()
{ int n;
  int w;
  cin >> n >> w;
  vector <int> weight(n);
  vector <int> value(n);
  vector <double> ratio(n);
  for(int i=0;i<n;i++)
  { cin >> value[i] >> weight[i] ;
    ratio[i] = (double) value[i]/weight[i] ;
                                            }
  double result = Maximumloot(w,weight,value,ratio);
  cout << setprecision(10) <<fixed;
  cout << result << endl;
  return 0;
}

