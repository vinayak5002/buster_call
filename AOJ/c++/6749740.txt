#include<bits/stdc++.h>
#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
 
#define rep(i,n)for(int i=0;(i)<(int)(n);i++)
#define REP(i,a,b)for(int i=(int)(a);(i)<=(int)(b);i++)
#define ALL(a)  (a).begin(),(a).end()
#define pb push_back
#define fi first
#define se second
#define sz(x) ((int)x.size())
 
using namespace std;
//using namespace atcoder;
using ld = long double;
using ll = long long;
using P = pair<ll, ll>;
 
template<typename T> bool chmin(T& a, const T& b) { if(a >= b){ a = b; return 1;} return 0; }
template<typename T> bool chmax(T& a, const T& b) { if(a <= b){ a = b; return 1;} return 0; }
 
 
const ll MOD = 998244353;
const ll INF = 1e7;


int main(){
    int n, m;
    while(cin >> n >> m){
        if(n+m == 0)break;
        // input
        vector<int> C(m), x(n);
        rep(i, m)cin >> C[i];
        rep(i, n)cin >> x[i];
        // dp初期化
        vector<vector<ll>> dp(n+1, vector<ll>(256, INF));
        dp[0][128] = 0;
        // dp更新
        rep(i, n){
            rep(j, 256){
                rep(k, m){
                    int now = j+C[k];
                    if(now < 0)now = 0;
                    if(now >= 255)now = 255;
                    chmin(dp[i+1][now], dp[i][j]+(x[i]-now)*(x[i]-now));
                }
            }
        }
        ll res = INF;
        rep(i, 256)chmin(res, dp[n][i]);
        cout << res << endl;
        // test
        // rep(i, n+1){
        //     rep(j, 256)cout << dp[i][j] << " ";
        //     cout << endl;
        // }
    }
}

