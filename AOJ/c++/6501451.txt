#include <bits/stdc++.h>

using namespace std;

int main() {
    while (1) {
        int N, M;
        vector<int> a_n(1505), a_m(1505);
        cin >> N >> M;
        
        if (N == 0 && M == 0) break;
        for (int i = 0; i < N; i++)
        {
            cin >> a_n[i];
        }
        for (int i = 0; i < M; i++)
        {
            cin >> a_m[i];
        }
        vector<int> vr, vc;
        long long cnt1 = 0;
        for (int i = 1; i <= N; i++)
        {
            for (int j = 0; j < N + 1 - i; j++)
            {
                vr.push_back(0);
                for (int k = 0; k < i; k++) {
                    vr[cnt1] += a_n[j + k];
                }
                cnt1++;
            }
        }
        int cnt2 = 0;
        for (int i = 1; i <= M; i++)
        {
            for (int j = 0; j < M + 1 - i; j++)
            {
                vc.push_back(0);
                for (int k = 0; k < i; k++) {
                    vc[cnt2] += a_m[j + k];
                }
                cnt2++;
            }
        }
        sort(vr.begin(), vr.end());
        sort(vc.begin(), vc.end());
        

        int cntr = 0, cntc = 0;
        int ans = 0;
        while (cntc < vc.size()) {
            int x = 1;
            while (cntc < vc.size() && vc[cntc] == vc[cntc + 1]); {
                x++;
                cntc++;
            }
            int y = 0;
            while (cntr < vr.size() && vr[cntr] < vc[cntc]) {
                cntr++;
            }
            while (cntr < vr.size() && vr[cntr] == vc[cntc]) {
                y++;
                cntr++;
            }
            ans += x * y;
            cntc++;
        }
        cout << ans << endl;
    }
    return 0;

}
