#include <iostream>
#include <string>
#include <vector>
#include <climits>
#include <algorithm>
#include <sstream>

#include <functional>


//#include <windows.h>
//#pragma comment(lib, "winmm.lib")

using namespace std;
typedef long Int;
typedef long long Long;

Int N = 0;
Int Ans = 0;
ostringstream Oss;

// 出力

void output()
{
    //bool isON = false;
    //for (Int i = 0; i < N; ++i) {
    //    if (isON) cout << " ";  else isON = true;
    //    cout << A[i];
    //}
    //cout << "\n";

    cout << Ans << "\n";
}

// 解析

Int X, Y;
vector<Int> Ks(100), Gs(100);

bool Judge(Int start, Int kCnt, Int gCnt)
{
    for (Int i = start; i < N; ++i) {
        if (Gs[i] == 0) continue;
        if (kCnt + Ks[i] > X) continue;
        if (gCnt + Gs[i] > Y) return true;
        if (kCnt + Ks[i] == X) continue;
        if (i + 1 == N) continue;
        if (Judge(i + 1, kCnt + Ks[i], gCnt + Gs[i])) return true;
    }

    return false;
}

void analysis()
{
    cin >> X >> Y;
    for (Int i = 0; i < N; ++i) {
        string S;
        cin >> S;
        Int k = 0, g = 0;
        for (Int j = 0; j < S.length(); ++j) {
            if (S[j] % 2 == 0) ++g; else ++k;
        }
        Ks[i] = k;
        Gs[i] = g;
    }

    if (Judge(0, 0, 0)) cout << "No\n"; else cout << "Yes\n";
}

int main()
{
	cin.tie(0);						// cin高速化
	ios::sync_with_stdio(false);	// cin高速化

	cin >> N;

	//long sTime = timeGetTime();	// スタート時間

    // 解析

    analysis();

	// 出力

    //output();

    //cout << Oss.str() << "\n";
    //cout << "処理時間 " << (double)(timeGetTime() - sTime) / 1000 << "秒\n";
}
