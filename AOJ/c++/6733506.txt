#include <stdio.h>
#include <limits.h>

#define MAX 500000

void merge(int* A, int left, int mid, int right) {
    int n1 = mid - left;
    int n2 = right - mid;
    int L[MAX/2], R[MAX/2];
    int i, j;

    for (i = 0; i < n1; i++) {
        L[i] = A[left + i];
    }
    for (i = 0; i < n2; i++) {
        R[i] = A[mid + i];
    }
    L[n1] = R[n2] = INT_MAX;

    i = j = 0;
    for (int k = left; k < right; k++) {
        if (L[i] <= R[j]) {
            A[k] = L[i];
            i++;
        } else {
            A[k] = R[j];
            j++;
        }
    }
}

void mergeSort(int* A, int left, int right) {
    int mid;

    if (left + 1 < right) {
        mid = ((left + right) / 2);
        mergeSort(A, left, mid);
        mergeSort(A, mid, right);
        merge(A, left, mid, right);
    }
}

int main() {
    int n = 0, A[MAX];
    
    scanf("%d", &n);
    for(int i = 0; i < n; i++) {
        scanf("%d", &A[i]);
    }

    mergeSort(A, 0, n);

    for (int i = 0; i < n - 1; i++) {
        printf("%d", A[i]);
    } 
    printf("%d\n", A[n]);

    return 0;
}
