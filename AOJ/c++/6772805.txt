#include <bits/stdc++.h>
using namespace std ;
#define MAX 2000000002
#define NIL -2000000002
#define INF 2000000002
#define MAXN 123456
#define M 1000000007
// const int M = 1e7 のようにかく。

typedef long long int ll;
const int debug = 0 ; 
const int debug1 = 0 ; 
#define REP(i,n) for(int i=0; i<(int)n; i++)

int gcd (int u , int v){
    if ( u<v) swap(u,v);
    if (v==0 ) {return u;}
    while ( u-v >=0) {
        u -= v ;
    } 
    return gcd(v,u);
}

int lcm(int u,int v){

    int g = gcd(u,v);
    return g*(u/g)*(v/g); 
}

bool isPrime (int u){
    vector<int> A;
    int rootu = (int)sqrt(u);
    REP (i,rootu+1){
        if (i<2) {continue;}
        if (u%i==0) { return false;}
    }
    return true;
}

vector<int> primelist (int u) {
    //u以下の素数をすべて求める
    //エラトステネスのふるい
    vector<int> A;
    bool ans=0;
    REP (i,u+1){
        if (i<2) {continue;}
        if (i>2 && i%2 == 0 ) {continue;}
        if (i>3 && i%3 == 0 ) {continue;}
        if (isPrime(i)) { A.push_back(i); }
    }
    sort(A.begin(),A.end()); 
    return A;
}

vector<int> factorize(int u) {
    vector<int> A;
    const int N = (int) sqrt(u) ;
    REP (i, N+1) {
        if (i < 2) {continue;}
        while (u % i == 0 ) {
            u = u / i;
            A.push_back(i);            
        }
        if (u<2) {break;}
    }
    if ( u > 1 ){
        A.push_back(u);
    }
    return A;
}

int main() {
    int a, b;
    scanf ("%d%d", &a, &b );
    int c = gcd(a,b);
    // printf ("Solve  %d*x+%d*y = %d \n", a,b,c); 

    // if ( c < lcm(a,b) ) { c += lcm(a,b); }
    int x1=1, y1=0, z1=a; 
    int x2=0, y2=1, z2=b;
    while (true) {
        if (z1 < z2){
            swap(x1,x2);  swap(y1,y2);  swap(z1,z2);
        }
        // printf ("%d*%d+%d*%d = %d \n", a,x1,b,y1,z1); 
        int q = z1 / z2 ;
        x1 = x1 - q * x2;
        y1 = y1 - q * y2;
        z1 = z1 - q * z2;
        if ( z1 == c ) {break;}
    }
    /*
    REP(i, b ) {
        REP(j, a) {
            if ( a*i+b*j==c ) {
                x=i; y=j; break;}
        }
    }
    */
   

    printf ("%d %d", x1,y1); 
    printf ("\n");
    return 0;
}

