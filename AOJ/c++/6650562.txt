#include <bits/stdc++.h>
typedef long long int ll;
using namespace std;
const int MOD = 1000000007;
typedef pair<ll, ll> P;
const double pi = 3.1415926536;
const int MAX = 2000003;
long long fac[MAX], finv[MAX], inv[MAX];
template<typename T> using min_priority_queue = priority_queue<T, vector<T>, greater<T>>;
void COMinit() {
    fac[0] = fac[1] = 1;
    finv[0] = finv[1] = 1;
    inv[1] = 1;
    for (int i = 2; i < MAX; i++){
        fac[i] = fac[i - 1] * i % MOD;
        inv[i] = MOD - inv[MOD%i] * (MOD / i) % MOD;
        finv[i] = finv[i - 1] * inv[i] % MOD;
    }
}
// 二項係数計算
long long COM(int n, int k){
    if (n < k) return 0;
    if (n < 0 || k < 0) return 0;
    return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;
}
ll gcd(ll x, ll y) {
   if (y == 0) return x;
   else if (y > x) {
       return gcd (y, x); 
   }
   else return gcd(x % y, y);
}

ll pow_mod(ll x, ll n) {
    if (n == 0) {
        return 1;
    }
    if (n % 2) return pow_mod(x, n - 1) * x % MOD;
    else {
        ll tmp = pow_mod(x, n / 2);
        return tmp * tmp % MOD;
    }
}

int win[10][10];  // win[i][j]  1 ボコした　-1負けた 0 未定
int tmp = 0;
void dfs(int nt, int decided, int n) {
    if (nt == n) {
        tmp++;
        return;
    }
    if (decided == n) {
        int alwin = 0;
        int allos = 0;
        for (int i = 1; i <= n; i++) {
            if (win[nt][i] == 1) alwin++;
            if (win[nt][i] == -1) allos++;
        }
        // cout << nt << ' ' <<  allos << ' ' << alwin << endl;
        if ((alwin == n / 2) && (allos == n / 2)) dfs(nt + 1, nt + 1, n);
        return;
    }
    int next = decided + 1;
    if (win[nt][next] != 0) {
        dfs(nt, next, n);
        return;
    }
    int alwin = 0;
    int allos = 0;
    for (int i = 1; i <= n; i++) {
        if (win[nt][i] == 1) alwin++;
        if (win[nt][i] == -1) allos++;
    }
    if (alwin < n / 2) {
        // 勝たせる
        win[nt][next] = 1;
        win[next][nt] = -1;
        dfs(nt, next, n);
        win[nt][next] = 0;
        win[next][nt] = 0;
    }
    if (allos < n / 2) {
        // 負かせる
        // cout << "hijla " << endl;
        win[nt][next] = -1;
        win[next][nt] = 1;
        dfs(nt, next, n);
        win[nt][next] = 0;
        win[next][nt] = 0;
    }
}

int main() {
    vector<ll> ans;
    while (true) {
        int n, m;
        cin >> n;
        if (n == 0) break;
        cin >> m;
        tmp = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                win[i][j] = 0;
            }
        }
        for (int i = 0; i < m; i++) {
            int x, y;
            cin >> x >> y;
            win[x][y] = 1;
            win[y][x] = -1;
        }
        dfs(1, 1, n);
        ans.push_back(tmp);
    }
    for (auto x : ans) cout << x << endl; 
    return 0;
}
