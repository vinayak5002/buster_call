#include <bits/stdc++.h>
//#include <atcoder/all>
using namespace std;

#define all(x) (x).begin(),(x).end()
#define print(x) cout << (x) << '\n'
typedef long long ll;
typedef long double ld;
using P = pair<int,int>;
using pll = pair<ll,ll>;
using Graph = vector<vector<int>>;

//const ll MOD = 1000000007;
//const ll MOD = 998244353;

template <typename T> inline bool chmax(T &a, T b) {return a < b ? a = b, true : false;}
template <typename T> inline bool chmin(T &a, T b) {return a > b ? a = b, true : false;}

template <typename T>
void vin(vector<T> &v) {
    int l = v.size();
    for(int i = 0; i < l; i++) cin >> v[i];
}

template <typename T>
void vout(vector<T> &v) {
    int l = v.size();
    for(int i = 0; i < l; i++) cout << v[i] << (i < l - 1 ? ' ' : '\n');
}

const ll inf = 1e18 + 5;

void solve() {
    int n, m;   cin >> n >> m;
    vector<vector<ll>> g(n, vector<ll>(n, inf));
    while(m--) {
        int s, t;   cin >> s >> t;
        ll d;   cin >> d;
        g[s][t] = d;
    }
    for(int i = 0; i < n; i++) g[i][i] = 0;
    for(int k = 0; k < n; k++) {
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                chmin(g[i][j], g[i][k] + g[k][j]);
            }
        }
    }
    for(int i = 0; i < n; i++) {
        if(g[i][i] < 0) {
            print("NEGATIVE CYCLE");
            return;
        }
    }
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cout << (g[i][j] == inf ? "INF" : to_string(g[i][j])) << (j < n - 1 ? ' ' : '\n');
        }
    }
    return;
}

int main() {
    cin.tie(0); cout.tie(0);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(18);

    int Query = 1;
    //cin >> Query;

    for(int t = 1; t <= Query; t++) {
        solve();
    } 

    return 0;
}
