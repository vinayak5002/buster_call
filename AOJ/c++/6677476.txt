#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=998244353;
#define rep(i,a) for (int i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

int t=INF;
void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N,S,W,Q;
	cin>>N>>S>>W>>Q;
	if(N==0){
		t=0;
		return;
	}
	if(Q==2||Q==5){
		ll ans=0,C=0;
		rep(i,N){
			int tmp=(S/7)%10;
			if(tmp%Q==0){
				ans+=C;
				if(tmp!=0) ans++;
			}if(tmp!=0) C++;
			if(S%2==0) S/=2;
			else S=((S/2)^W);
		}
		cout<<ans<<"\n";
		return;
	}
	map<int,int> m;
	ll ans=0;
	ll R=1,A=10,P=Q-2;
	while(P){
		if(P&1){
			R=(R*A)%Q;
		}
		A=(A*A)%Q;
		P>>=1;
	}
	ll v=0,D=1;
	rep(i,N){
		ll tmp=(S/7)%10;
		if(tmp!=0) m[v]++;
		v=(v+tmp*D)%Q;
		D=(R*D)%Q;
		ans+=m[v];
		if(S%2==0) S/=2;
		else S=((S/2)^W);
	}
	cout<<ans<<"\n";
}


