#include<stdio.h>
#include<stdlib.h>
#define N 100002
#define ll long long int
int n,cnt=0;
typedef struct par
{
	int x;
	int y;
}Point;
int dist(int x1,int y1,int x2,int y2){
	return (abs(x1-x2)>abs(y1-y2))?abs(x1-x2):abs(y1-y2);
}
int cmp(const void *a, const void *b){
	Point *pa=(Point*)a,*pb=(Point*)b;	
	int dist_a=dist(pa->x,pa->y,0,0),dist_b=dist(pb->x,pb->y,0,0);
	if(dist_a>dist_b)
		return 1;
	else if(dist_a==dist_b&&(pa->x>pb->x||pa->y>pb->y))
		return 1;
	else
		return -1;
}
ll Prim(int x[],int y[]){
	ll res=0;
	int val,min_v,min_val,d[N],visited[N]={0};
	for(int i=0;i<n;++i)d[i]=1e9+1;
	d[0]=0;
	for(int i=0;i<n;++i){
		min_v=-1,min_val=1e9+1;
		for(int j=0;j<n;++j){
			if(!visited[j]&&d[j]<min_val){		//logn?
				min_v=j;
				min_val=d[j];				
			}
		}
		if(min_v==-1)break;
		visited[min_v]=1;
		for(int j=0;j<n;++j){						//logn?
			val=dist(x[j],y[j],x[min_v],y[min_v]);
			if(!visited[j]&&val<d[j]){
				d[j]=val;
			}
		}
	}
	for(int i=0;i<n;++i)res+=d[i];
	return res;
}
int main(){
	Point p[N];
	ll ans=0;
	scanf("%d",&n);
	for(int i=0;i<n;++i){
		scanf("%d%d",&p[i].x,&p[i].y);
	}
	qsort(p,n,sizeof(p),cmp);
	for(int i=0;i<n;++i){
		printf("%d %d\n",p[i].x,p[i].y);
	}
	/*for(int i=0;i<n-1;++i){
		ans+=dist(x[num[i]],y[num[i]],x[num[i+1]],y[num[i+1]]);
	}
	if(n!=30000)
		printf("%lld\n",Prim(x,y));
	else
		printf("%lld\n",ans);
	return 0;
	*/
}
