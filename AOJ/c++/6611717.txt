#include<iostream>
#include<cstdio>
using namespace std;
class node
{
	public:
	int data;
	node *left;
	node *right;
	node()
	{
		left = NULL;
		right = NULL;
	}
};
class tree
{
	public:
	node *root;
	
};

void creat_bt(node *&t, int pre[],int mid[],int head1,int tail1,int head2,int tail2)//*&t只用* 。
//new ndoe 导致 原来的t丢失，*&
{
//	printf("\ndas");
	t = new node;
	t->data = pre[head1];
	
	int root_pos;
	for(int i=0;i<= tail2;i++)
	{
		if(mid[i] == t->data)
		{
			root_pos = i;
			break;
		}
	}
	
	
	int left_ctree = root_pos - head2;
	int right_ctree = tail2 - root_pos;
	
	
	if (left_ctree > 0)
		creat_bt(t->left, pre, mid, head1 + 1, head1 + left_ctree, root_pos - left_ctree, root_pos - 1);
	else
		t->left = NULL;

	if (right_ctree > 0)
		creat_bt(t->right, pre, mid, tail1 - right_ctree + 1, tail1, root_pos + 1, root_pos + right_ctree);
	else
		t->right = NULL;
	return;
	
	
}
void postorder(node *t)
{
	static int O = 0; 
	if(t == NULL)return;
	postorder(t->left);
	postorder(t->right);
	if(!O++)
	printf("%d",t->data);
	else printf(" %d",t->data);
	return;
}
int main()
{
	tree *t = new tree;
//	t->root = new node; 
	int pre[45];
	int mid[45];
	int n;scanf("%d",&n);
	for(int i=0;i<n;i++)
	scanf("%d",&pre[i]);
	for(int i=0;i<n;i++)
	scanf("%d",&mid[i]);
	creat_bt(t->root,pre,mid,0,n-1,0,n-1);
//	printf("\ndddas");
	postorder(t->root);
	printf("\n");
	return 0;
}
