#include<bits/stdc++.h>
#define ll long long
#define ri register
#define all(x) x.begin(),x.end()
using namespace std;
namespace jh{
	const double EPS=1e-9;
	struct P{
		double x,y;
		inline double operator^(const P&b)const{return x*b.x+y*b.y;}
		inline double operator*(const P&b)const{return x*b.y-b.x*y;}
		inline P operator+(const P&b)const{return{x+b.x,y+b.y};}
		inline P operator-(const P&b)const{return{x-b.x,y-b.y};}
		inline P operator*(const double&b)const{return{x*b,y*b};}
		inline P operator/(const double&b)const{return{x/b,y/b};}
		inline double len()const{return sqrt(x*x+y*y);}
		inline double sqr()const{return x*x+y*y;}
		inline void read(){scanf("%lf%lf",&x,&y);}
	};
	struct L{
		P a,b;
		inline double mxx()const{return max(a.x,b.x);}
		inline double mxy()const{return max(a.y,b.y);}
		inline double mix()const{return min(a.x,b.x);}
		inline double miy()const{return min(a.y,b.y);}
	};
	inline bool cross(const L&l1,const L&l2){
		if((l1.mxx()<l2.mix())||(l1.mxy()<l2.miy())||
		   (l2.mxx()<l1.mix())||(l2.mxy()<l1.miy()))return 1;
		if(((l1.a-l2.a)*(l2.b-l2.a))*((l1.b-l2.a)*(l2.b-l2.a))<=0)
			return 1;
		return 0;
	}
	inline bool equ(double x,double y){return fabs(x-y)<=EPS;}
}
using namespace jh;
P p1,p2,p3,p4;
L a,b;
int n;
int main(){
	scanf("%d",&n);
	while(n--){
		p1.read(),p2.read(),p3.read(),p4.read();
		a={p1,p2},b={p3,p4};
		if(cross(a,b))puts("1");
		else puts("0");
	}
	return 0;
}
