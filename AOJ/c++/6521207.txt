#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=1050000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

ll f(ll a,ll b){
	return (a+b-1)/b;
}

void solve();
// oddloop
int main() {
	solve();
}

void solve(){
	int N;
	cin>>N;
	ll H,A,D,S;
	cin>>H>>A>>D>>S;
	ll F=H;
	vector<ll> h(N),a(N),d(N),s(N);
	rep(i,N){
		cin>>h[i]>>a[i]>>d[i]>>s[i];
	}
	rep(i,N){
		if(A-d[i]<=0){
			if(a[i]>D){
				cout<<"-1\n";
				return ;
			}
			h[i]=INF,a[i]=0,d[i]=0;
		}
	}
	vector<int> order(N);
	rep(i,N) order[i]=i;
	sort(all(order),[&](int l,int r){
		return 	f(h[l],A-d[l])*max(0ll,a[r]-D)<f(h[r],A-d[r])*max(0ll,a[l]-D);
	});
	ll T=0;
	rep(i,N){
		if(H<=0) continue;
		T+=f(h[order[i]],A-d[order[i]]);
		ll tmp=T;
		if(S>s[order[i]]) tmp--;
		H-=max(0ll,a[order[i]]-D)*tmp;
	}
	if(H<=0) cout<<"-1\n";
	else cout<<F-H<<"\n";
}

