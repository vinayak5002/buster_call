#include <stdio.h>
#define Max 10000
#define NIL -1

struct Node{
      int parent;
      int left;
      int right;
};

struct Node T[Max];
int D[Max],H[Max],n;

void Depth(int u,int d){
      if(u == NIL) return;
      D[u] = d;
      Depth(T[u].left,d+1);
      Depth(T[u].right,d+1);
}

int Height(int u){
      int h1,h2;
      h1 = h2 = 0;
      if(T[u].left != NIL)
      h1 = Height(T[u].left) + 1;
      if(T[u].right != NIL)
      h2 = Height(T[u].right) + 1;
      return H[u] = (h1 > h2 ? h1 : h2);
}

int Sibling(int u){
      if(T[u].parent == NIL) return NIL;
      if(T[T[u].parent].right != NIL && T[T[u].parent].right != u)
      return T[T[u].parent].right;
      if(T[T[u].parent].left != NIL && T[T[u].parent].left != u)
      return T[T[u].parent].left;
      else return NIL;
}

void print(int i){
      printf("node %d: ",i);
      printf("parent = %d, ",T[i].parent);
      printf("sibling = %d, ",Sibling(i));
      int deg = 0;
      if(T[i].left != NIL) deg++;
      if(T[i].right != NIL) deg++;
      printf("degree = %d, ",deg);
      printf("depth = %d, ",D[i]);
      printf("height = %d, ",H[i]);
      if(T[i].parent == NIL) printf("root\n");
      else if(deg != 0) printf("internal node\n");
      else printf("leaf\n");
}


int main(void){
    // Your code here!
    int i,v,l,r,root = 0; 
    scanf("%d",&n);
    for(i=0 ;i<n ;i++) T[i].parent = NIL;
    for(i=0 ;i<n ;i++) {
          scanf("%d%d%d",&v,&l,&r);
          T[v].right = l;
          T[v].left = r;
          if(l != NIL) T[l].parent = v;
          if(r != NIL) T[r].parent = v;
    }
    
    for(i=0 ;i<n ;i++) 
    if(T[i].parent == NIL) root = i;
    
    Depth(root,0);
    Height(root);
    
    for(i=0 ;i<n ;i++) print(i);
    
    return 0;
}


