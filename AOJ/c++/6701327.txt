#include<bits/stdc++.h>
using namespace std;

int dy[8] = {1, 0, -1, 0, 1, 1, -1, -1};
int dx[8] = {0, 1, 0, -1, 1, -1, 1, -1};
#define pii pair<int, int>
bool range(int y, int x , int h, int w){
  return (0 <= y && y < h && 0 <= x && x < w);
}
int main() {
  while(true){
    int w, h;
    cin >> w >> h;
    if(w == 0 && h == 0) break;
    int c[h][w] = {};
    for(int i = 0; i < h; i++){
      for(int j = 0; j < w; j++){
        char C;
        cin >> C;
        c[i][j] = C - '0';
      }
    }
    int ans = 0;
    queue<pii> que;
    for(int i = 0; i < h; i++){
      for(int j = 0; j < w; j++){
        if(c[i][j] == 0) continue;
        ans++;
        que.push({i, j});
        while(!que.empty()){
          auto[y, x] = que.front();
          que.pop();
          for(int k = 0; k < 8; k++){
            int ny = y + dy[k];
            int nx = x + dx[k];
            if(!range(ny, nx, h, w)) continue;
            if(c[ny][nx] == 0) continue;
            c[ny][nx] = 0;
            que.push({ny, nx});
          }
        }
      }
    }
    cout << ans << endl;
  }
  return 0;
}
