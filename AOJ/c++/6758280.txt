#include <iostream>
#include <algorithm>
#include <iterator>
#include <string>
#include <map>

using namespace std;

int main() {
    // freopen("G.in", "r", stdin);
    // freopen("G.out", "w", stdout);
    multimap<string, int> ma;

    int query; cin >> query;
    for (int i = 0; i < query; i++) {
        int q; cin >> q;
        if (q == 0) {
            string s; int z; cin >> s >> z;
            ma.insert(make_pair(s, z));
        } 
        else if (q == 1) {
            string s; cin >> s;
            auto itr1 = ma.lower_bound(s); auto itr2 = ma.upper_bound(s);
            while (itr1 != itr2) {
                if (itr1 != ma.end()) {
                    cout << itr1 -> second << endl;  
                    itr1++;  
                } else {
                    break;
                }
            }
        } else if (q == 2) {
            string s; cin >> s;
            auto itr1 = ma.lower_bound(s); auto itr2 = ma.upper_bound(s);
            while (itr1 != itr2) {
                if (itr1 != ma.end()){
                    ma.erase(itr1);
                    itr1++;
                } else {
                    break;
                }
            }
        }
        else {
            string L, R; cin >> L >> R;
            for (auto it = ma.lower_bound(L); it != ma.upper_bound(R); it++){
                if (it != ma.end()){
                    cout << (*it).first << " " << (*it).second << endl;
                }
            }
        }
    }
}
