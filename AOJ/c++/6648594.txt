#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using db = double;
using str = string;

using pi = pair<int, int>;
using pl = pair<ll, ll>;
using pd = pair<db, db>;

using vi = vector<int>;
using vb = vector<bool>;
using vl = vector<ll>;
using vd = vector<db>;
using vs = vector<str>;
using vpi = vector<pi>;
using vpl = vector<pl>;
using vpd = vector<pd>;

#define tcT template <class T
#define tcTU tcT, class U
tcT > using V = vector<T>;
tcT, size_t SZ > using AR = array<T, SZ>;
tcT > using PR = pair<T, T>;
// pairs
// #define mp make_pair
#define f first
#define s second

// vectors
// size(x), rbegin(x), rend(x) need C++17
#define sz(x) int((x).size())
#define bg(x) begin(x)
#define all(x) bg(x), end(x)
#define rall(x) x.rbegin(), x.rend()
#define sor(x) sort(all(x))
#define rsz resize
#define ins insert
#define ft front()
#define bk back()
#define pb push_back
#define eb emplace_back
#define pf push_front
// #define rtn return

#define lb lower_bound
#define ub upper_bound

/* Some Codes Skipped */

// loops
#define FOR(i, a, b) for (ll(i) = (a); (i) < (b); ++(i))
#define REP(i, a) FOR(i, 0, a)
#define ROF(i, a, b) for (ll(i) = (b)-1; (i) >= (a); --(i))
#define PER(i, a) ROF(i, 0, a)
#define rep(a) REP(_, a)
#define each(a, x) for (auto &a : x)

const int MOD = 1e9 + 7;
const int MX = 2e5 + 5;
const ll INF = 1e18;
const db PI = acos((db)-1);
const int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1}; // for every grid problem
tcT > bool ckmin(T &a, const T &b)
{
    return b < a ? a = b, 1 : 0;
} // set a = min(a,b)
tcT > bool ckmax(T &a, const T &b)
{
    return a < b ? a = b, 1 : 0;
}
tcT > void remDup(vector<T> &v)
{ // sort and remove duplicates
    sort(all(v));
    v.erase(unique(all(v)), end(v));
}
// Some Codes Skipped

inline namespace FileIO
{
    void setIn(str s) { freopen(s.c_str(), "r", stdin); }
    void setOut(str s) { freopen(s.c_str(), "w", stdout); }
    void setIO(str s = "")
    {
        cin.tie(0)->sync_with_stdio(0); // unsync C / C++ I/O streams
        // cin.exceptions(cin.failbit);
        // throws exception when do smth illegal
        // ex. try to read letter into int
        if (sz(s))
            setIn(s + ".in"), setOut(s + ".out"); // for old USACO
    }
}


#define INF 2000000

int v;
int a;

/*

dp(u,m): Costo de un caminimo minimo que comienza en u y termina en X0 y no pasa
por ningun vertice interno en S.


dp(u,m) = {
        min= (dp[u,m], dp[u,m|(1<<u)] + adj[u][u']) :  m< 2^v
        dp[0][(2^v)-1]=0                           m=(2^v)-1 &&  u=0
}


Complejidad : O( v^2 *2^v )
*/


int main()
{
    while (cin >> v >> a)
    {
        vector<vi> adj(v,vi(v,INF));
        FOR(i, 0, a)
        {
            int from, to, w;
            cin >> from >> to >> w;
            adj[from][to] = w;
        }

        vector<vi> dp(v,vi(1<<v,INF));
        dp[0][(1<<v)-1]=0;
        for(int m=(1<<v)-1; m>=0; m--){
            FOR(u,0,v){
                FOR(op,0,v){
                    if( (m>>op&1)==0 ){
                        dp[u][m]=min(dp[u][m],dp[op][m|1<< op]+adj[u][op]);
                    }
                }
            }
        }
       

        if(dp[0][0]>=INF) cout<<-1<<endl;
        else cout << dp[0][0] << endl;
    }

    return 0;
}

