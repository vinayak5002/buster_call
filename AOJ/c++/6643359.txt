#include <bits/stdc++.h>
//#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;


bool chmax(ll& p, ll q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

bool chmin(ll& p, ll q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

ll Eulers_phi(ll n){
    ll res=0;
    ll N=n;
    vll P;
    for(ll p=2;p*p<=N;p++){
        if(N%p==0){
            P.push_back(p);
            while(N%p==0)N/=p;
        }
    }
    if(N!=1)P.push_back(N);

    N=P.size();
    rep(bit,(1<<N)){
        ll k=1;
        ll t=0;
        rep(i,N){
            if(bit&(1<<i)){
                k*=P[i];
                t++;
            }
        }
        res+=(t%2==0?1:-1)*n/k;
    }
    return res;

}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    
    ll N;
    cin>>N;
    cout<<Eulers_phi(N)<<endl;

}
