#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define rep(i, s, t) for (int i = (int)(s); i < (int)(t); ++i)
#define revrep(i, t, s) for (int i = (int)(t)-1; i >= (int)(s); --i)
#define all(x) begin(x), end(x)
template <typename T> bool chmax(T& a, const T& b) { return a < b ? (a = b, 1) : 0; }
template <typename T> bool chmin(T& a, const T& b) { return a > b ? (a = b, 1) : 0; }

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);

    while (true) {
        int m, n;
        cin >> m >> n;
        if (m == 0) break;
        vector<string> s(n);
        for (auto& x : s) cin >> x;

        vector<int> pow3(m+1, 1);
        rep(i,1,m+1) pow3[i] = 3 * pow3[i-1];

        // 0: not answered, 1: no, 2: yes
        vector<int> dp(pow3[m], 1e9);
        revrep(S,pow3[m],0) {
            int cnt = 0;
            rep(i,0,n) {
                bool ok = true;
                rep(j,0,m) {
                    if ((S/pow3[j]%3) > 0 && (S/pow3[j]%3)-1 != (s[i][j]-'0')) {
                        ok = false;
                        break;
                    }
                }
                if (ok) {
                    ++cnt;
                    if (cnt > 1) break;
                }
            }
            if (cnt <= 1) dp[S] = 0;
            else {
                rep(j,0,m) {
                    if ((S/pow3[j]%3) == 0) {
                        chmin(dp[S], max(dp[S+pow3[j]], dp[S+2*pow3[j]]) + 1);
                    }
                }
            }
        }
        cout << dp[0] << "\n";
    }
}
