#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const long long INF = 1LL<<60;
const double PI = acos(-1.0);
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

bool contains(const vector<int> &S, int t)
{
    auto lb = lower_bound(S.begin(), S.end(), t);
    return (lb != S.end()) && (*lb == t);
}


int main()
{
    int n;
    cin >> n;
    vector<int> S(n);
    for (int i=0; i<n; i++) cin >> S[i];
    int q;
    cin >> q;
    vector<int> T(q);
    for (int i=0; i<q; i++) cin >> T[i];
    int cnt = 0;
    for (int i=0; i<q; i++) {
        if (contains(S, T[i]))
            cnt++;
    }
    cout << cnt << endl;
}
