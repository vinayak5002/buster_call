#include <bits/stdc++.h>
using namespace std;
vector<vector<int>> graph;
vector<bool> used;
int timestamp = 1;
vector<int> d,f;
void dfs(int cur){
    if(used[cur]) return;
    used[cur] = true;
    d[cur] = timestamp++;
    for(auto&& nx:graph[cur]){
        if(used[nx]) continue;
        dfs(nx);
    }
    f[cur] = timestamp++;
}
int main(){
    int n;
    cin >> n;
    graph = vector<vector<int>>(n);
    used = vector<bool>(n, false);
    d = vector<int>(n);
    f = vector<int>(n);
    for(int i=0; i<n; ++i){
        int k;
        cin >> k >> k;
        for(int j=0; j<k; ++j){
            int v;
            cin >> v;
            --v;
            graph[i].push_back(v);
        }
    }
    for(int i=0; i<n; ++i){
        dfs(i);
    }
    for(int i=0; i<n; ++i){
        cout << i+1 << " " << d[i] << " " << f[i] << endl;
    }
}
