#include <bits/stdc++.h>
#define _rep_times(i, n) for (ll i = 0; i < (ll)(n); ++i)
#define _rep_start_end(i, start, end) \
  for (ll i = (ll)(start); i < (ll)(end); ++i)
#define GET_REP(_1, _2, _3, NAME, ...) NAME
#define rep(...) GET_REP(__VA_ARGS__, _rep_start_end, _rep_times)(__VA_ARGS__)
using namespace std;
using ull = unsigned long long;
using ll = long long;
using Graph = vector<vector<int>>;
const int IINF = INT_MAX;
const ll INF = LONG_LONG_MAX;
const ull ULLINF = ULLONG_MAX;
bool binary(vector<int> A, int target, int s, int e) {
  if (s == e) {
    return A[s] == target;
  }

  int center = A[s + (e - s + 1) / 2];
  if (center == target) {
    return true;
  }
  if (center > target)
    return binary(A, target, s, s + (e - s + 1) / 2 - 1);
  else
    return binary(A, target, s + (e - s + 1) / 2, e);
}
int main() {
  int n, cnt = 0;
  cin >> n;
  vector<int> S(n);
  rep(i, n) cin >> S[i];
  int q;
  cin >> q;
  vector<int> T(q);
  rep(i, q) cin >> T[i];

  rep(i, q) if (binary(S, T[i], 0, n - 1)) cnt++;

  cout << cnt << "\n";
}
