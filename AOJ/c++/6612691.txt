#include <bits/stdc++.h>
using namespace std;

using Graph = vector<vector<int>>;

int main() {

    int n;
    cin >> n;
    
    Graph g(n + 10);
    for(int i = 0; i < n; i++) {
        int vertex, edges;
        cin >> vertex >> edges;
        for(int j = 0; j < edges; j++) {
            int x;
            cin >> x;
            g.at(vertex).push_back(x);
        }
    }

    vector<int> dist(n + 10, -1);
    queue<int> bfs;

    dist.at(1) = 0;
    bfs.push(1);

    while(bfs.size() != 0) {
        int v = bfs.front();
        bfs.pop();

        for(auto next_v : g.at(v)) {
            if(dist.at(next_v) != -1) {
                continue;
            }

            dist.at(next_v) = dist.at(v) + 1;
            bfs.push(next_v);
        }
    }

    for(int i = 1; i <= n; i++) {
        cout << i << " " << dist.at(i) << endl;
    }
}
