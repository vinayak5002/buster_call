#include <cstdio>
#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int main()
{
    int count;
    cin >> count;
    for (int i = 0; i < count; i++)
    {
        int position = 0;
        string bufffer;
        int cn;
        char c;

        scanf("%c", &c);
        getline(cin, bufffer);

        cin >> cn;
        for (int k = 0; k < cn; k++)
        {
            string command;
            cin >> command;
            if (command == "forward")
            {
                cin >> command;
                if (command == "char")
                {
                    if (bufffer.empty())
                    {
                    }
                    else
                    {
                        position = min(position + 1, (int)bufffer.size());
                    }
                }
                else
                {
                    while (position < bufffer.size() && bufffer[position] == ' ')
                        position++;
                    while (position < bufffer.size() && bufffer[position] != ' ')
                        position++;
                }
            }
            else if (command == "backward")
            {
                cin >> command;
                if (command == "char")
                {
                    position = max(position - 1, 0);
                }
                else
                {
                    while (position > 0 && bufffer[position - 1] == ' ')
                        position--;
                    while (position > 0 && bufffer[position - 1] != ' ')
                        position--;
                }
            }
            else if (command == "insert")
            {
                getline(cin, command);
                ungetc('\n', stdin);
                string responce;
                bool f = false;
                for (int i = 0; i < command.size(); i++)
                {
                    if (f && command[i] == '\"')
                        break;
                    if (f)
                        responce.push_back(command[i]);
                    if (command[i] == '\"')
                        f = true;
                }
                bufffer.insert(position, responce);
                position += responce.size();
            }
            else
            {
                cin >> command;
                if (command == "char")
                {
                    if (!bufffer.empty() && position != bufffer.size())
                    {
                        bufffer.erase(position, 1);
                    }
                }
                else
                {
                    if (!bufffer.empty())
                    {
                        int t = position;
                        while (t < bufffer.size() && bufffer[t] == ' ')
                            t++;
                        if (t < bufffer.size())
                        {
                            while (t < bufffer.size() && bufffer[t] != ' ')
                                t++;
                            bufffer.erase(position, t - position);
                        }
                    }
                }
            }
        }
        cout << bufffer.substr(0, position) << "^" << bufffer.substr(position) << endl;
    }
    return 0;
}
