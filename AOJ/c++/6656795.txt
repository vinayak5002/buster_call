#include <stdio.h>
#define MAX 10000
#define NIL -1

typedef struct
{
  int p, l, r;
} Node;

Node T[MAX];
int n;

//前順
void preParse(int u)
{
  if (u == NIL)
  {
    return;
  }

  printf(" %d", u);
  preParse(T[u].l);
  preParse(T[u].r);
}

//中順
void inParse(int u)
{
  if (u == NIL)
  {
    return;
  }
  inParse(T[u].l);
  printf(" %d", u);
  inParse(T[u].r);
}

//後順
void postParse(int u)
{
  if (u == NIL)
  {
    return;
  }

  postParse(T[u].l);
  postParse(T[u].r);
  printf(" %d", u);
}

int main(void)
{
  int i, id, l, r;
  int root;
  scanf("%d", &n);

  for (i = 0; i < n; i++)
  {
    T[i].p = NIL;
  }

  for (i = 0; i < n; i++)
  {
    scanf("%d %d %d", &id, &l, &r);

    T[id].l = l;
    T[id].r = r;

    if (l != NIL)
    {
      T[l].p = id;
    }

    if (r != NIL)
    {
      T[r].p = id;
    }
  }

  for (i = 0; i < n; i++)
  {
    if (T[i].p == NIL)
    {
      root = i;
    }
  }

  printf("Preorder\n");
  preParse(root); //根から探索
  printf("\n");
  printf("Inorder\n");
  inParse(root);
  printf("\n");
  printf("Postorder\n");
  postParse(root);
  printf("\n");

  return 0;
}
