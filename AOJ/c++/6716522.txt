#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> P;
typedef vector<bool> vb;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<P> vp;
typedef vector<vp> graph;
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
// const ll mod = 1000000007;
const ll MOD = 998244353;
const ll INF = 1000000000000000000;
void yn(bool ok) { cout << (ok ? "yes\n" : "no\n"); }
void Yn(bool ok) { cout << (ok ? "Yes\n" : "No\n"); }
void YN(bool ok) { cout << (ok ? "YES\n" : "NO\n"); }
template <class T>
inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template <class T>
inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}
ll dx[8] = {1, 0, -1, 0, 1, 1, -1, -1}, dy[8] = {0, 1, 0, -1, 1, -1, 1, -1};
// ll dx[4] = {1, 0, -1, 0}, dy[4] = {0, -1, 0, 1};

void solve() {
    ll n;
    cin >> n;
    if (!n) exit(0);
    vl a(n);
    for (auto& x : a) cin >> x;
    vector<vb> ok(n, vb(n));
    for (int j = 1; j < n; j += 2) {
        for (int i = 0; i < n; i++) {
            if (i + j >= n) continue;
            if (j == 1) {
                if (abs(a[i] - a[i + j]) <= 1) {
                    ok[i][i + j] = 1;
                }
            } else {
                if (ok[i + 1][i + j - 1] && abs(a[i] - a[i + j]) <= 1) {
                    ok[i][i + j] = 1;
                } else {
                    for (int k = i + 1; k < i + j; k += 2) {
                        if (ok[i][k] && ok[k + 1][i + j]) {
                            ok[i][i + j] = 1;
                        }
                    }
                }
            }
        }
    }
    vvl dp(n, vl(n));
    for (int j = 1; j < n; j++) {
        for (int i = 0; i < n; i++) {
            if (i + j >= n) continue;
            if (ok[i][i + j])
                dp[i][i + j] = j + 1;
            else {
                for (int k = i; k < i + j; k++)
                    chmax(dp[i][i + j], dp[i][k] + dp[k + 1][i + j]);
            }
        }
    }
    cout << dp[0][n - 1] << endl;
}

int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    ll t = 1;
    // cin >> t;
    for (int i = 1;; i++) solve();
    return 0;
}
