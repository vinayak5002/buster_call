#include <bits/stdc++.h>
#define rep(i,s,n) for(long long (i) = (s);(i) < (n);++i)
using namespace std;
using ll = long long;
using P = pair<int,int>;

int dfs(int n,int d,vector<vector<int>> &check){
  int hoge = -1,win = (n-1)/2;
  for(auto i:check[d]){
    if(i == 0) ++hoge;
    if(i == 2) --win;
  }
  if(hoge < win) return 0;
  if(d == n - 1) return 1;
  vector<int> a(hoge);
  rep(i,0,win){
    a[i] = 1;
  }
  sort(a.begin(),a.end());
  int ret = 0;
  if(a.size() == 0) return dfs(n,d+1,check);
  do{
    int index = 0;
    vector<int>b(hoge);
    rep(i,0,n){
      if(d == i) continue;
      if(check[d][i] == 0){
        check[d][i] = a[index]+1;
        check[i][d] = 2-a[index];
        b[index] = i;
        ++index;
      }
    }
    ret += dfs(n,d+1,check);
    for(auto i:b) {
      check[d][i] = 0;
      check[i][d] = 0;
    }
  }while(next_permutation(a.begin(),a.end()));
  return ret;
}

int main(){
  while(true){
    int n;
    cin >> n;
    if(n == 0) break;
    int m;
    cin >> m;
    vector<vector<int>> check(n,vector<int>(n));
    rep(i,0,m){
      int a,b;
      cin >> a >> b;
      --a,--b;
      check[a][b] = 2;
      check[b][a] = 1;
    }
    cout << dfs(n,0,check) << endl;
  }
}
