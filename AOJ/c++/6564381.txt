#include <iostream>
#include <vector>

using namespace std;

class Solution {
public:
	vector< vector<int> > findMatricesProduct(vector<vector<int>> &m1, vector<vector<int>> &m2) {
		int row = m1.size();
		int col = m2[0].size();
		vector< vector<int> > result(row, vector<int>(col));

		for (int i = 0; i < m1.size(); i++)
		{
			for (int j = 0; j < m2[0].size(); j++)
			{
				result[i][j] = 0;
				for (int k = 0; k < m1[0].size(); k++)
				{
					result[i][j] = result[i][j] + m1[i][k] * m2[k][j];
				}
			}
		}

		return result;
	}
};

int main()
{
	Solution solObj;
	int n;
	int m;
	int l;

	cin >> n >> m >> l;

	vector<vector<int>> matA(n, vector<int>(m));
	vector<vector<int>> matB(m, vector<int>(l));
	vector<vector<int>> result(n, vector<int> (l));

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			cin >> matA[i][j];
		}
	}

	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < l; j++)
		{
			cin >> matB[i][j];
		}
	}

	result = solObj.findMatricesProduct(matA, matB);


	for (int i = 0; i < result.size(); i++)
	{
		for (int j = 0; j < result[0].size(); j++)
		{
			cout << result[i][j] << " ";
		}

		cout << "\n";
	}
}
