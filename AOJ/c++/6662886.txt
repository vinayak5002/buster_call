#include <bits/stdc++.h>
using namespace std;
using vi = vector<int64_t>;
using vii = vector<vi>;
using pii = pair<int, int>;

#define rep(i, n) for (int64_t i = 0; i < (int64_t)(n); i++)
#define all(v) v.begin(), v.end()

// 以下可変
template <typename T>
void upgrade(T &LEFT, const T &RIGHT)
{
    if (LEFT < RIGHT)
        LEFT = RIGHT;

    return;
}
template <typename T>
void downgrade(T &LEFT, const T &RIGHT)
{
    if (LEFT > RIGHT)
        LEFT = RIGHT;

    return;
}

int64_t inf = 1e18;

int main()
{
    int64_t N;
    cin >> N;
    vi LIS(0);
    LIS.push_back(inf);

    rep(i, N)
    {
        int64_t now;
        cin >> now;
        if(LIS.back() < now){
            LIS.push_back(now);
        }
        if(LIS.back() == now)
        {
            continue;
        }
        if(LIS.back() > now)
        {
            auto itr = lower_bound(all(LIS), now);
            *itr = now;
        }
    }
    cout << LIS.size() << endl;

    return 0;
}

