#include <bits/stdc++.h>
#define rep(i,n) for (int i = 0; i < (n); ++i)
using namespace std;
using ll = long long;
using P = pair<int,int>;

int parent[10010];



int Find(int x){
    if(x==parent[x]) return x;
    else{
        return x = Find(parent[x]);
    }
}

void Union(int x,int y){
    parent[Find(x)]=Find(y);
    return;
}

void show_par(int n){
    cout << "parent" << endl;
    rep(i,n){
        cout << parent[i] << endl;
    }
}


int main(){
    int n,q;
    cin >> n >> q;
    rep(i,n) parent[i]=i;
    vector<vector<int>> com(q);

    rep(i,q){
    int c,x,y;
    cin >> c >> x >> y;
    com[i].push_back(c);
    com[i].push_back(x);
    com[i].push_back(y);
    }

    rep(i,q){
    int c,x,y;
    c=com[i][0];
    x=com[i][1];
    y=com[i][2];

    if(c==0) {
        //cout << "union " << x << " " << y<<endl;
        Union(x,y);
        //show_par(5);
    }
    else{
        if(Find(x)==Find(y)){
            cout << "1" << endl;
        }else{
            cout << "0" << endl;
        }
    }
    } 
    //show_par(n);
    return 0;
}
