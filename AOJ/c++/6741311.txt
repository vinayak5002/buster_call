#include <bits/stdc++.h>
using namespace std;
#define ll  long long
#define endl '\n'
#define FO ios_base::sync_with_stdio(false); cin.tie(NULL);
const int N = 2e5 + 5;
//ll n, ans1, ans2, m, t, mn2, mn1, sum1, sum2, mx1, mx2;
bool flag1, flag2;
//int dp[105][105];
//int arr[N];
//int grid[N][N];
int dp[2000][10001];
int val[100];
int w[100];
int n,W;
int knapsack(int i, int sum)
{
    if(i==n)
    {
        return 0;
    }
    if(dp[i][sum]!=-1)
        return dp[i][sum];

    int let=knapsack(i+1,sum);
    int pick=0;
    if(sum>=w[i])
        pick=val[i]+knapsack(i+1,sum-w[i]);

                return dp[i][sum]=max(pick,let);


}


int main() {
    FO
    cin>>n>>W;
    for(int i=0; i<n; i++)
    {
        cin>>val[i]>>w[i];
    }
    memset(dp,-1,sizeof dp);
 cout<<knapsack(0,W)<<endl;

    return 0;
}


