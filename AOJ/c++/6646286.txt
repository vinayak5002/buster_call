#include <bits/stdc++.h>
using namespace std;

void selectionSort(int N, string A[N])
{
    for (int i = 0; i <= N - 1; i++)
    {
        int minj = i;
        for (int j = i; j <= N - 1; j++)
        {
            if (A[j][1] < A[minj][1])
            {
                minj = j;
            }
        }
        string temp = A[minj];
        A[minj] = A[i];
        A[i] = temp;
    }
}

string is_Stable(int N, string A[N])
{
    bool flag = true;
    for (int i = 0; i < N - 1; i++)
    {
        if (A[i][1] == A[i + 1][1] && A[i][0] > A[i + 1][0])
        {
            flag = false;
        }
    }
    if (flag)
    {
        return "Stable";
    }
    else
    {
        return "Not Stable";
    }
}

void bubbleSort(int N, string A[N])
{
    int flag = 1;
    while (flag)
    {
        flag = 0;
        for (int j = N - 1; j >= 1; j--)
        {
            if (A[j][1] < A[j - 1][1])
            {
                string temp = A[j];
                A[j] = A[j - 1];
                A[j - 1] = temp;
                flag = 1;
            }
        }
    }
}

int main()
{
    int N;
    cin >> N;
    string A[N], B[N];
    for (int i = 0; i < N; i++)
    {
        cin >> A[i];
        cin >> B[i];
    }
    selectionSort(N, B);
    bubbleSort(N, A);

    for (int i = 0; i < N; i++)
    {
        if (i == N - 1)
        {
            cout << A[i] << endl;
        }
        else
        {
            cout << A[i] << " ";
        }
    }
    cout << is_Stable(N, A) << endl;

    for (int i = 0; i < N; i++)
    {
        if (i == N - 1)
        {
            cout << B[i] << endl;
        }
        else
        {
            cout << B[i] << " ";
        }
    }
    cout << is_Stable(N, B) << endl;
}
