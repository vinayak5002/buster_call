#include<iostream>
#include<vector>
using namespace std;

typedef pair<int,int> Pd;

int main()
{
	int V,E,r,s,t,d,sum=1;
	cin>>V>>E>>r;
	int now=r;
	
	vector<vector<Pd> > P(V,vector<Pd>());
	vector<vector<int> > minP(V,vector<int>(2));
	
	for(int i=0;i<V;i++)
	{
		if(i!=r)
		{
			minP[i][0]=-1;
			minP[i][1]=0;
		}
		else 
		{
			minP[i][0]=0;
			minP[i][1]=1;
		}
	}
	
	for(int i=0;i<E;i++)
	{
		cin>>s>>t>>d;
		P[s].push_back(Pd(t,d));
	}
	
	while(sum<V)
	{
		for(int i=0;i<P[now].size();i++)
		{
			t=P[now][i].first;
			d=P[now][i].second;
			if(minP[t][1]==0&&d>=0)
			{
				if(minP[t][0]==-1)minP[t][0]=minP[now][0]+d;
				else minP[t][0]=min(minP[t][0],minP[now][0]+d);
			}
		}
		
		int minL=-1;
		for(int i=0;i<V;i++)
		{
			if(minP[i][1]==0&&minP[i][0]>=0)
			{
				if(minL==-1)
				{
					minL=minP[i][0];
					now=i;
				}
				else if(minL>minP[i][0])
				{
					minL=minP[i][0];
					now=i;
				}
			}
		}
		sum++;
		minP[now][1]=1;
		
		if(minL==-1)break;
	}
	
	for(int i=0;i<V;i++)
	{
		if(r!=i&&minP[i][0]==-1)cout<<"INF"<<endl;
		else cout<<minP[i][0]<<endl;
	}
	return 0;
}
