#include <stdio.h>
#include <string.h>

#define M 1046527	//100万より大きい素数
#define L 14

char H[M][L];	//ハッシュを格納する配列

void insert(char str[]);
int find(char str[]);
int getChar(char ch);
long long getKey(char str[]);
int h1(int key);
int h2(int key);

int main (void){
	int n, i;
	scanf("%d", &n);
	char str[L], com[9];
	
	for(i = 0; i < M; i++){
		H[i][0] = '\0';
	}
	
	for(i = 0; i < n; i++){
		scanf("%s %s", com, str);
		
		if(com[0] == 'i'){
			insert(str);
		}
		
		else{
			if(find(str)){
				printf("yes\n");
			}
			
			else{
				printf("no\n");
			}
		}
	}
	
	return 0;
}

int getChar(char ch){
	if(strcmp(&ch, "A") == 0){		//文字列を5進数に変換
		return 1;
	}
	
	else if(strcmp(&ch, "C") == 0){
		return 2;
	}
	
	else if(strcmp(&ch, "G") == 0){
		return 3;
	}
	
	else if(strcmp(&ch, "T") == 0){
		return 4;
	}
}

long long getKey(char str[]){
	long long sum = 0, p = 1, i;
	for(i = 0; i < strlen(str); i++){
		sum += p * (getChar(str[i]));
		p *= 5;
	}
	
	return sum;
}
		
int h1(int key){
	return key % M;
}
		
int h2(int key){
	return 1 + (key % (M - 1));
}

void insert(char str[]){
	long long key = getKey(str);	//文字列を数値に変換
	int i, h;
	for(i = 0; ; i++){
		h = (h1(key) + i * h2(key)) % M;
		if(strcmp(H[h], str) == 0){
			break;
		}
		
		else if(strlen(H[h]) == 0){
			strcpy(H[h], str);
			break;
		}
	}
}


int find(char str[]){
	long long key = getKey(str);
	int i, h;
	for(i = 0; ; i++){
		h = (h1(key) + i * h2(key)) % M;
		if(strcmp(H[h], str) == 0){
			return 1;
		}
		
		else if(strlen(H[h]) == 0){		//ハッシュ配列になかったら
			return 0;
		}
	}
	
	return 0;
}
