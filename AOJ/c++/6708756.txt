#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;
#define chmin(x,y) x = min(x,y)
#define chmax(x,y) x = max(x,y)
#define BIG_NUM 2000000000
#define HUGE_NUM 4000000000000000000 //オーバーフローに注意
#define MOD 1000000007
#define EPS 0.000000001



#define SIZE 100005

struct Info{
	Info(ll arg_R,ll arg_value){
		R = arg_R;
		value = arg_value;
	}
	bool operator<(const struct Info& arg) const{

		return R < arg.R; //(PQ)
	}
	ll R,value;
};


ll A[SIZE],B[SIZE],C[SIZE];
ll rui[SIZE],enemy[SIZE];
vector<pair<ll,ll>> V[SIZE];

int main(){

	ll N,M;
	scanf("%lld %lld",&N,&M);

	for(ll i = 0; i < N; i++){

		scanf("%lld %lld %lld",&A[i],&B[i],&C[i]);

		V[B[i]].push_back(make_pair(C[i],A[i]));
	}


	int numQ;
	scanf("%d",&numQ);

	ll D,E;

	for(int loop = 0; loop < numQ; loop++){

		scanf("%lld %lld",&D,&E);
		enemy[E] += D;
	}

	ll ans = 0;

	priority_queue<Info> Q;
	for(int i = 1; i <= M; i++){
		for(int a = 0; a < V[i].size(); a++){

			Q.push(Info(V[i][a].first,V[i][a].second));

			rui[i] += V[i][a].second;
			rui[V[i][a].first+1] -= V[i][a].second;
		}

		rui[i] += rui[i-1];

		if(enemy[i] > 0 && rui[i] == 0){ //カバー範囲外

			printf("-1\n");
			return 0;
		}
		if(enemy[i] <= rui[i])continue;

		ll add = enemy[i]-rui[i];

		rui[i] += add;
		ans += add;
		rui[Q.top().R+1] -= add;
	}

	printf("%lld\n",ans);

	return 0;
}

