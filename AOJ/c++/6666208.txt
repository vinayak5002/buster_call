#include <stdio.h>

#define H 500001
#define MISSING -2000000001

int heap[H];
int left(int i){
	return 2 * i;
}
int right(int i){
	return 2 * i + 1;
}

int h;

void maxHeapify(int A[], int i){
	int l,r;
	int temp;
	int largest;
	
    l = left(i);
    r = right(i);

    if (l <= h && A[l] > A[i]){
        largest = l;
    } else {
        largest = i;
    }
    
	if( r <= h && A[r] > A[largest]){
         largest = r;
	}
    if( largest != i){
         temp = A[i];
         A[i] = A[largest];
         A[largest] = temp;
         maxHeapify(A, largest); // 再帰的に呼び出し
    }
}
int  buildMaxHeap(int A[]){
	int i;
    for( i = h/2; i >= 1; i--){
    	maxHeapify(A, i);
    }
}
int heapCheck(int A[]){
	int i;
	for(i = 0; i< H;i++){
		printf("A[%d] = %d\n",i,A[i]);
		
		if(A[i] == MISSING){
			return 0;
		}
	}
}
int main(void) {
	// your code goes here
	int i,num,count=1;
	char message[10];
	
	scanf("%d",&h);
	for(i=1;i<=H;i++){
		heap[i] = MISSING;
	}	

	while(1){
		scanf("%s %d",message,&num);
		if(message[0] == 'i'){
			heap[count] = num;
			count++;
		}else{
			if(message[1] == 'x'){
				h = count;
				buildMaxHeap(heap);
				printf("%d\n",heap[1]);
				heap[1] = MISSING;
				buildMaxHeap(heap);
				count--;
				
			}else{
				break;
			}
		}
	}
	return 0;
}


