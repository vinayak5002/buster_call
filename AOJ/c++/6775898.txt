#include "bits/stdc++.h"
using namespace std;

typedef complex<double> xy_t;

double dot_product(xy_t a, xy_t b){
    return (conj(a)*b).real();
}

double cross_product(xy_t a, xy_t b){
    return (conj(a)*b).imag();
}

xy_t projection(xy_t p, xy_t b){//pのb方向への投影
    return b*dot_product(p,b)/norm(b);
}

xy_t P[110];

int main(){
    int n;
    double x, y;
    cin >> n;
    for(int i=0; i<n; i++){
        cin >> x >> y;
        P[i] = xy_t(x,y);
    }

    double sum = 0.0;

    
    for(int i=0; i+2<n; i++){
        xy_t a = P[0], b = P[i+1], c = P[i+2];
        sum += cross_product(b-a, c-a) / 2;
    }

    printf("%.1f\n", abs(sum));    
}
