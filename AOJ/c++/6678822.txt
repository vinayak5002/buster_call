#include <bits/stdc++.h>
//#include <atcoder/all>
using namespace std;

#define all(x) (x).begin(),(x).end()
#define print(x) cout << (x) << '\n'
typedef long long ll;
typedef long double ld;
using P = pair<int,int>;
using pll = pair<ll,ll>;
using Graph = vector<vector<int>>;

const ll MOD = 1000000007;
//const ll MOD = 998244353;

template <typename T> inline bool chmax(T &a, T b) {return a < b ? a = b, true : false;}
template <typename T> inline bool chmin(T &a, T b) {return a > b ? a = b, true : false;}

template <typename T>
void vin(vector<T> &v) {
    int l = v.size();
    for(int i = 0; i < l; i++) cin >> v[i];
}

template <typename T>
void vout(vector<T> &v) {
    int l = v.size();
    for(int i = 0; i < l; i++) cout << v[i] << (i < l - 1 ? ' ' : '\n');
}

int main() {
    cin.tie(0); cout.tie(0);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(18);

    int n;  cin >> n;
    ll N = n;
    vector<int> p;
    for(int i = 2; i * i <= n; i++) {
        if(N % i == 0) {
            p.push_back(i);
            while(N % i == 0) {
                N /= i;
            }
        }
    }
    if(N > 1) {
        p.push_back(N);
    }
    int siz = p.size();
    int ans = 0;
    for(int i = 0; i < (1 << siz); i++) {
        int tmp = 1;
        int cnt = 0;
        for(int j = 0; j < siz; j++) {
            if(i & (1 << j)) {
                tmp *= p[j];
                cnt++;
            }
        }
        if(cnt % 2) {
            ans -= n / tmp;
        } else {
            ans += n / tmp;
        }
    }
    print(ans);
    return 0;
}
