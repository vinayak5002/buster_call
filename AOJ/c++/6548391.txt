#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ld = long double;
using P = pair<int, int>;
using Graph = vector<vector<int>>;
using vi = vector<int>;
using vl = vector<long>;
using vll = vector<long long>;
using vvi = vector<vi>;
using vvl = vector<vl>;
using vvll = vector<vll>;
using vs = vector<string>;
using vc = vector<char>;
using vvc = vector<vc>;
using pii = pair<long long, long long>;
const long double EPS = 1e-10;
const long long INF = 1e18;
const long double PI = acos(-1.0L);
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); i++)
#define rep(i, n) for (ll i = (0); i < (ll)(n); i++)
#define rrep(i, n) for (ll i = (1); i < (ll)(n + 1); i++)
#define repd(i, n) for (ll i = n - 1; i >= 0; i--)
#define rrepd(i, n) for (ll i = n; i >= 1; i--)
#define ALL(n) begin(n), end(n)
#define IN(a, x, b) (a <= x && x < b)
#define INIT                          \
    std::ios::sync_with_stdio(false); \
    std::cin.tie(0);
template <class T>
inline T CHMAX(T& a, const T b) {
    return a = (a < b) ? b : a;
}
template <class T>
inline T CHMIN(T& a, const T b) {
    return a = (a > b) ? b : a;
}

int main() {
    string s1, s2;
    cin >> s1 >> s2;
    ll x = s1.size();
    ll y = s2.size();
    vvll dp(x + 1, vll(y + 1, 0));
    rep(i, x + 1) { dp.at(i).at(0) = i; }
    rep(i, y + 1) { dp.at(0).at(i) = i; }
    rrep(i, x) {
        rrep(j, y) {
            if (i == j && s1.at(i - 1) == s2.at(j - 1)) {
                dp.at(i).at(j) =
                    min(min(dp.at(i - 1).at(j), dp.at(i).at(j - 1)),
                        dp.at(i - 1).at(j - 1));
            } else {
                dp.at(i).at(j) =
                    min(min(dp.at(i - 1).at(j), dp.at(i).at(j - 1)),
                        dp.at(i - 1).at(j - 1) + 1);
            }
        }
    }
    cout << dp.at(x).at(y) << endl;
}
