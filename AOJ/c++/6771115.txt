#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define reps(i,start,end) for(int i = start; i < (int)(end); i++)
#define ll long long
#define print(t) cout << t << endl
#define all(a)  (a).begin(),(a).end()
// << std::fixed << std::setprecision(0)
const ll INF = 1LL << 60;

template<class T> void chmin(T& a, T b){
 if(a > b){
  a = b;
 }
}

template<class T> void chmax(T& a, T b){
 if(a < b){
  a = b;
 }
}

template<class Tp>
bool zero (const Tp &x) {
    return x == 0;
}

template<class Tp, class... Args>
bool zero (const Tp &x, const Args& ...args) {
    return zero(x) and zero(args...);
}
int to_i(string s){
  int ans = 0;
  int p = 1;
  rep(j,(int)s.size()){
    if(s[j] != 'm' &&s[j] != 'c' && s[j] != 'x' && s[j] != 'i'){
        p = s[j] -'0';
      }else if(s[j] == 'm'){
        ans+= p * 1000;
        p = 1;
      }else if(s[j] == 'c'){
        ans += p * 100;
        p = 1;
      }else if(s[j] == 'x'){
        ans += p * 10;
        p = 1;
      }else{
        ans += p;
        p = 1;
      }
  }
  return ans;
}
string to_str(int m){
  string ans = "";
  if(m >=1000){
    int th = m /1000;
    m %= 1000;
    if(th == 1){
      ans += 'm';
    }else{
      string s =  to_string(th) + 'm';
     ans += s;
    }
  }
  if(m >=100){
    int hu = m /100;
    m%=100;
    if(hu == 1){
      ans += 'c';
    }else{
      string s =  to_string(hu) + 'c';
     ans += s;
    }
  }
  if(m >=10){
    int th = m /10;
    m%=10;
    if(th == 1){
      ans += 'x';
    }else{
      string s =  to_string(th) + 'x';
     ans += s;
    }
  }
  if(m!= 0){
    if(m == 1){
      ans += 'i';
    }else{
      string s =  to_string(m) + 'i';
     ans += s;
    }
  }
  return ans;

}
int main(){
  int n;cin >> n;
  rep(i,n){
    string s,t;cin >> s >> t;
    int a = to_i(s);
    int b = to_i(t);
    int c = a + b;
    cout << to_str(c) << endl;
  }
  
}

