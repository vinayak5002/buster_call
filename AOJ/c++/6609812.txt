#include<stdio.h>
#include<iostream>
#include <stdlib.h>
#define NIL -1

using namespace std;


struct Node{int left, right, parent = -1;};

Node tree[25];
int n, cur, leftChild, rightChild;

void preOrderPrint(int n){
    if(n == NIL) return;
     cout << " " << n;
    preOrderPrint(tree[n].left);
    preOrderPrint(tree[n].right);
}

void inOrderPrint(int n){
    if(n == NIL) return;
    inOrderPrint(tree[n].left);
     cout << " " << n;
    inOrderPrint(tree[n].right);
}

void postOrderPrint(int n){
    if(n == NIL) return;
    postOrderPrint(tree[n].left);
    postOrderPrint(tree[n].right);
     cout << " " << n;
}


int main(){
    scanf("%d", &n);
    // for(int i = 0; i < n; i++){
    //     tree[i].parent = NIL;
    //     // tree[i].left = NIL;
    //     // tree[i].right = NIL;
    // }

    for(int i = 0; i < n; i++){
        scanf("%d %d %d", &cur, &leftChild, &rightChild);
        tree[cur].left = leftChild;
        tree[cur].right = rightChild;
        if(leftChild != NIL) tree[leftChild].parent = cur;
        if(rightChild != NIL) tree[rightChild].parent = cur;
    }

    int root;

    for(int i = 0; i < n; i++){
        if(tree[i].parent == NIL){
            root = i;
            break;
        }
    }

    cout<<"Preorder"<<endl;
    preOrderPrint(root);
    cout<<endl;
    cout<<"Inorder"<<endl;
    inOrderPrint(root);
    cout<< endl;
    cout<<"Postorder"<<endl;
    postOrderPrint(root);

    return 0;
}
