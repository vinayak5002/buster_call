#include <iostream>
using namespace std;
int par[100000];
int N,Q,buf;
typedef long long ll;
char c;
ll ans;
bool f[100000];//标记 
int cal(int id){
	//计算最近的父节点index 
	id=par[id];
	while(!f[id]){
		id=par[id];
	}
	return (id+1);
}
void init(int n){
	for(int i=0;i<n;i++) par[i]=i;
}
int main(){
	f[0]=true;
	while(scanf("%d%d",&N,&Q),N&&Q){
		init(N);
		ans=0;
		for(int i=1;i<N;i++){
			scanf("%d",&par[i]);
			par[i]--;
			f[i]=false;
		}
//		for(int i=0;i<N;i++) printf("%d: %d\n",i+1,par[i]+1);
//		printf("%d\n");
		for(int i=0;i<Q;i++){
			getchar();
			scanf("%c",&c);
			scanf("%d",&buf);
			switch(c){
				case 'M':f[--buf]=true;
				break;
				case 'Q':ans=ans+cal(--buf);
				break;	
			}
		}
		printf("%d\n",ans);	
	}
	return 0;
}
