#include<bits/stdc++.h>
using ll= long long;
using ld = long double;
#define REP(i,n) for(ll i=0;i<ll(n);i++)
#define RREP(i,n) for(ll i=1;i<ll(n+1);i++)
#define FOR(i,a,b) for(ll i=a;i<=ll(b);i++)
#define ALL(x) x.begin(),x.end()

#define JU_5 110000
#define JU_10_9_7 1000000007
#define IN(T, x) T x;cin >> x;
#define INF (int)1e9 //10^9:∞
#define LLINF (long long)1e12
#define MOD (int)1e9+7 //10^9+7:合同式の法
// #define PI 3.141592653589
// const double PI = acos(-1.0);
#define PB push_back
#define Fir first
#define Sec second
#define __MAGIC__ ios::sync_with_stdio(false);cin.tie(nullptr);

#define YESNO(T) if(T){cout<<"YES"<<endl;}else{cout<<"NO"<<endl;}
#define yesno(T) if(T){cout<<"yes"<<endl;}else{cout<<"no"<<endl;}
#define YesNo(T) if(T){cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

#define Graph vector<vector<int>>
#define GraphL vector<vector<ll>>
#define PII pair<int,int>
#define PLL pair<ll,ll>
#define VI vector<int>
#define VL vector<ll>
#define VVI vector<vector<int>>  // Graph
#define VVL vector<vector<ll>>  // Graph
#define VPII vector<pair<int,int>>
#define VPLL vector<pair<ll, ll>>


#define DDD fixed<<setprecision(17)

using namespace std;
/*..................DEFINE GLOBAL VARIABLES...................*/


/*.....................DEFINE FUNCTIONS ......................*/
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return true; } return false; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return true; } return false; }

/*.........................memo0

...........................*/

/*.........................memo1

...........................*/

/*.........................memo2

...........................*/
ll w,h;
ll field[100][100];
bool seen[100][100];

ll dx[8]={0,1,1,1,0,-1,-1, -1};
ll dy[8]={1,1,0,-1,-1,-1,0, 1};

bool dfs(ll x, ll y) {
    if(seen[x][y])return field[x][y]==1;
    seen[x][y]=true;
    for(ll i=0;i<8;i++) {
        ll nx = x+dx[i];
        ll ny = y+dy[i];
        if(nx>=h || ny>=w || nx<0 || ny<0) continue;
        if(field[nx][ny]==0)continue;
        dfs(nx,ny);
    };
    return field[x][y]==1;
}

signed main() {
    __MAGIC__
    vector<ll> vec;
    ll res;
    do {
        cin >> w >> h;
        if(w==0 && h==0) break;
        memset(field, 0, sizeof(field));
        memset(seen, 0, sizeof(seen));
        res=0;
        REP(i,h)REP(j,w) {
            cin >> field[i][j];
        }
        REP(i,h)REP(j,w) {
            if(seen[i][j])continue;
            if(i>=h || j>=w || i<0 || j<0) continue;
            if(field[i][j]==0)continue;
            if(dfs(i,j)){
                res++;
            }
        }
    vec.push_back(res);
    } while(true);
    for(auto v : vec) {
        cout << v << endl;
    }
    return 0;
}
