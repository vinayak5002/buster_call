#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=998244353;
#define rep(i,a) for (int i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

int t=INF;
void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int n,m;
	cin>>n>>m;
	if(n==0){
		t=-1;
		return;
	}
	vector<string> S(n);
	string T;
	rep(i,n) cin>>S[i];
	rep(i,m){
		string x;
		cin>>x;
		T+=x;
	}
	int L=T.size();
	int ans=0;
	vector<vector<bool>> p(n,vector<bool>(L));
	rep(i,n){
		rep(j,L+1-(int)(S[i].size())){
			p[i][j]=1;
			rep(k,(int)(S[i].size())){
				if(S[i][k]!=T[j+k]){
					p[i][j]=0;
					break;
				}
			}
		}
	}
	vector<vector<bool>> dp(L+1,vector<bool>(1<<n));
	rep(i,L){
		dp[i][0]=1;
		rep(j,(1<<n)){
			if(!dp[i][j]) continue;
			rep(k,n){
				if(j&(1<<k)) continue;
				if(p[k][i]){
					dp[i+(int)(S[k].size())][j|(1<<k)]=1;
				}
			}
		}
	}
	rep(i,L+1) if(dp[i][(1<<n)-1]) ans++;
	cout<<ans<<"\n";
}


