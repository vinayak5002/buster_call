#include<bits/stdc++.h>
//#include<atcoder/all>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
//using namespace atcoder;
typedef long long ll;
const ll INF = 1e18;
//typedef modint998244353 mint;
//cout << fixed << setprecision(12);



int main(){
	int n;
	cin >> n;

	// 言語人のリスト
	vector<unordered_set<int>> a(26*26, unordered_set<int>());

	// 行ける（隣接行列）
	vector<vector<bool>> ikeru(n, vector<bool>(n,false));

	// 各人の言語のリスト
	vector<vector<int>> llist(n, vector<int>(0));
	int k;
	string l;
	for (int i=0; i<n; i++){
		cin >> k;
		for (int j=0; j<k; j++){
			cin >> l;
			int targ = (l[0] - 'a') * 26 - (l[1] - 'a');
			llist[i].push_back(targ);
			a[targ].insert(i);
		}
	}

	// 隣接行列をつくる.
	for (int i=0; i<n; i++){
		for (int j=i+1; j<n; j++){
			for (int k: llist[i]){
				if (a[k].find(j) != a[k].end()){
					ikeru[i][j] = true;
					ikeru[j][i] = true;
				}
			}
		}
	}

	vector<bool> ir(n, false);
	vector<bool> jr(n, false);
	ll ans = 0;

	for (int i=0; i<n; i++){
		for (int j=0; j<n; j++){
			if (i==j) continue;
			for(int k=0; k<n; k++){
				if (ikeru[i][k] && k!=j) ir[k] = true;
				else ir[k] = false;
			}
			for(int k=0; k<n; k++){
				if (ikeru[j][k] && k!=i) jr[k] = true;
				else jr[k] = false;
			}
			ll t=0,s=0,u=0;
			for(int k=0; k<n; k++){
				if (ir[k]){
					if (jr[k]){
						s++;
					}else{
						t++;
					}
				}else{
					if (jr[k]){
						u++;
					}
				}
			}
			ans += t*s*u;
			ans += s*(s-1)*u;
			ans += s*(s-1)*t;
			ans += s*(s-1)*(s-2);
		}
	}
	cout << ans << endl;
}
