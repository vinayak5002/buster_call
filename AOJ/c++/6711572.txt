#include<iostream>
#include<algorithm>
#include<map>
#include<queue>
#include<stack>
#include<set>
#include<bitset>
#include<vector>
#include<string>

#define rep(i,n) for(int i=0;i<(n);i++)
using namespace std;
using ll=long long;
using P=pair<int,int>;
using P_S=pair<int,string>;

int n;
int all_min=1001;
vector<int>w;
vector<int>c;
vector<bool>seen;

int solve1(){
    int ans1=0;
    int ans2=0;
    rep(i,n){
        if(seen[i]==false){
            vector<int>num;
            num.push_back(w[i]);
            seen[i]=true;
            int search=c[i];
            int flag=0,sum=w[i];
            int min_num=w[i];
            while(1){
                rep(j,n){
                    if(w[j]==search){
                        if(seen[j]){
                            flag=1;
                            break;
                        }
                        num.push_back(w[j]);
                        if(min_num>w[j]) min_num=w[j];
                        sum+=w[j];
                        seen[j]=true;
                        search=c[j];
                        break;
                    }
                }
                if(flag)break;
            }
            /*rep(j,num.size())cout<<num[j]<<" ";
            cout<<endl;*/
            ans1+=sum+(num.size()-2)*min_num;
            ans2+=sum+min_num+(num.size()+1)*all_min;
        }
    }
    if(ans1<ans2) return ans1;
    return ans2;
}

int main()
{
    cin>>n;
    w.resize(n);
    c.resize(n);
    seen.resize(n);
    rep(i,n) seen[i]=false;

    rep(i,n) {
        int a;
        cin>>a;
        if(all_min>a)all_min=a;
        w[i]=c[i]=a;
    }
    sort(c.begin(),c.end());
    cout<<solve1()<<endl;
}
