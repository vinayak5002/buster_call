#include <bits/stdc++.h>
using namespace std;

// Minkowski's distance
int main() {
    // 入力
    int n;
    cin >> n;
    vector<double> X(n);
    vector<double> Y(n);
    for (int i=0; i<n; i++){
        cin >> X.at(i);
    }
    for (int i=0; i<n; i++){
        cin >> Y.at(i);
    }
    // 距離の計算
    float inf = numeric_limits<float>::infinity();
    vector<float> P = { 1, 2, 3, inf };
    for (int i=0; i<P.size(); i++){
        double D = 0;
        if(isinf(P.at(i))){
            for(int j=0; j<X.size(); j++){
                D = max(abs(X.at(j) - Y.at(j)), D);
            }
        }
        else {
            double d = 0;
            for(int j=0; j<X.size(); j++){
                d += pow(abs(X.at(j) - Y.at(j)), P.at(i));
            }
            D = pow(d, 1/P.at(i));
        }
        cout << fixed << setprecision(16);
        cout << D << endl;
    }
    return 0;
}

