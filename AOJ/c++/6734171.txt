#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

struct Fast {
  Fast() {
    std::cin.tie(0);
    ios::sync_with_stdio(false);
  }
} fast;

void koch(double x1, double x2, double y1, double y2, uint32_t depth,
          uint32_t n) {
  if (depth == n) {
    printf("%.5f %.5f\n", x2, y2);
    return;
  }
  double dx, dy, sx, sy, ux, uy, tx, ty;
  dx = (x2 - x1) / 3;
  dy = (y2 - y1) / 3;
  sx = x1 + dx;
  sy = y1 + dy;
  tx = sx + dx;
  ty = sy + dy;
  ux = sx + cos(M_PI / 3) * dx - sin(M_PI / 3) * dy;
  uy = sy + sin(M_PI / 3) * dx + cos(M_PI / 3) * dy;
  koch(x1, sx, y1, sy, depth + 1, n);
  koch(sx, ux, sy, uy, depth + 1, n);
  koch(ux, tx, uy, ty, depth + 1, n);
  koch(tx, x2, ty, y2, depth + 1, n);
}

int main() {
  uint32_t n;
  scanf("%d", &n);
  printf("0.00000 0.00000\n");
  koch(0, 100, 0, 0, 0, n);

  return 0;
}

