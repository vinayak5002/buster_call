#!/usr/bin/env PyPy3

from collections import Counter, defaultdict, deque
import itertools
import re
import math
from functools import reduce
import operator
import bisect
from heapq import *
import functools

mod=998244353

import sys
class Dice:
    def __init__(self,dice):
        self.d = dice[:]
    def move(self,s):
        self.n = len(s)
        for i in range(self.n):
            if s[i] == 'S':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[4],self.d[0],self.d[2],self.d[3],self.d[5],self.d[1]
            elif s[i] == 'N':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[1],self.d[5],self.d[2],self.d[3],self.d[0],self.d[4]
            elif s[i] == 'W':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[2],self.d[1],self.d[5],self.d[0],self.d[4],self.d[3]
            elif s[i] == 'E':
                self.d[0],self.d[1],self.d[2],self.d[3],self.d[4],self.d[5] = self.d[3],self.d[1],self.d[0],self.d[5],self.d[4],self.d[2]
        return self.d
    def calc_right(self,up,flont):
        self.li = []
        if flont == 3 or flont == 4:
            self.move('W')
            self.li.append('E')
        while self.d[1] != flont:
            self.move('S')
            self.li.append('N')
        while self.d[0] != up:
            self.move('W')
            self.li.append('E')
        ans = self.d[2]
        for s in self.li[::-1]:
            self.move(s)

        return ans
d = list(map(int,input().split()))
dicer = Dice(d)
q = int(input())
for _ in range(q):
    n,m=map(int,input().split())
    print(dicer.calc_right(n,m))
