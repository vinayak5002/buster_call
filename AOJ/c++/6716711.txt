#include<stdio.h>
#define MAX 100005
#define NIL -1

typedef struct{int p,l,r;}Node;
Node T[MAX];
int n,D[MAX];

void print(int u){
    int i,c;
    printf("node %d:",u);
    printf("parent = %d,",T[u].p);
    printf("depth = %d",D[u]);
    
    if( T[u].p ==NIL)printf("root,");
    else if( T[u].l==NIL)printf("leaf,");
    else printf("internal node,");
    
    printf("[");
    for(i=0,c=T[u].l;c!=NIL;i++,c=T[c].r){
        if(i>0)printf(",");
        printf("%d",c);
    }
    printf( "]\n");
}

int rec(int u,int p){
    D[u]=p;
    if(T[u].r!=NIL)rec(T[u].r,p);
    if(T[u].l!=NIL)rec(T[u].l,p+1);
}
int main(){
    int i,j,a,b,c,d,e;
    scanf("%d",&n);
    for(i=0;i<n; i++){
        T[i].p=T[i].l=T[i].r=NIL;
    }
    
    for(i=0;i<n;i++){
        scanf("%d",&b);
        scanf("%d",&a);
        for(j=0;j<d;j++){
            scanf("%d",&c);
            if(j==0)T[b].l=c;
            else T[d].r=c;
            d=c;
            T[c].p=b;
        }
    }
    for(i=0;i<n;i++){
        if(T[i].p==NIL) e=i;
    }
    rec(e,0);
    for(i=0;i<n;i++){
        print(i);
    }
    return 0;
}



