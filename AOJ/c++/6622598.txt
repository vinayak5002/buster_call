#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

#define rep(i, a, b) for(ll i = (ll)a; i < (ll)b; i++)
#define irep(i, v) for(auto i = (v).begin(); i != (v).end(); i++)
#define ALL(v) (v).begin(), (v).end()
#define SZ(v) (ll)(v).size()

const ll INF = 1e18;
const ld EPS = 1e-10;
const ll MOD = 1e9 + 7;
const ld PI = M_PI;

ll cnt = 0;

void merge(vector<ll> &a, ll lef, ll rig){
    ll mid = (lef + rig) / 2;
    ll n1 = mid - lef, n2 = rig - mid;
    vector<ll> l(n1), r(n2);
    rep(i, 0, n1) l[i] = a[lef + i];
    rep(i, 0, n2) r[i] = a[mid + i];
    l.push_back(INF);
    r.push_back(INF);
    ll i = 0, j = 0;
    rep(k, lef, rig){
        if(l[i] <= r[j]){
            a[k] = l[i];
            i++;
        }
        else{
            a[k] = r[j];
            j++;
            cnt += (n1 - i);
        }
    }
}

void merge_sort(vector<ll> &a, ll lef, ll rig){
    if(rig - lef > 1){
        ll mid = (lef + rig) / 2;
        merge_sort(a, lef, mid);
        merge_sort(a, mid, rig);
        merge(a, lef, rig);
    }
}

int main(){
  cin.tie(0);
  ios::sync_with_stdio(false);
  srand((unsigned)time(NULL));
  cout << fixed << setprecision(20);

  ll n;
  cin >> n;
  vector<ll> a(n);
  rep(i, 0, n) cin >> a[i];
  merge_sort(a, 0, n);
  /*rep(i, 0, n){
      if(i) cout << " ";
      cout << a[i];
  }
  cout << endl;*/
  cout << cnt << endl;




  return 0;
}
