#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
#define mem(i,a) memset(i,a,sizeof(i))
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
#define pii pair<int,int>
const db eps=1e-9;
const ll INF = 0x3f3f3f3f;
const int siev =1000000+5;
const int inf = 0x3f3f3f3f;
const int DMAX = 1000000 + 100;
const ll MOD = 32768;
const ll LMOD = 1000000007;
const int hmod = 202010923;
template<class T> inline void read(T &x){
    x=0;
    T f=1;
    char ch=getchar();
    while(ch<'0' || ch>'9'){
        if(ch=='-'){
            f=-1;
        }
        ch=getchar();
    }
    while(ch<='9' && ch>='0'){
        x=x*10+(ch-'0');
        ch=getchar();
    }
    x*=f;
}
struct Point{
    double x,y;
    Point(){}
    Point(db a,db b): x(a),y(b){}
    Point operator +(Point p){
        return Point(x+p.x,y+p.y);
    }
    Point operator -(Point p){
        return Point(x-p.x,y-p.y);
    }
    Point operator *(double k){
        return Point(x*k,y*k);
    }
    Point operator /(double k){
        return Point(x/k,y/k);
    }
};
struct Line{
    Point A,B;
    Line(){}
    Line(Point A,Point B): A(A),B(B){}
};
double abs(Point p){
    return sqrt(p.x*p.x+p.y*p.y);
}
double dot(Point A,Point B){
    return A.x*B.x+A.y*B.y;
}
Point vec(Line L){
    return L.B-L.A;
}
Point projection(Point p,Line L){
    return L.A+vec(L)/abs(vec(L))*dot(p-L.A,vec(L))/abs(vec(L));    
}
int q;
int main(){
    Line L;
    cin>>L.A.x>>L.A.y>>L.B.x>>L.B.y;
    cin>>q;
    Point P;
    while(q--){
        cin>>P.x>>P.y;
        Point H=projection(P,L);
        printf("%.9lf %.9lf\n",H.x,H.y);
    }
    return 0;
}
