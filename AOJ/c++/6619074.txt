#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

#include <bits/stdc++.h>

#define _overload(_1, _2, _3, _4, name, ...) name
#define _rep1(Itr, N) _rep3(Itr, 0, N, 1)
#define _rep2(Itr, a, b) _rep3(Itr, a, b, 1)
#define _rep3(Itr, a, b, step) for (i64 Itr = a; Itr < b; Itr += step)
#define repeat(...) _overload(__VA_ARGS__, _rep3, _rep2, _rep1)(__VA_ARGS__)
#define rep(...) repeat(__VA_ARGS__)

#define ALL(X) begin(X), end(X)

using namespace std;
using i64 = int64_t;
using u64 = uint64_t;

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);

  i64 n;
  while (cin >> n, n > 0) {
    i64 ans = 0;
    rep(i, 1, n) {
      rep(j, i + 2, n) {
        // [i, j)
        if (n == j * (j - 1) / 2 - i * (i - 1) / 2) ans++;
      }
    }

    cout << ans << endl;
  }

  return 0;
}
