# selection sort



n = int(input())
A = list(map(str, input().split()))
input_A = [x for x in A]

select_A = [x for x in A]
select_input_A = [x for x in A]


def BubbleSort(n, A):
	for i in range(n):
		for j in reversed(range(i+1, n)):
			if int(A[j][1]) < int(A[j-1][1]):
				ws = A[j-1]
				A[j-1] = A[j]
				A[j] = ws

	print(" ".join(A))
	
	same_numlist = []
	for i in range(n-1):
		same_num = []
		same_num.append(A[i])
		for j in range(i+1, n):
			if A[i][1] == A[j][1]:
				same_num.append(A[j])
		
		if len(same_num) > 1:
			same_numlist.append(same_num)

	indexs = []
	for same_num in same_numlist:
		for j in same_num:
			for k in range(n):
				if j == input_A[k]:
					indexs.append(k)
		
		if indexs != sorted(indexs):
			print("Not Stable")
			return
	
	print("Stable")


			




def SelectionSort(n, B):
	for i in range(n):
		minj = i
		for j in range(i, n):
			if B[j][1] < B[minj][1]:
				minj = j

		ws = B[i]
		B[i] = B[minj]
		B[minj] = ws
	
	print(" ".join(B))

	
	same_numlist = []
	for i in range(n-1):
		same_num = []
		same_num.append(B[i])
		for j in range(i+1, n):
			if B[i][1] == B[j][1]:
				same_num.append(B[j])
		
		if len(same_num) > 1:
			same_numlist.append(same_num)



	indexs = []
	for same_num in same_numlist:
		for j in same_num:
			for k in range(n):
				if j == select_input_A[k]:
					indexs.append(k)
		
		if indexs != sorted(indexs):
			print("Not Stable")
			return
	
	print("Stable")



BubbleSort(n, A)
SelectionSort(n, select_A)


