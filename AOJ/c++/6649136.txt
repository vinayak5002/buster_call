#include <iostream>
#include <stdio.h>

#define MAX 100051
#define NIL -1

using namespace std;

struct Node {
	int parent, left, right;
};

Node T[MAX];
int Depth[MAX];

void setDepth(int u,int parent) {

	Depth[u] = parent;
	if (T[u].right != NIL) setDepth(T[u].right,parent);
	if (T[u].left != NIL) setDepth(T[u].left, parent+1);

}

void print(int u) {

	int c = T[u].left;
	cout << "node " << u << ": ";
	cout << "parent = " << T[u].parent << ", ";
	cout << "depth = " << Depth[u] << ", ";

	if (T[u].parent == NIL) cout << "root, [";
	else if (T[u].left == NIL) cout << "internal node, [";
	else cout << "leaf, [";

	for (int i = 0; c != NIL; i++, c = T[u].right) {
		if (i > 0) cout << ", ";
		cout << c;
	}

	cout << "]" << endl;

}

int main() {

	int n;
	int id, k,c,l,r=0;
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		cin >> id >> k;
		for (int j = 0; j < k; j++) {
			cin >> c;
			if (j == 0) T[id].left = c;
			else T[l].right = c;
			l = c;
			T[c].parent = id;
		}
	}

	for (int i = 0; i < n; i++) {
		if (T[i].parent == NIL) r = i;
	}

	setDepth(r, 0);

	for (int i = 0; i < n; i++)print(i);

	return 0;
}
