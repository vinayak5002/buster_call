#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	solve();
}

void solve(){
	int N,M;
	cin>>N>>M;
	vector<int> to(N,-1);
	vector<int> cou(N);
	vector<ll> dp(N,1);
	rep(i,M){
		int s,t;
		cin>>s>>t;
		to[s-1]=t-1;
		cou[t-1]++;
	}
	ll ans=1;
	queue<int> q;
	rep(i,N) if(cou[i]==0) q.push(i);
	while(!q.empty()){
		int a=q.front();
		q.pop();
		if(to[a]==-1){
			ans=(ans*(dp[a]+1))%mod;
			dp[a]=-1;
			continue;
		}
		dp[to[a]]=(dp[to[a]]*(1+dp[a]))%mod;
		cou[to[a]]--;
		if(cou[to[a]]==0) q.push(to[a]);
		dp[a]=-1;
	}
	rep(i,N){
		if(dp[i]==-1) continue;
		if(to[i]==-1){
			ans=(ans*(dp[i]+1))%mod;
			continue;
		}
		int ind=i;
		ll tmp=1;
		while(dp[ind]!=-1){
			tmp=(tmp*dp[ind])%mod;
			dp[ind]=-1;
			ind=to[ind];
		}
		ans=(ans*(tmp+1))%mod;
	}
	cout<<ans<<"\n";
}

