#include<stdio.h>
#define STILL 0
#define VISIT 1
#define FINISH 2
#define INFTY 1<<21
#define NIL -1
#define N 100

int A[N][N],n;

void dijkstra(){
	int u,min;
	int weight[N],state[N];
	//int parent[N]
	
	for(int i=0;i<n;i++){
		weight[i]=INFTY;
		//parent[i]=NIL;
		state[i]=STILL;
	}
	weight[0]=0;//初回探索地点が持つ辺の重み
	state[0]=VISIT;
	while(1){//無限ループ処理
		min=INFTY;
		u=NIL;
		for(int i=0;i<n;i++){
			if(state[i]!=FINISH && weight[i]<min){
				min=weight[i];
				u=i;
			}
		}
		if(u==NIL)break;//辺なし
		state[u]=FINISH;
		
		for(int v=0;v<n;v++){
			if(state[v]!=FINISH && A[u][v] !=NIL){
				if(weight[u]+A[u][v]<weight[v]){
					weight[v]=weight[u]+A[u][v];
					//parent[v]=u;
					state[v]=VISIT;
				}
			}
		}
	}
	for(int i=0;i<n;i++){
		printf("%d %d\n",i,weight[i]);
	}
}
		
int main(void){
	int i,j,u,k,v,c;
	scanf("%d\n",&n);
	
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			A[i][j]=INFTY;
		}
	}
	for(i=0;i<n;i++){
		scanf("%d %d\n",&u,&k);
		for(j=0;j<k;j++){
			scanf("%d %d",&v,&c);
			A[u][v]=c;
		}
	}
	
	dijkstra();
	
	return 0;
}

