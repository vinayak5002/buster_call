#include <stdio.h>
#include <string.h>

int a[400000], b[200000];

int upper_bound(int *upper, int n, int k)
{
	int left, right, center;
	int lower;

	if (n == 0){
		*upper = 0;
		return (0);
	}

	left = 0;
	right = n - 1;

	while (left <= right){
		center = (left + right) / 2;
		if (a[center] > k){
			right = center - 1;
		}
		else if (a[center] < k){
			left = center + 1;
		}
		else {
			left = center;
			break;
		}
	}
	if (a[n - 1] < k){
		*upper = n;
		return (0);
	}
	else {
		lower = left;
		while (lower > 0 && a[lower - 1] == k){
			lower--;
		}

		*upper = lower;
		while (*upper < n - 1 && a[*upper] == k){
			(*upper)++;
		}

	}

	if (a[lower] == k){
		return (1);
	}
	return (0);
}

int main(void)
{
	int n, m;
	int pos;
	int i;
	scanf("%d", &n);
	for (i = 0; i < n; i++){
		scanf("%d", &a[i]);
	}
	scanf("%d", &m);
	for (i = 0; i < m; i++){
		scanf("%d", &b[i]);
	}
	for (i = 0; i < m; i++){
		if (upper_bound(&pos, n, b[i]) == 0){
			memmove(&a[pos + 1], &a[pos], (n - pos) * sizeof(int));
			a[pos] = b[i];
			n++;
		}
	}
	for (i = 0; i < n; i++){
		printf("%d\n", a[i]);
	}
	return (0);
}

