#include <iostream>
#include <vector>
#include <cstdio>
using namespace std;

long long cnt ;
vector<int> G;
int A[1000000];
int n;
int l;

void swap(int *p_from, int *p_to){
    int tmp;
    tmp = *p_from;
    *p_from = *p_to;
    *p_to = tmp;
}
void trace(int A[], int N){
    for(int i = 0; i < N; i++) printf("%d\n",A[i]);
}
void insertionSort(int A[],int n,int g){
    for(int i = g ;i < n ;i++){
        int j = i;
        while (j >= 0 && A[j-g] > A[j]){
            swap(&A[j-g],&A[j]);
            cnt ++;
            j = j-g;
        }
    }
}
void shellSort(int A[], int n){
    for(int h = 1; ; ){
        if(h > n) break;
        G.push_back(h);
        h = h*3+1;
    }
    for(int i = G.size()-1 ;i > 0 ;i--){
            insertionSort(A,n,G[i]);
        }
    trace(A,n);
}

int main(){
    cin >> n;
    for(int i = 0 ;i < n ;i++) scanf("%d",&A[i]);
    cnt = 0;
    shellSort(A,n);
    cout << G.size() <<endl;
    for(int i=G.size();i>=0;i--){
        printf("%d",G[i]);
        if(i) printf(" ");
    }
    printf("\n");
    printf("%d",cnt);
    for(int i = 0; i < n; i++) printf("%d\n",A[i]);
}
