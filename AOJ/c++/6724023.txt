#include <bits/stdc++.h>
////#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);


    string S, T;
    cin >> S >> T;
    if (S.size() > T.size()) {
        swap(S, T);
    }
    ll N = S.size();
    ll P1 = 1e9 + 7;
    ll P2 = 998244353;
    vll G1(26, 1), G2(26, 1);
    rep(i, 25) {
        G1[i + 1] = (G1[i] * 1001) % P1;
        G2[i + 1] = (G2[i] * 1001) % P2;
    }
    ll an = 0;
    rep(j, N) {

        unordered_set<ll> H1;
        unordered_set<ll> H2;
        ll len = j + 1;
        ll D1 = 0, D2 = 0;
        rep(i, len) {
            ll d = (S[i] - 'a');
            D1 += (G1[d]);
            D2 += (G2[d]);
            D1 %= P1;
            D2 %= P2;
        }
        H1.insert(D1);
        H2.insert(D2);
        for (ll i = len; i < N; i++) {
            ll d = (S[i] - 'a');
            D1 += (G1[d]);
            D2 += (G2[d]);
            d = (S[i-len] - 'a');
            D1 += P1-(G1[d]);
            D2 += P2-(G2[d]);
            D1 %= P1;
            D2 %= P2;
            H1.insert(D1);
            H2.insert(D2);
        }

        D1 = 0, D2 = 0;
        rep(i, len) {
            ll d = (T[i] - 'a');
            D1 += (G1[d]);
            D2 += (G2[d]);
            D1 %= P1;
            D2 %= P2;
        }
        if (H1.count(D1) && H2.count(D2)) {
            an = len;
               
        }
        for (ll i = len; i < T.size(); i++) {
            ll d = (T[i] - 'a');
            D1 += (G1[d]);
            D2 += (G2[d]);
            d = (T[i - len] - 'a');
            D1 += P1 - (G1[d]);
            D2 += P2 - (G2[d]);
            D1 %= P1;
            D2 %= P2;
            if (H1.count(D1) && H2.count(D2)) {
                an = len;
            }
        }
    }
    cout << an << endl;



}

