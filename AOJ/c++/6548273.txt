#include<iostream>
#include<vector>
using namespace std;

int main()
{
	int V,E,r,s,t,d,sum=1;
	cin>>V>>E>>r;
	int now=r;
	
	vector<vector<int>> P(V,vector<int>(V)),minP(V,vector<int>(2));
	
	for(int i=0;i<V;i++)
	{
		for(int j=0;j<V;j++)P[i][j]=0;
	}
	
	for(int i=0;i<V;i++)
	{
		minP[i][0]=0;
		if(i!=r)minP[i][1]=0;
		else minP[i][1]=1;
	}
	
	for(int i=0;i<E;i++)
	{
		cin>>s>>t>>d;
		P[s][t]=d;
	}
	
	while(sum<V)
	{
		for(int i=0;i<V;i++)
		{
			if(P[now][i]>0)
			{
				if(minP[i][1]==0)
				{
					if(minP[i][0]==0)minP[i][0]=minP[now][0]+P[now][i];
					else minP[i][0]=min(minP[i][0],minP[now][0]+P[now][i]);
				}
			}
		}
		
		int minL=-1;
		for(int i=0;i<V;i++)
		{
			if(minP[i][1]==0&&minP[i][0]>0)
			{
				if(minL==-1)
				{
					minL=minP[i][0];
					now=i;
				}
				else if(minL>minP[i][0])
				{
					minL=minP[i][0];
					now=i;
				}
			}
		}
		sum++;
		minP[now][1]=1;
		if(minL==-1)break;
	}
	
	if(r!=0&&minP[0][0]==0)cout<<"INF";
	else cout<<minP[0][0];
	for(int i=1;i<V;i++)
	{
		if(r!=i&&minP[i][0]==0)cout<<"\nINF";
		else cout<<"\n"<<minP[i][0];
	}
	
	return 0;
}
