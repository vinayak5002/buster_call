#include <bits/stdc++.h>
using namespace std;
#define int long long
#define INF 1e18
#define rep(i, n) for(int (i) = 0; (i) < (n); (i)++)
#define all(x) (x).begin(), (x).end()
typedef pair<int, int> P;
typedef pair<int, P> PP;
const int mod = 1000000007;
//const int mod = 998244353;

int n, m;
vector<string> s;

int solve1(){
    int res = 0;
    for(int i = 0; i < (1LL << n); i++){
        int sum = 0;
        vector<int> cnt(m, 0);
        rep(j, n)if(i & (1LL << j)){
            sum++;
            for(int k = 0; k < m; k++)if(s[j][k] == '1')cnt[k] = 1 - cnt[k];
        }
        rep(j, m)if(cnt[j] == 1)sum = 0;
        res = max(res, sum);
    }
    return res;
}

int solve2(){
    int len = (1LL << m);
    vector<int> dp(len, 0);
    for(int i = 1; i < len; i++)dp[i] = -INF;

    vector<int> b(n, 0);
    rep(i, n){
        rep(j, m)if(s[i][j] == '1')b[i] += (1LL << j);
    }

    rep(i, n){
        vector<int> nxt(len, -INF);
        rep(j, len){
            nxt[j] = max(nxt[j], dp[j]);
            int nj = (j | b[i]) - (j & b[i]);
            nxt[nj] = max(nxt[nj], dp[j] + 1);
        }
        dp = nxt;
    }
    return dp[0];
}

signed main(){
    cout << fixed << setprecision(18);

    
    while(1){
        cin >> n >> m;
        if(n == 0)break;
        s.resize(n);
        rep(i, n)cin >> s[i];

        cout << solve2() << endl;
        continue;

        if(n <= 23){
            cout << solve1() << endl;
        }
        else{
            cout << solve2() << endl;
        }
    }
}
