#include <bits/stdc++.h>

#define rep(i, to) for (int i=0; i<to; i++)
#define repr(i, from, to) for (int i=from; i<to; i++)

using namespace std;
using ll = long long;
using P = pair<int, int>;

#ifdef DEBUG
#include "debug.hpp"
#else
template<class T> void print(T v) { cout << v << endl; }
void _main(); int main() { _main(); }
#endif

// ================================================================================ //

void _main() {
    /*
     
     dp[a][b] = X[0..<a] と Y[0..<b]の共通部分文字列の長さ
     
     dp[0][x] = 0
     dp[x][0] = 0
     
     dp[a+1][b+1] max= dp[a][b] (if X[a] == Y[b])
     dp[a+1][b] max= a[a][b]
     dp[a][b+1] max= a[a][b]
     */
    
    int N; cin >> N;
    rep(_, N) {
        string X, Y; cin >> X >> Y;
        int nX = (int)X.size(), nY = (int)Y.size();
        
        auto dp = vector(nX+1, vector(nY+1, 0));
        
        rep(a, nX) {
            rep(b, nY+1) {
                if (X[a] == Y[b]) dp[a+1][b+1] = max(dp[a+1][b+1], dp[a][b] + 1);
                dp[a+1][b] = max(dp[a+1][b], dp[a][b]);
                if (b+1 <= nY) dp[a][b+1] = max(dp[a][b+1], dp[a][b]);
            }
        }
        print(dp[nX][nY]);
    }
}

