#include <bits/stdc++.h>
using namespace std;

#define MAX 100000

class Stack {
  private:
    int values[MAX];
    int top;

  public:
    Stack();
    void push(int x);
    int pop();
    bool is_full();
    bool is_empty();
};

Stack::Stack() { top = 0; }

void Stack::push(int x) {
    top++;
    values[top] = x;
}

int Stack::pop() {
    top--;
    return values[top + 1];
}

bool Stack::is_full() { return top >= MAX - 1; }

bool Stack::is_empty() { return top == 0; }

int main() {
    string str;
	Stack s;
	while (cin >> str) {
        int a, b;
        if (str.at(0) == '+') {
            a = s.pop();
            b = s.pop();
            s.push(b + a);
        }
        else if (str.at(0) == '-') {
            a = s.pop();
            b = s.pop();
            s.push(b - a);
        }
        else if (str.at(0) == '*') {
			a = s.pop();
			b = s.pop();
			s.push(b * a);
        }
        else {
            s.push(atoi(str.c_str()));
        }
    }

    cout << s.pop() << endl;
    return 0;
}
