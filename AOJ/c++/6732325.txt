#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

const long long NUM = 100000 * 100000;

struct Fast {
  Fast() {
    std::cin.tie(0);
    ios::sync_with_stdio(false);
  }
} fast;

long long get_truck_num(const vector<int> &v, const int container) {
  int num = 0;
  long long bucket = container;
  for (const int &x : v) {
    if (container < x) {
      return NUM + 1;
    }
    bucket += x;
    if (bucket > container) {
      num++;
      bucket = x;
    }
  }
  return num;
}

int main() {
  int n, k;
  cin >> n >> k;

  vector<int> v(n);
  int max_v = -1;
  for (int i = 0; i < n; i++) {
    cin >> v[i];
  }

  long long body_high = NUM;
  long long body_low = 1;
  long long body = 0;
  while (body_low < body_high) {
    body = (long long)(body_low + body_high) / 2;
    const int res = get_truck_num(v, body);
    if (res > k) {
      body_low = body + 1;
    } else if (res <= k) {
      body_high = body;
    }
  }

  cout << body_low << endl;

  return 0;
}

