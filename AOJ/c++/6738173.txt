#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
//#define MOD 998244353
#define INF 1e18 + 10
#define EPS 1e-9
#define F first
#define S second

#define debug(x) cout<<x<<endl;
#define repi(i,x,n) for(int i=x;i<n;i++)
#define rep(i,n) repi(i,0,n)
#define lp(i,n) repi(i,0,n)
#define repn(i,n) for(int i=n;i>=0;i--)
#define int long long
#define endl "\n"

typedef pair<int,int> PII;
typedef pair<int,string> PIS;
typedef pair<string,int> PSI;

template <typename T>
bool chmax(T &a, const T& b) {
  if (a < b) {
    a = b; 
    return true;
  }
  return false;
}

template <typename T>
bool chmin(T &a, const T& b) {
  if (a > b) {
    a = b;
    return true;
  }
  return false;
}


struct P{
  double x,y;
  P(){}
  P(double x,double y) : x(x),y(y){}
  P operator + (P p){
    return P(x+p.x , y+p.y );
  }
  P operator - (P p){
    return P(x-p.x , y-p.y );
  }
  P operator * (double d){
    return P(x*d,y*d);
  }
  double dot(P p){
    return x*p.x+y*p.y;
  }
  double det(P p){
    return x*p.y-y*p.x;
  }
};

bool comp(P &a,P &b){
  if(a.x!=b.x) return a.x<b.x;
  return a.y<b.y;
}

vector<P> convex_hull(vector<P> a,int n){
  sort(a.begin(),a.end(),comp);
  rep(i,n) cout<<a[i].x<<" "<<a[i].y<<endl;
  int k=0;
  vector<P> q(n*2);
  rep(i,n){
    while(k>1 && (q[k-1]-q[k-2]).det(a[i]-q[k-1]) < 0) k--;
    q[k++]=a[i];
  }

  for(int i=(n-2),t=k;i>=0;i--){
    while(k>t && (q[k-1]-q[k-2]).det(a[i]-q[k-1]) < 0) k--;
    q[k++]=a[i];
  }
  q.resize(k-1);
  return q;
}


  
  


signed main(){
  cin.tie(0);	
  ios::sync_with_stdio(false);
  int n;
  cin>>n;
  vector<P> points(n);
  rep(i,n){
    cin>>points[i].x>>points[i].y;
  }
  vector<P> ans=convex_hull(points,n);
  cout<<ans.size()<<endl;
  rep(i,ans.size() ){
    cout<<ans[i].x<<" "<<ans[i].y<<endl;
  }
  return 0;
}

