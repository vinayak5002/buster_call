#include <iostream>
using namespace std;

typedef long long ll;
static const int MAX = 500000;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
ll n, cnt;

void merge(ll a[], ll left, ll right, ll mid){
    ll n1, n2;
    n1 = mid - left;
    n2 = right - mid;
    ll L[n1 + 1], R[n2 + 1];
    for(ll i = 0;i < n1;i++){
        L[i] = a[i + left];
    }
    for(ll j = 0;j < n2;j++){
        R[j] = a[j + mid];
    }
    L[n1] = MAX;
    R[n2] = MAX;
    ll i, j;
    i = j = 0;
    for(ll k = left;k < right;k++){
        cnt++;
        if(L[i] <= R[j]){
            a[k] = L[i++];
        }
        else{
            a[k] = R[j++];
        }
        cout << a[k];
    }
}

void mergeSort(ll a[], ll left, ll right){
    if(left + 1 < right){
        ll mid = (left + right) / 2;
        cout << mid << endl;
        mergeSort(a, left, mid);
        mergeSort(a, mid, right);
        merge(a, left, right, mid);
    }
}


int main(){
    cin >> n;
    ll a[MAX];
    for(ll i = 0;i < n;i++){
        cin >> a[i];
    }
    ll left, right;
    left = 0;
    right = n;
    mergeSort(a, left, right);
    for(ll i = 0;i < n;i++){
        if(i == 0){
            cout << a[i];
        }
        else{
            cout << " " << a[i];
        }
    }
    cout << endl << cnt << endl;
}
