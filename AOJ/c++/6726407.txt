#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

#define NUM 1000003
int ary[NUM];

inline void insert(const int code) {
  int num = code;
  while (true) {
    const int hash_value = num % NUM;
    if (ary[hash_value] < 0) {
      ary[hash_value] = code;
      break;
    }
    num = (num + 1) % NUM;
  }
}

inline bool find(const int code) {
  int num = code;
  while (true) {
    const int hash_value = num % NUM;
    if (ary[hash_value] < 0) {
      return false;
    } else if (ary[hash_value] == code) {
      return true;
    }
    num = 1 + num % (NUM - 1);
  }
}

int main() {
  for (int i = 0; i < NUM; i++) {
    ary[i] = -1;
  }
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    char word[14], command[14];
    scanf("%s %s", command, word);

    const int size = strlen(word);
    int code = strlen(word);
    for (int i = 0; i < size; i++) {
      switch (word[i]) {
      case 'A':
        code = code << 2 | 0;
        break;
      case 'C':
        code = code << 2 | 1;
        break;
      case 'G':
        code = code << 2 | 2;
        break;
      case 'T':
        code = code << 2 | 3;
        break;
      }
    }

    if (command[0] == 'i') {
      insert(code);
    } else {
      if (find(code)) {
        printf("yes\n");
      } else {
        printf("no\n");
      }
    }
  }
  return 0;
}

