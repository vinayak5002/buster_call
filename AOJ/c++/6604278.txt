#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include <tuple>
#include <map>
#include <set>
#include <cmath>
#include <bitset>
#include <queue>

using namespace std;

template<class T> inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template<class T> inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}

using Graph = vector<vector<int>>;

int main(){
    int n;
    cin >> n;
    Graph G(n);

    for(int ii1=0; ii1<n; ii1++){
        int u, k;
        cin >> u >> k;
        u--;
        for(int ii2=0; ii2<k; ii2++){
            int v; cin >> v;
            v--;
            G[u].push_back(v);
        }
    }

    vector<int> dist(n, -1);
    vector<int> queue;

    queue.push_back(0);
    dist[0] = 0;

    while(!queue.empty()){
        int v = queue.front();
        queue.erase(queue.begin());

        for(auto nv : G[v]){
            if(dist[nv] != -1) continue;
            dist[nv] = dist[v] + 1;
            queue.push_back(nv);
        }
    }

    for(int ii1=0; ii1<n; ii1++){
        cout << (ii1+1) << " " << dist[ii1] << endl;
    }

    return 0;
}
