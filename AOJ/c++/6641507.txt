#include <bits/stdc++.h>
using namespace std;

using P = pair<int, int>;
#define test cout << "test:"
const int inf = 1073741824;
const long long linf = 1152921504606846976;
// const int mod = 998244353;
// const int mod = 1000000007;
const int dx[] = {1, 0, -1, 0}, dy[] = {0, 1, 0, -1};

vector<int> Eratosthenes(int n, int start, int limit)
{
	vector<int> res(n + 1);
	vector<bool> vis(n + 1, false);
	vis[0] = vis[1] = true;
	int cnt = 0;

	for (int i = start; i < n; i++)
	{
		if (cnt == limit)
			break;

		if (vis[i])
			continue;

		res.push_back(i);
		cnt++;

		for (int q = 2 * i; q <= n; q += i)
			vis[q] = true, res.push_back(q);

	}

	return res;
}

void _main(int m, int n)
{
	vector<int> pr = Eratosthenes(7368791, m, n);
	vector<bool> flag(7368791 + 1, false);

	for (int i : pr)
		flag[i] = true;

	for (int i = m; i <= 7368791; i++)
		if (!flag[i])
		{
			// test;
			cout << i << '\n';
			return;
		}
	


	return;
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(15);
	int n, m;
	while (true)
	{
		cin >> m >> n;
		if (n == 0 and m == 0)
			break;

		_main(m, n);
	}
}
