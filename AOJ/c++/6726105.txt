#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

ll jyo(ll x,ll y,ll z){
  ll H=y; //ここから
       ll a=1,b=(x%z+z)%z,c=1;
       while(H>0){
         a*=2;
         if(H%a!=0){
           H-=a/2;
           c*=b;
           c%=z;
         }
        b*=b;
         b%=z;
      } //ここまで
 return c;
}


namespace po167{
struct combination{
	int upper;
	long long MOD;
	std::vector<long long> fact;
	std::vector<long long> rev;
	std::vector<long long> fact_rev;
	combination(int max,long long mod):upper(max),MOD(mod),fact(max+1),rev(max+1),fact_rev(max+1){
		for(long long i=0;i<=max;i++){
			if(i<2){
				fact[i]=1;
				fact_rev[i]=1;
				rev[i]=1;
				continue;
			}
			fact[i]=(fact[i-1]*i)%mod;
			rev[i]=mod-((mod/i)*rev[mod%i])%mod;
			fact_rev[i]=(fact_rev[i-1]*rev[i])%mod;
		}
	}
	long long Comb(int x,int y){
		assert(upper>=x);
		if (x<y||y<0||x<0) return 0;
		return (((fact_rev[y]*fact_rev[x-y])%MOD)*fact[x])%MOD;
	}
};
}
using po167::combination;



void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	combination table(2e5+167,mod);
	ll E=0,E2=0;
	int N;
	cin>>N;
	rep(i,N+1){
		if(i==0) continue;
		ll tmp=(table.Comb(N,i)*table.Comb(N-1,i-1))%mod;
		E+=(tmp*table.fact[N-i])%mod;
	}
	/*for(int i=1;i<=N;i++){
		cout<<"\n# "<<i<<"\n";
		for(int j=i;j<=min(N,i*2);j++){
		ll tmp=(table.fact_rev[2*i-j]*table.fact_rev[j-i])%mod;
		tmp=(tmp*table.fact_rev[N-j])%mod;
		tmp=(tmp*table.fact_rev[j-1])%mod;
		tmp=(table.fact[N]*table.fact[N-1]*tmp);
		E2=(E2+tmp)%mod;
		}
	}*/
	for(int i=1;i<=N;i++){
		//cout<<"\n# "<<i<<"\n";
		ll tmp=(table.Comb(N-1+i,N-i)*table.fact_rev[i])%mod;
		tmp=(tmp*table.fact[N])%mod;
		//cout<<tmp<<"\n";
		E2=(E2+tmp)%mod;
	}
	//cout<<E<<"\n";
	//cout<<E2<<"\n";
	ll ans=(E2*table.fact_rev[N])%mod;
	ans-=(jyo(table.fact_rev[N]*E,2,mod))%mod;
	cout<<((ans+mod)%mod)%mod<<"\n";
	/*vector<int> p(N);
	rep(i,N){
		p[i]=i;
	}
	do{
		ll tmp=1;
		vector<int> seen(N);
		rep(i,N){
			if(seen[i]) continue;
			int ind=i,c=0;
			while(seen[ind]==0){
				seen[ind]=1;
				ind=p[ind];
				c++;
			}
			tmp*=c;
		}
		E-=tmp,E2-=tmp*tmp;
	}while(next_permutation(all(p)));
	cout<<E<<" "<<E2<<"\n";*/
}


