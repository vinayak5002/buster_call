#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef string st ;
typedef long double ld ;
typedef pair<int, int> pi;
typedef pair<ll,ll> pl ;
typedef tuple<int,int,int>  ti ;
typedef tuple<ll,ll,ll> tl ;
typedef vector<vector<int>> vi ;
typedef vector<vector<ll>> vl ;
typedef vector<vector<bool>> vb ;
typedef vector<vector<st>> vs ;
typedef vector<vector<char>> vc;
const ll mod0 = 1000000007;
const ll mod1 = 998244353 ;
const ll LINF = (1LL << 60);
const int INF = (1 << 30);


#define pb                push_back
#define ppb               pop_back
#define pf                push_front
#define ppf               pop_front
#define all(x)            x.begin(), x.end()
#define rep(i,a,n)        for (ll i = a; i <= (n); ++i)
#define f                 first
#define s                 second
#define re                return 0;
#define fore(i,a)         for(auto &i:a)


ll gcd(ll a, ll b){
 
   if(b == 0){
    return a;
}
return gcd(b,a%b) ;
}


ll lcm(ll a, ll b){
    
    ll ans = a*b /gcd(a,b) ;
    return ans ;
}

bool nis(ll q){
    
     // 素数だったらtrue ,素数じゃなかったらfalse
     
       if(q == 1){
           
           return false ;
       }
       
      for(ll i=2;i*i <=q;i++){
          if(q%i == 0){
              return false ;
          }
      }
    return true ;
}





ll digit_sum(ll a){
  
    ll sum = 0;
    while(a > 0){
       sum += a%10 ;
       a /= 10 ;
    }
  return sum ;
}


#define  C            cout   
#define  E            endl;

const ll dx[4] = { 1, 0, -1, 0 };
const ll dy[4] = { 0, 1, 0, -1 };

// ↑↑↑　型が	ll　であることに注意 ！！！！
 
 st Y = "Yes" ; 
 st YY = "No" ;

ll node[1 << 20] ;

class RMQ{
public:


void init(ll N_){
    while(N<N_)N*=2;
    rep(i,0,2*N)node[i]=LINF;
}

void update(ll a,ll x){
    a+=size-1;
    node[a]=x;
    while(a>0){
        a=(a-1)/2;
        node[a]=min(node[2*N],node[2*N+1]);
    }
}

ll query(ll a,ll b,ll k=0,ll l=0,ll r=N){
    if(b<=l||r<=a)return LINF;
    if(a<=l&&r<=b)return node[k];
    ll vl=query(a,b,2*k+1,l,(l+r)/2);
    ll vr=query(a,b,2*k+2,(l+r)/2,r);
    return min(vl,vr);
}

};

int main(){
    
    ll N = 1 ;
    ll NN,Q ;
    cin>>NN>>Q ;
    
    RMQ.init(NN) ;
    
    rep(i,1,Q){
        ll t,l,r ;
        cin>>t>>l>>r ;
        
        if(t == 0){
            
            RMQ.update(l,r) ;
        }else{
            
            C << RMQ.query(l,r,0,0,N-1) << E
        }
        
    }
    
    re
    
}    


