#include <bits/stdc++.h>
#include <chrono>
#include <thread>
////#include <atcoder/all>

//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    if (b == 0)return a;
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

vector<ll> fact, factinv, inv;
ll mod = 998244353;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (k < 0)return 0;
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}

ll gr(ll A) {
    return 1
        ;
}
vector<ll> AN;
vector<vector<pair<ll, ll>>> G;
vector<bool> seen;

void dfs(ll n) {
    seen[n] = 1;
    for (auto v : G[n]) {
        if (seen[v.first]) {
            AN[v.second] = 1;
        }
        else {
            AN[v.second] = 0;
            dfs(v.first);
        }
    }
}




int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    ll N;
    cin >> N;
    vector<string> S(N);
    rep(i, N)cin >> S[i];

    ll k = 0;
    rep(i, N)rep(j, i)if (S[i][j] == 'Y')k++;

    if (N % 2 == 1) {
        if (N % 4 == 1) {
            cout << (k % 2 == 1 ? "Taro" : "Hanako") << endl;
        }
        else cout << (k % 2 == 0 ? "Taro" : "Hanako") << endl;
        return 0;
    }
    vector<bool> seen(N, false);
    queue<ll> Q;
    vll A(2, 0);
    rep(i, N) {
        if (seen[i])continue;
        Q.push(i);        ll k = 0;
        while (!Q.empty()) {
            ll p = Q.front();
            Q.pop();
            if (seen[p])continue;
            seen[p] = 1;
            k++;
            rep(j, N) {
                if (S[p][j] == 'Y') {
                    if (!seen[j]) {
                        Q.push(j);
                    }
                }
            }
        }
        A[k % 2]++;

    }

    if (N % 4 == 0) {
        if (k % 2 == 1) {
            if (A[0] == 0 && A[1] == 2) {
                cout << "Hanako" << endl;
            }
            cout << "Taro" << endl;
        }
        else {
            if (A[0] == 0 && A[1] == 2) {
                cout << "Taro" << endl;
            }
            else cout << "Hanako" << endl;
        }
    }
    else {
        if (k % 2 == 0) {
            if (A[0] == 0 && A[1] == 2) {
                cout << "Hanako" << endl;
            }
            cout << "Taro" << endl;
        }
        else {
            if (A[0] == 0 && A[1] == 2) {
                cout << "Taro" << endl;
            }
            else cout << "Hanako" << endl;
        }
    }

}
