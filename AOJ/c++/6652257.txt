#include <stdio.h>
#include <string.h> 

#define MAX_TEXT 1000000
#define MAX_PATTERN 1000

void createNextTable(int kmpNext[],char pattern[],int len){
    int i,j;

    kmpNext[0]=-1;
    kmpNext[1]=0;
    
    for(i=2;i<=len;i++){
        j = kmpNext[i-1];

        while(j>0&&pattern[i-1]!=pattern[j])
            j=kmpNext[j];

        if(pattern[i-1]==pattern[j])    
            j++;
        
        kmpNext[i]=j;
    }

    for(i=0;i<=len;i++) 
        if(pattern[i]==pattern[kmpNext[i]])  
            kmpNext[i] = kmpNext[kmpNext[i]];
}


int kmpSearch(char text[],int text_len,char pattern[],int pattern_len){
    int text_pos; 
    int pattern_pos; 
    int kmpNext[MAX_PATTERN]; 

    createNextTable(kmpNext,pattern,pattern_len);
    pattern_pos=0;
    text_pos=0;

    while(text_pos<text_len){
        if (text[text_pos] == pattern[pattern_pos]) {        
            if (pattern_pos == pattern_len - 1) 
                return text_pos - pattern_pos; 
            
            text_pos++;
            pattern_pos++;
        }
		else{
            if(kmpNext[pattern_pos]==kmpNext[0]){  
                text_pos++;
                pattern_pos = 0;
            }
			else{    
                pattern_pos = kmpNext[pattern_pos];
            }
        }
    }
    
    return -1;
}

int main(void){
	int number,find;
	int i;
    char text[MAX_TEXT];
    char pattern[MAX_PATTERN];
    
	scanf("%s",text);
	scanf("%d",&number);
	
	for(i=0;i<number;i++){
		scanf("%s",pattern);
	
    	find=kmpSearch(text,strlen(text),pattern,strlen(pattern));
    
    	if(find!=-1)
        	printf("1\n");
    
		else 
        	printf("0\n");
    }

    return 0;
}
