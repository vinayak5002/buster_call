#DFS(行きがけ、帰りがけ)
import sys
from collections import deque

#グラフ
n=int(input())
g=[deque([]) for _ in range(n+1)]
for _ in range(n):
    u,k,*v=[int(x) for x in input().split()] #uは頂点番号、kは隣接項
    v.sort()
    for i in v:
        g[u].append(i)
        #無向グラフ
time=0
ar_time=[-1]*(n+1) #到着時刻
fi_time=[-1]*(n+1) #探索終了時刻      
def dfs(v):
    global time #グローバル変数、関数外でも機能
    time+=1
    stack=[v]
    ar_time[v]=time
    while stack:
        v=stack[-1]
        if g[v]:
            w=g[v].popleft()
            if ar_time[w]<0:
                time+=1
                ar_time[w]=time
                stack.append(w)
        else:
            time+=1
            fi_time[v]=time
            stack.pop()
    return [ar_time,fi_time]

for i in range(n):
    if ar_time[i+1]<0:
        ans=dfs(i+1)


#頂点番号、到着時刻、終了時刻
for j in range(n):
    temp=[j+1,ans[0][j+1],ans[1][j+1]]
    print(*temp)
