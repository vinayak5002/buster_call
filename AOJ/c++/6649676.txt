#include <bits/stdc++.h>
 
using namespace std;
 
#define REP(i,n) for(ll i=0;i<ll(n);i++)
typedef long long ll;
typedef pair<ll,ll> P;

ll const INF=1e18;
ll d[100010],r[200010],a[200010],b[200010],year[100010],discontent[200010],N,M,Q;
vector<P> g[100010];


void bfs(ll s){

    queue<ll> q;

    REP(i,N+1) d[i]=INF;
    q.push(s);
    d[s]=0;
    year[s]=INF;

    while(!q.empty()){
        ll x=q.front();
        q.pop();

        REP(i,g[x].size()){

            ll y=g[x][i].first,z=g[x][i].second;

            if(d[y]>d[x]+1){
               d[y]=d[x]+1;
               q.push(y);
            }

            if(d[y]==d[x]+1){

               ll n=min(year[x],z);
               year[y]=max(year[y],n);

             }
        }
    }

}


int main(void){
	ll i,j,k;
 
	cin.tie(0);  ios_base::sync_with_stdio(false);

	cin >> N >> M >> Q;
	for(i=1;i<=M;i++){
		cin >> a[i] >> b[i];
		r[i]=INF;
	}

	for(i=1;i<=Q;i++){
		ll q;
		cin >> q;
		r[q]=i;
	}

	for(i=1;i<=M;i++){
		g[a[i]].push_back(P(b[i],r[i]));
		g[b[i]].push_back(P(a[i],r[i]));
	}

	bfs(1);

	for(i=1;i<=N;i++) if(year[i]<=M) discontent[year[i]]++;

	for(i=1;i<=Q;i++){
		discontent[i]+=discontent[i-1];
		cout << discontent[i] << endl;
	}


	return 0;
}

