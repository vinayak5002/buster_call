#include <bits/stdc++.h>

using namespace std;

vector<vector<int>> G;
vector<bool> seen, finished;

bool isCycle = false;

void dfs(int v) {
    seen[v] = true;
    for(auto n : G[v]) {
        if(finished[n]) continue;
        if(seen[n] && !finished[n]) {
            isCycle = true;
            return;
        }
        dfs(n);
        if(isCycle) return;
    }
    finished[v] = true;
}

int main() {
    int V, E;
    cin >> V >> E;
    G.resize(V);
    for (int i = 0; i < E; ++i) {
        int s, t;
        cin >> s >> t;
        G[s].push_back(t);
    }
    for(int i = 0; i < V; ++i) {
        seen.assign(V, false); finished.assign(V, false);
        dfs(i);
    }
    if(isCycle) cout << "1" << endl;
    else cout << "0" << endl;

    return 0;
}
