#include<iostream>
#include<string>
using namespace std;

struct Dice{
    int set[6];
    void roll(char ch){
        int buf;
        if(ch=='N'){
            buf=set[0];
            set[0]=set[1];
            set[1]=set[5];
            set[5]=set[4];
            set[4]=buf;
        }
        if(ch=='S'){
            buf=set[0];
            set[0]=set[4];
            set[4]=set[5];
            set[5]=set[1];
            set[1]=buf;
        }
        if(ch=='E'){
            buf=set[0];
            set[0]=set[3];
            set[3]=set[5];
            set[5]=set[2];
            set[2]=buf;
        }
        if(ch=='W'){
            buf=set[0];
            set[0]=set[2];
            set[2]=set[5];
            set[5]=set[3];
            set[3]=buf;
        }
        if(ch=='R'){
            buf=set[1];
            set[1]=set[2];
            set[2]=set[4];
            set[4]=set[3];
            set[3]=buf;
        }
    }
    int top(){return set[0];}
    int front(){return set[1];}
    int right(){return set[2];}
    int left(){return set[3];}
    int back(){return set[4];}
    int bottom(){return set[5];}
};

bool check(int set[6], int target[6]){
    bool frag=true;
    for(int i=0; i<6; i++){
        if(set[i]!=target[i]){ frag=false; }
    }
    if(frag){return true;}
    else{return false;}
};

bool same(int set[6], int target[6]){
    Dice d;
    bool frag=false;
    for(int i=0; i<4; i++){
        for(int i=0; i<4; i++){
            if(check(d.set, target)){ frag=true; }
            d.roll('R');
        }
        d.roll('W');
    }
    d.roll('N');
    for(int i=0; i<4; i++){
        if(check(d.set, target)){ frag=true; }
        d.roll('R');
    }
    d.roll('S'); d.roll('S');
    for(int i=0; i<4; i++){
        if(check(d.set, target)){ frag=true; }
        d.roll('R');
    }
    //output
    if(frag){return true;}
    else{return false;}
};

int main(){
    //input
    int n; cin>>n;
    int set[n][6], target1[6], target2[6];
    for(int i=0; i<n; i++){
        for(int j=0; j<6; j++){
            cin>>set[i][j];
        }
    }
    //check
    bool frag=true;
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            if(i>j){
                for(int k=0; k<6; k++){
                    target1[k]=set[i][k];
                    target2[k]=set[j][k];
                }
                if(check(target1[k], target2[k])){frag=false;}
            }
        }
    }
    //output
    if(frag){ cout<<"Yes"<<endl;}
    else{cout<<"No"<<endl;}
}
