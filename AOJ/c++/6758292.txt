#include <bits/stdc++.h>
#include <chrono>
#include <thread>
////#include <atcoder/all>

//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q) {
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}
template<class T>
bool chmin(T& p, T q) {
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    if (b == 0)return a;
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

vector<ll> fact, factinv, inv;
ll mod = 998244353;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (k < 0)return 0;
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    while(1){
        ll N;
        cin>>N;
        if(N==0)return 0;
        ll m=-1e18,M=+1e18;
        vll A(N);
        bool OK=1;
        rep(i,N){
            string S;
            cin>>S;
            if(S=="x")A[i]=1e11;
            else A[i]=stoll(S);
        }
        rep(i,N){
            if(A[i]>1e10){
                if(i%2==0){
                    if(i!=0){
                        if(A[i-1]>1e10)OK=0;
                        else chmin(M,A[i-1]-1);
                    }
                    if(i!=N-1){
                        if(A[i+1]>1e10)OK=0;
                        else chmin(M,A[i+1]-1);
                    }
                }
                else{
                    if(i!=0){
                        if(A[i-1]>1e10)OK=0;
                        else chmax(m,A[i-1]+1);
                    }
                    if(i!=N-1){
                        if(A[i+1]>1e10)OK=0;
                        else chmax(m,A[i+1]+1);
                    }
                }
            }
            else if(i%2==0){
                if(i!=0){
                    if(A[i-1]<1e10){
                        if(A[i-1]<=A[i])OK=0;
                    }
                }
                if(i!=N-1){
                    if(A[i+1]<1e10){
                        if(A[i+1]<=A[i])OK=0;
                    }
                }
            }
            else{
                if(i!=0){
                    if(A[i-1]<1e10){
                        if(A[i-1]>=A[i])OK=0;
                    }
                }
                if(i!=N-1){
                    if(A[i+1]<1e10){
                        if(A[i+1]>=A[i])OK=0;
                    }
                }
            }
        }
        if(m==M)cout<<m<<endl;
        else{
            cout<<(m<M&&OK?"ambiguous":"none")<<endl;
        }

    }
}



