#include <iostream>
#include <vector>
#include <algorithm>
#include <deque>
#include <queue>
#include <string>
#include <iomanip>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <utility>
#include <stdio.h>
#include <math.h>
#include <assert.h>
#if __has_include(<atcoder/all>)
#include <atcoder/all>
using namespace atcoder;
#endif
using namespace std;
using ll = long long;
#define read(x) cin>>(x);
#define readll(x) ll (x);cin>>(x);
#define readS(x) string (x);cin>>(x);
#define readvll(x,N) vector<ll> (x)((N));for(int i=0;i<(N);i++){cin>>(x)[i];}
ll myabs(ll x) {
	if (x < 0) {
		return -x;
	}
	return x;
}
void solve(ll n) {
	vector<ll> w(n);
	for (ll i = 0; i < n; i++) {
		cin >> w[i];
	}
	vector<vector<bool>> B(n, vector<bool>(n, false));
	for (ll i = 0; i < n-1; i++) {
		if (myabs(w[i] - w[i + 1]) <= 1) {
			B[i][i + 1] = true;
		}
	}
	for (ll length = 4; length <= n; length += 2) {
		for (ll i = 0; i + length <= n; i++) {
			ll L = i;
			ll R = i + length - 1;
			if (
				(myabs(w[L] - w[R]) <= 1 && B[L + 1][R - 1])
				||
				(myabs(w[L] - w[L + 1]) <= 1 && myabs(w[R] - w[R - 1]) <= 1 && (L + 2 == R - 1 || B[L + 2][R - 2]))) {
				B[L][R] = true;
			}
		}
	}
	vector<pair<ll, ll>> t;
	for (ll i = 0; i < n; i++) {
		for (ll j = i + 1; j < n; j++) {
			if (B[i][j] == 1)t.push_back({ i,-j });
		}
	}
	sort(t.begin(), t.end());
	ll ans = 0, r = -1;
	for (int i = 0; i < t.size(); i++) {
		t[i].second *= -1;
		if (t[i].second > r) {
			ans += t[i].second - t[i].first+1;
			r = t[i].second;
		}
	}
	cout << ans<<"\n";
}
int main() {
	ll n;
	while (1) {
		cin >> n;
		if (n == 0) {
			break;
		}
		solve(n);
	}
}
