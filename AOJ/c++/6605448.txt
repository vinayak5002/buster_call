#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
using namespace std;
using ll = long long;

int main() {
    int n, wsum;
    cin >> n >> wsum;
    vector<int> v(n), w(n);
    for (int i = 0; i < n; i++) {
        cin >> v[i] >> w[i];
    }
    vector<vector<int>> dp(n+1, vector<int>(wsum+1, 0));
    // dp[0][0] = 0; dp[0][w[0]] = v[0];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= wsum; j++) {
            if (i > 0) dp[i][j] = dp[i-1][j];
            if (j-w[i]>=0 && i > 0) dp[i][j] = max(dp[i][j], dp[i-1][j-w[i]] + v[i]);
            if (j-w[i]>=0) dp[i][j] = max(dp[i][j], dp[i][j-w[i]] + v[i]);
        }
    }
    int ans = 0;
    for (int i = 0; i <= wsum; i++) {
        ans = max(ans, dp[n-1][i]);
    }
    cout << ans << endl;
    return 0;
}

