#include<bits/stdc++.h>
using namespace std;

int cnt = 0;
vector<int> G;

// 挿入ソートを行う関数
void insertion_sort(vector<int> &A, int N, int g) {
    for (int i = g; i < N; i++) { // A[0]はソート済み
        int v = A[i]; // 挿入される要素
        int j = i - g; // ソート済みインデックス
        while ((j >= 0) && A[j] > v) { // vが小さい間はずらしていく
            A[j+g] = A[j];
            j = j - g;
            cnt++;
        }
        A[j+g] = v; // vを挿入
    }
}

// シェルソート
void shell_sort(vector<int> &A, int N) {
    int h = 1; // G = {1, 4, 13,...}
    while (h <= N) {
        G.push_back(h);
        h = 3*h + 1;
    }

    for (int i = G.size()-1; i >= 0; i--) { // Gを逆順に
        insertion_sort(A, N, G[i]);
    }
}

int main(){
    int N;
    cin >> N;
    vector<int> vec(N);
    for (int i = 0; i < N; i++) {
        cin >> vec.at(i);
    }
    shell_sort(vec, N);
    cout << G.size() << endl; // Gのサイズを表示
    for (int i = G.size()-1; i > 0; i--){ // Gを逆順に表示
        cout << G.at(i) << " ";
    }
    cout << G[0] << endl;
    cout << cnt << endl; // cnt表示
    for (int i = 0; i < N; i++) { // ソート済み配列を改行区切りで表示
        cout << vec[i] << endl;
    }
}
