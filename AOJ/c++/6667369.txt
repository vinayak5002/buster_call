#include <stdio.h>

#define M 1000

typedef struct
{
    char suit;
    int value;
} Card_t;

void bubbleSort(Card_t A[], int N)
{
    int i, j;
    Card_t t;

    int flag = 1;
    i = 0;

    while (flag)
    {
        flag = 0;

        for (j = N - 1; j > i; j--)
        {
            if (A[j - 1].value > A[j].value)
            {
                t = A[j - 1];
                A[j - 1] = A[j];
                A[j] = t;

                flag = 1;
            }
        }

        i = i + 1;
    }
}

void selectSort(Card_t A[], int N)
{
    int i, j, min;
    Card_t t;

    for (i = 0; i < N; i++)
    {
        min = i;

        for (j = i + 1; j < N; j++)
        {
            if (A[j].value < A[min].value)
            {
                min = j;
            }
        }

        t = A[i];
        A[i] = A[min];
        A[min] = t;
    }
}

void print(Card_t A[], int N)
{
    int i;

    for (i = 0; i < N; i++)
    {
        if (i)
        {
            printf(" ");
        }

        printf("%c%d", A[i].suit, A[i].value);
    }

    printf("\n");
}

int isStable(Card_t c1[], Card_t c2[], int N)
{
    int i;

    for (i = 0; i < N; i++)
    {
        if (c1[i].suit != c2[i].suit)
        {
            return 0;
        }
    }

    return 1;
}

int main()
{
    Card_t c1[M], c2[M];
    int n, i;

    scanf("%d\n", &n);

    for (i = 0; i < n; i++)
    {
        scanf("%c ", &c1[i].suit);
        scanf("%d ", &c1[i].value);
    }

    for (i = 0; i < n; i++)
    {
        c2[i] = c1[i];
    }

    bubbleSort(c1, n);
    selectSort(c2, n);

    print(c1, n);

    printf("Stable\n");

    print(c2, n);

    if (isStable(c1, c2, n))
    {
        printf("Stable\n");
    }

    else
    {
        printf("Not stable\n");
    }

    return 0;
}

