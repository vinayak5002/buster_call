#!/usr/bin/env python3

#################################################
# 問題名: 0-1 ナップザック問題
# url: https://onlinejudge.u-aizu.ac.jp/problems/DPL_1_B
# 所要時間:
# 学んだこと:
#################################################

N, W = map(int, input().split())
val = []
wei = []
for i in range(N):
    v, w = map(int, input().split())
    val.append(v)
    wei.append(w)

# i番目までの品物を選択
# 重さはc以下
# 合計価値の最大値を求める
def calc_val(i, c):
    if i < 0 or c <= 0:
        return 0
    elif c - wei[i] < 0:
        return calc_val(i - 1, c)
    else:
        # i番目の品物を選ぶとき
        val_1 = val[i] + calc_val(i - 1, c - wei[i])
        # i番目の品物を選ばないとき
        val_2 = calc_val(i - 1, c)

        return max(val_1, val_2)

def main():
    print(calc_val(N - 1, W))

if __name__ == '__main__':
    main()

