#include <stdio.h>
#define N 100
#define NIL 0
#define F 1
#define L 2

int list[N][N], status[N];
int n, first[N], last[N], cnt;

void visit(int point)
{
    int i;

    status[point] = F; /*1回目の訪問*/
    first[point] = ++cnt;

    for(i=0;i<n;i++)
    {
        if(list[point][i]==0) /*訪れた位置から各頂点へ辺が存在しないとき*/
        {
            continue; /*ループをスキップ*/
        }
        if(status[i]==NIL)
        {
            visit(i); /*再帰的に探索*/
        }
    }
    status[point]=L; /*最後の訪問*/
    last[point]=++cnt;
}

void yet()
{
    int i;

    for(i=0;i<n;i++)
    {
        status[i]=NIL; /*初期化*/
    }

    cnt=0;
    for(i=0;i<n;i++)
    {
        if(status[i]==NIL)
        {
            visit(i); /*まだ、訪れてなければ訪れる*/
        }
    }
}

int main(void)
{
    int i, j, x, num, jigen;

    scanf("%d", &n);

    /*初期化*/
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            list[i][j]=0;
        }
    }

    for(i=0;i<n;i++)
    {
        scanf("%d %d", &num, &jigen); /*何項か、次元数取得*/
        for(j=0;j<jigen;j++)
        {
            scanf("%d", &x);
            list[num-1][x-1]=1; /*i, jが0から始まることを考慮*/ 
        }
    }

    yet();

    for(i=0;i<n;i++)
    {
        printf("%d %d %d\n", i+1, first[i], last[i]);
    }

    return 0;

}
