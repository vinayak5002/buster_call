#include <iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;

struct card{
    int n;
    char c;
    
    bool operator<(card x){
        if (this->n<x.n) return true;
        else return false;
    }
};

void BubbleSort(vector<card> &a){
    int n=a.size();
    for (int i=0;i<n;i++){
        for (int j = n-1;j>i;j--){
            if (a[j] < a[j-1]){
                swap(a[j],a[j-1]);
            }
        }
    }
}

int selectionSort(vector<card> &a){
    int v=0;
    int n=a.size();
    for (int i=0;i<n;i++){
        int minj = i;
        for (int j=i;j<n;j++){
            if (a[j] < a[minj]){
                minj = j;
            }
        }
        swap(a[i],a[minj]);
        if (i!=minj) v++;
    }
    return v;
}



int main(void){
    int n;
    cin >> n;
    vector<card> a(n),b(n);
    for (int i=0;i<n;i++){
        string s;
        cin >> s;
        a[i].n=b[i].n=s[1]-'0';
        a[i].c=b[i].c=s[0];
    }
    BubbleSort(a);
    selectionSort(b);
    
    cout << a[0].c << a[0].n;
    for (int i=1;i<n;i++){
        cout << ' ' << a[i].c << a[i].n;
    }
    cout << endl;
    cout << "Stable" << endl;
    
    
    cout << b[0].c << b[0].n;
    for (int i=1;i<n;i++){
        cout << ' ' << b[i].c << b[i].n;
    }
    cout << endl;
    for (int i=0;i<n;i++){
        if (a[i].c!=b[i].c){
            cout << "Not stable" << endl;
            return 0;
        }
    }
    cout << "Stable" << endl;
}
