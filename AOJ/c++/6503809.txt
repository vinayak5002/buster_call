#include <iostream>
#include <vector>
#include <algorithm>
#include <deque>
#include <queue>
#include <string>
#include <iomanip>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <utility>
#include <stdio.h>
#include <math.h>
#include <assert.h>
#if __has_include(<atcoder/all>)
#include <atcoder/all>
using namespace atcoder;
#endif
using namespace std;
using ll=long long;
#define read(x) cin>>(x);
#define readll(x) ll (x);cin>>(x);
#define readS(x) string (x);cin>>(x);
#define readvll(x,N) vector<ll> (x)((N));for(int i=0;i<(N);i++){cin>>(x)[i];}

ll myabs(ll x){
  if(x<0){
    return -x;
  }
  return x;
}

void solve(ll n){
  vector<ll> w(n);
  for(ll i=0;i<n;i++){
    cin>>w[i];
  }
  vector<vector<bool>> B(n,vector<bool>(n,false));
  for(ll i=0;i<n-1;i++){
    if(myabs(w[i]-w[i+1])<=1){
      B[i][i+1]=true;
    }
  }
  for(ll length=4;length<=n;length+=2){
    for(ll i=0;i+length<=n;i++){
      ll L=i;
      ll R=i+length-1;
      if((myabs(w[L]-w[R])<=1 && B[L+1][R-1])){
        B[L][R]=true;
        continue;
      }
      for(ll j=L;j<=R;j++){
        if(B[L][j] && B[j+1][R]){
          B[L][R]=true;
          break;
        }
      }
    }
  }
  vector<ll> dp(n+1,0);
  dp[0]=0;
  for(ll i=0;i<n;i++){
    for(ll j=n-1;j>i;j--){
      if(B[i][j]){
        dp[j+1]=max(dp[j+1],dp[i]+j-i+1);
      }
    }
    dp[i+1]=max(dp[i+1],dp[i]);
  }
  cout<<dp[n]<<endl;
  return;
}

int main(){
  ll n;
  while(1){
    cin>>n;
    if(n==0){
      break;
    }
    solve(n);
  }
}

