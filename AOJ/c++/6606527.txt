#include  <stdio.h>
#define MAX 100005

struct Node{int parent, l, r, sibling, kids;};

struct Node T[MAX];

int D[MAX], H[MAX];
int maxDepth=0;

void print(struct Node T[], int total){
  int i, j=0, height;
  for(i=0; i<total; i++){
    printf("node %d: parent = %d, sibling = %d, degree=%d, ", i, T[i].parent, T[i].sibling, T[i].kids);
    printf("depth= %d, height= %d, ", D[i], H[i]);
    if(T[i].parent==-1){
        printf("root\n");
    }
    else if(T[i].l==-1){
      printf("leaf\n");
    }
    else{
        printf("internal node\n");
    }
    
  }
}

void depth(int u, int p){
    int d;
    d=p;
    if(d>maxDepth){
        maxDepth=d;
    }
    if(u==-1){
        return;
    }
    D[u]=p;
    depth(T[u].l, p+1);
    depth(T[u].r, p+1);
}
int height(int u){
    int h1=0, h2=0;
    if(T[u].l!=-1){
        h1=height(T[u].l)+1;
    }
    if(T[u].r!=-1){
        h2=height(T[u].r)+1;
    }
    if(h1>h2){
        return H[u]=h1;
    }
    else{
        return H[u]=h2;
    }

}

int main (void){
  int i, j, total, self, root, one, two;
    scanf("%d", &total);
    for(i=0; i<total; i++){
        T[i].parent=-1;
        T[i].l=-1;
        T[i].r=-1;
        T[i].sibling=-1;
        T[i].kids=0;
    }

    for(i=0; i<total; i++){
      scanf("%d %d %d", &self, &one, &two);
      T[self].l=one;
      T[self].r=two;
      if(one!=-1){
          T[one].parent=self;
          T[self].kids+=1;
      }
      if(two!=-1){
          T[two].parent=self;
          T[self].kids+=1;
      }
      T[one].sibling=two;
      T[two].sibling=one;
    }

    for(i=0; i<total; i++){
      if(T[i].parent==-1){
        root=i;
      }
    }
    depth(root, 0);
    height(root);

    print(T, total);
}
