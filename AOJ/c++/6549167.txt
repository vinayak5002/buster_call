#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
#include<iterator>
using namespace std;

void show(vector<string>a) {
	for (int i = 0; i < a.size(); ++i) {
		if (i != a.size() - 1) {
			cout << a.at(i) << " ";
		}
		else {
			cout << a.at(i) << endl;
		}
	}
}
//同じ数字を持つカードが複数ある場合それらが入力と同じ順序で出力されることを安定な出力
int main() {
	int n;
	cin >> n;
	vector<string> a(n);
	int cnt = 0;
	//in
	for (int i = 0; i < n; ++i) {
		cin >> a.at(i);
	}
	vector<string>b(n);
	b = a;
	//pro
	//bubble sort
	for (int i = 0; i < n; ++i) {
		for (int j = n - 1; j >= i + 1; --j) {
			if (a.at(j)[1] < a.at(j - 1)[1]) swap(a.at(j), a.at(j - 1));
		}//安定な出力になる
	}
	//selectionsort
	for (int i = 0; i < n; ++i) {
		int minj = i;
		for (int j = i; j < n; ++j) {
			if (b.at(j)[1] < b.at(minj)[1]) {
				minj = j;
			}//安定にも不安定にもなる
		}
		if (minj != i) swap(b.at(i), b.at(minj));
		
	}
	show(a);
	cout << "stable" << endl;
	show(b);
	if (a == b)cout << "stable" << endl;
	else cout << "Not stable" << endl;
	

	
}
