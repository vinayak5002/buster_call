#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef struct dice{
	int top;
	int front;
	int right;
	int left;
	int back;
	int bottom;			
}dice;

void N(dice *p);
void E(dice *p);
void W(dice *p);
void S(dice *p);

int main(void){
	
	int i;
	int top,front,right,left,back,bottom;
	char ope[100]={0};	
	dice *p;
	
	p=(dice*)malloc(sizeof(dice));
	
	scanf("%d%d%d%d%d%d",&top,&front,&right,&left,&back,&bottom);
	
	p->top=top;
	p->front=front;
	p->right=right;
	p->left=left;
	p->back=back;
	p->bottom=bottom;
	
	scanf("%s",&ope);
	
	for(i=0;i<strlen(ope);i++){
		
		if(ope[i]=='N') N(p);
		else if(ope[i]=='E') E(p);
		else if(ope[i]=='W') W(p);
		else if(ope[i]=='S') S(p);
	}
	
	printf("%d\n",p->top);
	
	return 0;
}

void N(dice *p){
	
	int temp;
	
	temp=p->top;
	p->top=p->front;
	p->front=p->bottom;
	p->bottom=p->back;
	p->back=temp;
}

void E(dice *p){
	
	int temp;
	
	temp=p->top;
	p->top=p->left;
	p->left=p->bottom;
	p->bottom=p->right;
	p->right=temp;
}

void W(dice *p){
	
	int temp;
	
	temp=p->top;
	p->top=p->right;
	p->right=p->bottom;
	p->bottom=p->left;
	p->left=temp;
}

void S(dice *p){
	
	int temp;
	
	temp=p->top;
	p->top=p->back;
	p->back=p->bottom;
	p->bottom=p->front;
	p->front=temp;
}
