#include <bits/stdc++.h>
//#include <atcoder/all>
using namespace std;

#define all(x) (x).begin(),(x).end()
#define print(x) cout << (x) << '\n'
typedef long long ll;
typedef long double ld;
using P = pair<int,int>;
using pll = pair<ll,ll>;
using Graph = vector<vector<int>>;

//using mint = atcoder :: modint998244353;
//const ll MOD = 1000000007;
//const ll MOD = 998244353;

template <typename T> inline bool chmax(T &a, T b) {return a < b ? a = b, true : false;}
template <typename T> inline bool chmin(T &a, T b) {return a > b ? a = b, true : false;}

template <typename T>
void vin(vector<T> &v) {
    int l = v.size();
    for(int i = 0; i < l; i++) cin >> v[i];
}

template <typename T>
void vout(vector<T> &v) {
    int l = v.size();
    for(int i = 0; i < l; i++) cout << v[i] << " \n"[i == l - 1];
}

int main() {
    cin.tie(0); cout.tie(0);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(18);

    vector<bool> t(200000, true);
    vector<int> p;
    for(int i = 2; i < 200000; i++) {
        if(t[i]) {
            p.push_back(i);
            for(int j = i + i; j < 200000; j += i) t[j] = false;
        }
    }

    while(true) {
        int N, P;
        cin >> N >> P;
        if(N == -1 && P == -1) {
            return 0;
        }
        int idx = upper_bound(all(p), N) - p.begin();
        vector<int> v;
        for(int i = idx; i < idx + 100; i++) {
            for(int j = i; j < idx + 100; j++) {
                v.push_back(p[i] + p[j]);
            }
        }
        sort(all(v));
        print(v[--P]);
    }
}
