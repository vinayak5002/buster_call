#include <iostream>
#include <vector>

using namespace std;

int V,E;
int edge[1000][2];
int ind_edge[100];
int n_node;
int ans = 0;
std::vector<int> visit;

void dfs(int node){
    visit.push_back(node);

    for(int i=0; i<E;i++){
        if(edge[i][0] != node) continue;

        n_node = edge[i][1];
        for(int j=0;j<visit.size();j++){
            if(visit[j] == n_node){
                ans = 1;
                break;
            }
        }
        if(ans != 1) dfs(n_node);

    }



    visit.pop_back();
    return;
}

int main(){
    cin >> V >> E;

    for(int i=0; i<E;i++){
        cin >> edge[i][0] >> edge[i][1];
    }

    for(int i = 0;i<V;i++){
        dfs(i);
        if (ans == 1) break;
    }


    cout << ans << endl;
    return 0;
}

