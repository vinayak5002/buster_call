#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=1050000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}


void solve();
// oddloop
int main() {
	solve();
}

void solve(){
	ll N,M,L;
	cin>>N>>M>>L;
	vector<int> K(N);
	rep(i,N) cin>>K[i];
	vector<ll> S(M+1);
	rep(i,M) cin>>S[i+1],S[i+1]+=S[i];
	So(K);
	vector<vector<ll>> dp(N,vector<ll>(N,ILL));
	dp[0][0]=0;
	rep(i,N-1) rep(j,i+1){
		chmin(dp[i+1][j],dp[i][j]+(S[K[i+1]]-S[K[i]-1])/L);
		chmin(dp[i+1][i],dp[i][j]+(S[K[i+1]]-S[K[j]-1])/L);
	}
	ll ans=ILL;
	rep(i,N){
		chmin(ans,dp[N-1][i]+(S[K[N-1]]-S[K[i]-1])/L);
	}
	cout<<ans<<"\n";
}

