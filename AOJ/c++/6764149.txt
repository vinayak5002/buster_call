#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=2167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}



void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int H,W,r,c;
	cin>>H>>W>>r>>c;
	int N;
	cin>>N;
	vector<vector<int>> p(H+1,vector<int>(W+1));
	rep(i,N){
		int a,b;
		cin>>a>>b;
		p[a][b]++;
	}
	auto q=p;
	rep(i,H+1) rep(j,W) p[i][j+1]+=p[i][j];
	rep(i,H) rep(j,W+1) p[i+1][j]+=p[i][j];
	//rep(i,H+1) vec_out(p[i]);
	auto f=[&](int x1,int y1,int x2,int y2){
		return p[x2][y2]+p[x1][y1]-p[x2][y1]-p[x1][y2];
	};
	vector<vector<int>> em(H+2,vector<int>(W+2));
	auto A=em,B=em,C=em,D=em;
	rep(i,H+1) rep(j,W+1){
		if(q[i][j]==1) continue;
		if(j!=0) A[i][j]=1+A[i][j-1];
	}
	rep(i,H+1) for(int j=W;j>=0;j--){
		if(q[i][j]==1) continue;
		if(j!=W) B[i][j]=1+B[i][j+1];
		else B[i][j]=1;
	}
	rep(i,H+1) rep(j,W+1){
		if(q[i][j]==1) continue;
		if(i!=0) C[i][j]=1+C[i-1][j];
	}
	for(int i=H;i>=0;i--) rep(j,W+1){
		if(q[i][j]==1) continue;
		if(i!=H) D[i][j]=1+D[i+1][j];
		else D[i][j]=1;
	}
	//rep(i,H+2) vec_out(A[i]);
	rep(i,H) rep(j,W+1) A[i+1][j]+=A[i][j],B[i+1][j]+=B[i][j];
	rep(i,H+1) rep(j,W) C[i][j+1]+=C[i][j],D[i][j+1]+=D[i][j];
	int ans=0;
	for(int X=0;X<=H-r;X++)  for(int Y=0;Y<=W-c;Y++){
		if(f(X,Y,X+r,Y+c)!=0) continue;
		chmax(ans,A[X+r][Y]-A[X][Y]+B[X+r][Y+c+1]-B[X][Y+c+1]+C[X][Y+c]-C[X][Y]+D[X+r+1][Y+c]-D[X+r+1][Y]);
		//cout<<ans<<" "<<X<<" "<<Y<<"\n";
		//cout<<A[X+r][Y]-A[X][Y]<<" "<<B[X+r][Y+c+1]-B[X][Y+c+1]<<" "<<C[X][Y+c]-C[X][Y]<<" "<<D[X+r+1][Y+c]-D[X+r+1][Y]<<"\n";
	}
	cout<<ans<<"\n";
}


