#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
int main()
{
    double xp0, yp0, xp1, yp1;
    cin >> xp0 >> yp0 >> xp1 >> yp1;
    int q;
    cin >> q;
    double s, ic;
    vector<int> xp2(1000), yp2(1000);
    for (int i = 0; i < q; i++)
    {
        cin >> xp2[i] >> yp2[i];
        if (xp1 == xp0)
        {
            if (xp1 > xp2[i])
                cout << "COUNTER_CLOCKWISE" << endl;
            else if (xp1 < xp2[i])
                cout << "CLOCKWISE" << endl;
            else if ((yp2[i] < yp0 && yp1 > yp0) || (yp2[i] > yp0 && yp1 < yp0))
                cout << "ONLINE_BACK" << endl;
            else if ((yp2[i] > yp1 && yp1 > yp0) || (yp0 > yp1 && yp1 > yp2[i]))
                cout << "ONLINE_FRONT" << endl;
            else
                cout << "ON_SEGMENT" << endl;
        }
        else
        {
            s = (yp1 - yp0) / (xp1 - xp0);
            ic = yp1 - s * xp1;

            if (yp2[i] > s * xp2[i] + ic)
                cout << "COUNTER_CLOCKWISE" << endl;
            else if (yp2[i] < s * xp2[i] + ic)
                cout << "CLOCKWISE" << endl;

            else
            {
                if (yp2[i] == yp1 && yp1 == yp0)
                {
                    if ((xp2[i] < xp0 && xp1 > xp0) || (xp2[i] > xp0 && xp1 < xp0))
                        cout << "ONLINE_BACK" << endl;
                    else if ((xp2[i] > xp1 && xp1 > xp0) || (xp0 > xp1 && xp1 > xp2[i]))
                        cout << "ONLINE_FRONT" << endl;
                    else
                        cout << "ON_SEGMENT" << endl;
                }
                else
                {
                    if ((yp2[i] < yp0 && yp1 > yp0) || (yp2[i] > yp0 && yp1 < yp0))
                        cout << "ONLINE_BACK" << endl;
                    else if ((yp2[i] > yp1 && yp1 > yp0) || (yp0 > yp1 && yp1 > yp2[i]))
                        cout << "ONLINE_FRONT" << endl;
                    else
                        cout << "ON_SEGMENT" << endl;
                }
            }
        }
    }

    return 0;
}
