#include <bits/stdc++.h>
using namespace std;
#define MAX 100005
struct Node {
	int p, l, r;
};
struct Node Tree[MAX];
int n;
void preParse(int m){
	if(m == -1) return;
	printf(" %d", m);
	preParse(Tree[m].l);
	preParse(Tree[m].r);
} 
void inParse(int m){
	if(m == -1) return;
	inParse(Tree[m].l);
	printf(" %d", m);
	inParse(Tree[m].r);
}
void postParse(int m){
	if(m == -1) return;
	postParse(Tree[m].l);
	postParse(Tree[m].r);
	printf(" %d", m);
}
int main(){
	
	int i, v, l, r, root;
	scanf("%d", &n);
	for(i = 0; i < n; i++){
		Tree[i].p = -1;
	}
	for(i = 0; i < n; i++){
		scanf("%d%d%d", &v, &l, &r);
		Tree[v].l = l;Tree[v].r = r;
		if(l!=-1) Tree[l].p = v;
		if(r!=-1) Tree[r].p = v;
	}
	for(i = 0; i < n; i++)
		if(Tree[i].p == -1)
			root=i;
	printf("Preorder\n");
	preParse(root);cout<<endl;
	printf("Inorder\n");
	inParse(root);cout<<endl;
	printf("Postorder\n");
	postParse(root);cout<<endl;
	return 0;
}

