#include <stdio.h>
#define MAX 10000
#define NIL -1

typedef struct
{
  int parent, left, right;
} Node;

Node T[MAX];
int n;

//前順
void preParse(int u)
{
  if (u == NIL)
  {
    return;
  }

  printf(" %d", u);
  preParse(T[u].left);
  preParse(T[u].right);
}

//中順
void inParse(int u)
{
  if (u == NIL)
  {
    return;
  }
  inParse(T[u].left);
  printf(" %d", u);
  inParse(T[u].right);
}

//後順
void postParse(int u)
{
  if (u == NIL)
  {
    return;
  }

  postParse(T[u].left);
  postParse(T[u].right);
  printf(" %d", u);
}

int main(void)
{
  int i, id, l, r;
  int root = 0;
  scanf("%d", &n);

  for (i = 0; i < n; i++)
  {
    T[i].parent = NIL;
  }

  for (i = 0; i < n; i++)
  {
    scanf("%d %d %d", &id, &l, &r);

    T[id].left = l;
    T[id].right = r;

    if (l != NIL)
    {
      T[l].parent = id;
    }

    if (r != NIL)
    {
      T[r].parent = id;
    }

    for (i = 0; i < n; i++)
    {
      if (T[i].parent == NIL)
      {
        root = i;
      }
    }
  }

  printf("Preorder\n");
  preParse(root); //根から探索
  printf("\n");
  printf("Inorder\n");
  inParse(root);
  printf("\n");
  printf("Postorder\n");
  postParse(root);
  printf("\n");

  return 0;
}
