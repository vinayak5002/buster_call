#include <bits/stdc++.h>
using namespace std;
template<class t> using vc=vector<t>;
template<class t> using vvc=vc<vc<t>>;
using ll=long long;
using pi=pair<int,int>;
using vi=vc<int>;
using vl=vc<ll>;
using vvi=vvc<int>;
using uint=unsigned;
using ull=unsigned long long;
using dijk=priority_queue<pi,vc<pi>,greater<pi>>;
using dijk2d=priority_queue<pair<int,pi>,pair<int,pi>,greater<pair<int,pi>>>;
#define mp make_pair
#define mt make_tuple
#define a first
#define b second
#define bg begin()
#define ed end()
#define pb push_back
#define all(x) x.bg,x.ed
#define si(x) int(x.size())
#define rng(i,a,b) for(int i=int(a);i<int(b);i++)
#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define gnr(i,a,b) for(int i=int(b)-1;i>=int(a);i--)
#define per(i,b) gnr(i,0,b)
#define mod 998244353
#define minf -(1<<30)
#define inf 1<<30
#define zero(x) memset(x,0,sizeof(x))
template<class T>inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T>inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>inline int countDigits(T n){string tmp = to_string(n);return tmp.size();}
template<class T>void print(T x,int suc=1){cout<<x;if(suc==1)cout<<endl;if(suc==2)cout<<" ";}
template<class t,class u>void print(const pair<t,u>&p,int suc=1){print(p.a,2);print(p.b,suc);}
template<class T>T sq(const T& t){return t*t;}
template<class T>void print(const vector<T>&v,int suc=1){rep(i,v.size())print(v[i],i==int(v.size())-1?suc:2);}
void yes(){cout<<"Yes"<<endl;}
void no(){cout<<"No"<<endl;}
vi readvi(int n){vi v(n);rep(i,n)cin>>v[i];return v;}
vc<ll> readvl(int n){vc<ll> v(n);rep(i,n)cin>>v[i];return v;}
pi readpi(){int a,b;cin>>a>>b;return pi(a,b);}
string readString(){string s;cin>>s;return s;}
bool ispow2(int i){return i&&(i&-i)==i;}
vvc<int> readGraph(int n,int m){vvc<int> g(n);rep(i,m){int a,b;cin>>a>>b;a--;b--;g[a].pb(b);g[b].pb(a);}return g;}
vvc<pi> readGraphc(int n,int m){vvc<pi> g(n);rep(i,m){int a,b,c;cin>>a>>b>>c;a--;b--;g[a].pb(mp(b,c));g[b].pb(mp(a,c));}return g;}
vvc<int> readTree(int n){return readGraph(n,n-1);}

int main() {
	cin.tie(0);
	ios::sync_with_stdio(0);
	cout<<fixed<<setprecision(20);
    
    ll a,b;
    cin>>a>>b;
    print(a*b,2);
    print(a*2+b*2);
}
