#include <iostream>
#include <vector>

#define INFTY 1000000000

void merge(std::vector<int> &S, int left, int mid, int right)
{
    int n1 = mid - left;
    int n2 = right - mid;
    std::vector<int> L(n1);
    std::vector<int> R(n2);
    for (int m = 0; m < n1; m++)
    {
        L[m] = S[left + m];
    }
    for (int n = 0; n < n2; n++)
    {
        R[n] = S[mid + n];
    }
    L.push_back(INFTY);
    R.push_back(INFTY);
    int i = 0;
    int j = 0;
    for (int k = left; k < right; k++)
    {
        if (L[i] <= R[j])
        {
            S[k] = L[i];
            i++;
        }
        else
        {
            S[k] = R[j];
            j++;
        }
    }
}

void mergeSort(std::vector<int> &S, int left, int right)
{
    if (left + 1 < right)
    {
        int mid = (left + right) / 2;
        mergeSort(S, left, mid);
        mergeSort(S, mid, right);
        merge(S, left, mid, right);
    }
}

int main()
{
    int n;
    std::cin >> n;
    std::vector<int> S;
    for (int i = 0; i < n; i++)
    {
        int input;
        std::cin >> input;
        S.push_back(input);
    }

    mergeSort(S, 0, n - 1); //マージソートする

    for (int i : S)
    {
        std::cout << i << " ";
    }
    std::cout << std::endl;
    std::cout << "ここで比較回数を表示する" << std::endl;

    return 0;
}

