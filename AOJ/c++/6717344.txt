# from cmath import inf
# import math
# import sys
# import re
# import copy
# from re import A

# from itertools import combinations
# from itertools import permutations

# import bisect

# import numpy as np


def input_strmat(lines=1):
    dat = []
    for l in range(lines):
        dat += [list(input().split())]
    return dat


def input_str(lines=1):
    if lines == 1:
        return list(input().split())
    dat =[list(input().split())[0]  for l in range(lines)]
    return dat


def input_intmat(lines=1):
    dat = [    list(  map(int, input().split())  )   for l in range(lines) ]
    return  dat


def input_floatmat(lines=1):
    dat = [  list(  map(float, input().split())  )   for l in range(lines) ]
    return  dat


def input_int(lines=1):
    if lines == 1:
        return list(map(int, input().split()))
    dat = [   list(map(int, input().split()))[0]  for l in range(lines)  ]
    return dat


[n] = input_int()
A = input_int()
[q] = input_int()
M = input_int()

for m in M:
    ans="no"
    for sel in range(2**n):
        sm= sum( [ A[i] for i in range(n) if sel>>i&1 ==1] )
        if sm == m:
            ans="yes"
            break
    print(ans)
