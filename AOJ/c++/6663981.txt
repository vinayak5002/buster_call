#define READ_FROM_FILE 0

#if READ_FROM_FILE
#include <fstream>
#endif

#include <iostream>
#include <vector>
#include <queue>
using namespace std;


int main() {
#if READ_FROM_FILE
	ifstream ifs("test0.txt");
	cin.rdbuf(ifs.rdbuf());
#endif
	int n, u, k, v;
	vector<vector<int> > adjacency_list;
	vector<int> min_cost;
	vector<bool> is_searched;
	queue<int> que;

	cin >> n;
	adjacency_list.resize(n);
	is_searched.resize(n, false);
	min_cost.resize(n, -1);

	for (int i = 0; i < n; i++) {
		cin >> u >> k;
		adjacency_list[u - 1].resize(k);
		for (int j = 0; j < k; j++) {
			cin >> v;
			adjacency_list[u - 1][j] = v - 1;
		}
	}

	min_cost[0] = 0;
	que.push(0);
	while (!que.empty()) {
		int v = que.front(); que.pop();

		for (int i = 0; i < adjacency_list[v].size(); i++) {
			int u = adjacency_list[v][i];

			if (min_cost[u] < 0 || min_cost[u] > min_cost[v] + 1) {
				min_cost[u] = min_cost[v] + 1;
				que.push(u);
			}
		}
	}

	for (int i = 0; i < n; i++) {
		cout << i + 1 << " " << min_cost[i] << endl;
	}

	return 0;
}
