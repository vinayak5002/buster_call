#define _USE_MATH_DEFINES
#include<iostream>
#include<iomanip>
#include<vector>
#include<string>
#include<algorithm>
#include<cmath>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<climits>
#include<bitset>
#include<unordered_map>
#include<unordered_set>
#include<random>
#include<list>
#include<functional>
using namespace std;
#define LP(I,S,G) for (long long int I = (S); I < (G); I++)
#define IN(X) 	for (int in = 0; in < X.size(); in++)cin >> X[in]
#define OUT(X) 	for (int in = 0; in < X.size(); in++)cout << X[in]<<" "
#define SORT(X) sort((X).begin(), (X).end())
#define CSORT(X,Y) sort(X.begin(), X.end(),Y)
#define COPY(X,Y) copy(X.begin(), X.end(), Y.begin())
#define ALL(X,Y) for (auto X = (Y).begin(); X != (Y).end(); X++)
#define FULL(a)  (a).begin(),(a).end()
#define BFS(Q,S) for(Q.push(S);Q.size()!=0;Q.pop())
typedef long long int ll;
typedef unsigned long long int ull;
long long int M = 998244353;


int dx[] = { 1,0,-1,0 }, dy[] = { 0,-1,0,1 };

ll MAX(ll A, ll B) { return ((A) > (B) ? (A) : (B)); }
double MIN(double A, double B) { return ((A) < (B) ? (A) : (B)); }
long long int xor128() {
	static long long int x = 123456789, y = 362436069, z = 521288629, w = 88675123;
	long long int t = (x ^ (x << 11));
	x = y; y = z; z = w;
	return (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));
}

struct HashPair {
	//注意 constがいる
	template<class T1, class T2>
	size_t operator()(const pair<T1, T2> &p) const {
		//first分をハッシュ化する
		auto hash1 = hash<T1>{}(p.first);
		//second分をハッシュ化する
		auto hash2 = hash<T2>{}(p.second);
		//重複しないようにハッシュ処理
		size_t seed = 0;
		seed ^= hash1 + 0x9e3779b9 + (seed << 6) + (seed >> 2);
		seed ^= hash2 + 0x9e3779b9 + (seed << 6) + (seed >> 2);
		return seed;
	}
};
template<class I1, class I2>
istream& operator>>(istream& s, pair<I1, I2>& in) {
	s >> in.first >> in.second;
	return s;
}

int main() {
	while (1) {
		ll h, w, r, c;
		cin >> h >> w >> r >> c;
		if (h == 0)break;
		r--, c--;
		vector<vector<vector<ll>>> t(h, vector<vector<ll>>(w, vector<ll>(2, 0)));
		vector<vector<ll>> ans(h, vector<ll>(w, 0));
		vector<vector<ll>> hor(h+1, vector<ll>(w, 0)),ver(h, vector<ll>(w+1, 0));
		IN(hor[0]);
		LP(i, 0, h) {
			IN(ver[i]);
			IN(hor[i + 1]);
		}
		t[0][0][0] = ((hor[0][0] == 0) | (ver[0][0] == 0));
		t[0][0][1] = ((hor[0][0] == 1) | (ver[0][0] == 1));
		ans[0][0] = t[0][0][0] * t[0][0][1];
		t[0][w - 1][0] = ((hor[0][w - 1] == 0) | (ver[0][w] == 0));
		t[0][w - 1][1] = ((hor[0][w - 1] == 1) | (ver[0][w] == 1));
		ans[0][w - 1] = t[0][w - 1][0] * t[0][w - 1][1];
		t[h - 1][0][0] = ((hor[h][0] == 0) | (ver[h - 1][0] == 0));
		t[h - 1][0][1] = ((hor[h][0] == 1) | (ver[h - 1][0] == 1));
		ans[h - 1][0] = t[h - 1][0][0] * t[h - 1][0][1];
		t[h - 1][w - 1][0] = ((hor[h][w - 1] == 0) | (ver[h - 1][w] == 0));
		t[h - 1][w - 1][1] = ((hor[h][w - 1] == 1) | (ver[h - 1][w] == 1));
		ans[h - 1][w - 1] = t[h - 1][w - 1][0] * t[h - 1][w - 1][1];
		LP(i, 1, h - 1) {
			t[i][0][1] = ver[i][0];
			t[i][0][0] = (t[i][0][0]+1)%2;
			t[i][w-1][1] |= ver[i][w];
			t[i][w-1][0] |= (t[i][w-1][0]+1)%2;
		}
		LP(i, 1, w - 1) {
			t[0][i][1] = hor[0][i];
			t[0][i][0] = (t[0][i][0]+1)%2;
			t[h - 1][i][1] |= hor[h][i];
			t[h - 1][i][0] |= (t[h - 1][i][0]+1)%2;
		}

		if (t[r][c][0] == 1) {
			cout << "Yes\n";
			continue;
		}
		queue<pair<ll, ll>> q;
		LP(i, 0, h) {
			LP(k, 0, w) {
				if (t[i][k][0] * t[i][k][1]) {
					ans[i][k] = 1;
					q.push({ i,k });
				}
			}
		}
		while (q.size() != 0) {
			ll x = q.front().first, y = q.front().second;
			q.pop();
			if (x != 0) {
				if (ans[x - 1][y] == 0) {
					t[x - 1][y][hor[x][y]] = 1;
					if (t[x - 1][y][0] * t[x - 1][y][1]) {
						ans[x - 1][y] = 1;
						q.push({ x - 1,y });
					}
				}
			}
			if (y != 0) {
				if (ans[x][y-1] == 0) {
					t[x][y-1][ver[x][y]] = 1;
					if (t[x][y-1][0] * t[x][y-1][1]) {
						ans[x][y-1] = 1;
						q.push({ x,y-1 });
					}
				}
			}
			if (x != h-1) {
				if (ans[x + 1][y] == 0) {
					t[x + 1][y][hor[x+1][y]] = 1;
					if (t[x + 1][y][0] * t[x + 1][y][1]) {
						ans[x + 1][y] = 1;
						q.push({ x + 1,y });
					}
				}
			}
			if (y != w-1) {
				if (ans[x][y + 1] == 0) {
					t[x][y + 1][ver[x][y+1 ]] = 1;
					if (t[x][y + 1][0] * t[x][y + 1][1]) {
						ans[x][y + 1] = 1;
						q.push({ x,y + 1 });
					}
				}
			}
		}
		cout << ((ans[r][c]) ? "Yes\n" : "No\n");
	}
	return 0;
}
