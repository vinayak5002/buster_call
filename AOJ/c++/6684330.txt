#include<bits/stdc++.h>
//#include<atcoder/all>
using namespace std;
//using namespace atcoder;
using ll = long long;
#define rep(i,m,n) for(int (i)=(m);(i)<(n);++(i))
#define rrep(i,m,n) for(int (i)=(n)-1;(i)>=(m);--(i))
#define all(x) (x).begin(),(x).end()
#define out(y,x,h,w) (y)<0||(x)<0||(y)>=(h)||(x)>=(w)

template<class T>inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template<class T>inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}
inline void init() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(15);
}

int main() {
    init();

    int N, M; cin >> N >> M;
    vector<int>vec(N);
    rep(i, 0, N)cin >> vec[i];


    vector<long double>sum(N + 1);
    sum[0] = 0;
    rep(i, 0, N)sum[i+1] = sum[i]+vec[i];
    long double dp[510][510][510];
    rep(i, 0, 510)rep(j, 0, 510)rep(k, 0, 510)dp[i][j][k] = -1;
    dp[0][0][0] = 0;
    rep(i, 0, N) {
        rep(j, i, N) {
            rep(k, 0, M) {
                if (dp[i][j][k] < 0)continue;
                //[i,j]
                chmax(dp[i][j+1][k], dp[i][j][k]);
                chmax(dp[j + 1][j + 1][k + 1], dp[i][j][k] + (sum[j + 1] - sum[i])/(j-i+1));
            }
        }
    }
    long double ans = 0;
    rep(i, 1, M+1)chmax(ans, dp[N][N][i]);
   cout << ans << endl;
    
    return 0;
}
