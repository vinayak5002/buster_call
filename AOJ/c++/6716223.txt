#include <bits/stdc++.h>

using namespace std;

int N, W;
vector<int> v, w;
vector<vector<int> > dp;

int main() {
    cin >> N >> W;
    v.resize(N);
    w.resize(N);
    dp.resize(N);
    for (int i = 0; i < N; i++) {
        cin >> v[i] >> w[i];
        dp[i].resize(W+1);
    }

    for (int idx = 0; idx < N; idx++) {
        for (int weight = 0; weight <= W; weight++) {
            if (idx == 0) {
                if (w[0] > weight) {
                    dp[0][weight] = 0;
                } else {
                    dp[0][weight] = v[0];
                }
            } else {
                if (weight - w[idx] >= 0) {
                    dp[idx][weight] = max(dp[idx - 1][weight - w[idx]] + v[idx], dp[idx - 1][weight]);
                } else {
                    dp[idx][weight] = dp[idx - 1][weight];
                }
            }
        }
    }

    cout << dp[N-1][W] << "\n";
}
