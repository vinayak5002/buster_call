#include <iostream>
#include <vector>
#include <utility>

using namespace std;
using ul=unsigned long int;

ul counter{};
template<typename T>
void merge(vector<T>& vec, ul left, ul mid, ul right){
    ul n1=mid-left;
    ul n2=right-mid;
    vector<T> A(n1+1), B(n2+1);
    for(ul i=0;i<n1;++i){
        A[i]=vec[left+i];
    }
    for(ul i=0;i<n2;++i){
        B[i]=vec[mid+i];
    }
    A[n1]=(__LONG_MAX__ *2UL+1UL);
    B[n2]=(__LONG_MAX__ *2UL+1UL);
    ul j=0;
    ul k=0;
    for(ul i=left;i<right;++i){
        if(A[j]<=B[k]){
            vec[i]=A[j];
            ++j;
        }else{
            vec[i]=B[k];
            counter+=(n1-j);
            ++k;
        }
    }
}
template<typename T>
void merge_s(vector<T>& vec, ul left, ul right){
    if(left==right-1)return;
    ul mid=(left+right)/2;
    merge_s(vec, left, mid);
    merge_s(vec, mid, right);
    merge(vec, left, mid, right);
}
int main(){
    ul n;
    cin>>n;
    vector<ul> vec(n);
    for(ul i=0;i<n;++i){
        cin>>vec[i];
    }
    merge_s(vec, 0, vec.size());
    cout<<counter<<endl;
}
