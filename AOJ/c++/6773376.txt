#include <bits/stdc++.h>
////#include <atcoder/all>
//using namespace atcoder;
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

template<class T>
bool chmin(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    if (b == 0)return a;
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

vector<ll> fact, factinv, inv;
ll mod = 1e9+7;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (k < 0)return 0;
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}


ll len(ll n){
    ll res=0;
    ll t=1;
    rep(k,18){
        if(t*10<=n){
            ll th=(t*10-1)/3-(t-1)/3;
            ll f=(t*10-1)/5-(t-1)/5;
            ll thf=(t*10-1)/15-(t-1)/15;
            ll z=(t*10-1)-(t-1);
            res+=(k+1)*z;
            res+=th*4;
            res+=f*4;
            res-=(th+f-thf)*(k+1);
            //cout<<th<<" "<<f<<endl;
        }
        else{
            if(t>n)break;
            ll th=(n)/3-(t-1)/3;
            ll f=(n)/5-(t-1)/5;
            ll thf=(n)/15-(t-1)/15;
            ll z=(n)-(t-1);
            res+=(k+1)*z;
            res+=th*4;
            res+=f*4;
            res-=(th+f-thf)*(k+1);
        }
        t*=10;

    }
    return res;
}//n以下の長さ


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    ll N;
    cin>>N;

    //cout<<len(N)<<endl;
    ll L=0,R=1e18;
    while(R-L>1){
        ll mid=(R+L)/2;
        if(len(mid)<N)L=mid;
        else R=mid;
    }
    //cout<<R<<endl;
    ll Z=N-len(R-1);
    string AN="";
    for(ll i=R;i<=R+20;i++){
        if(i%15==0)AN=AN+"FizzBuzz";
        else if(i%3==0)AN=AN+"Fizz";
        else if(i%5==0)AN=AN+"Buzz";
        else AN=AN+to_string(i);
    }

    cout<<AN.substr(Z-1,20)<<endl;
}



