#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define rep(i, s, t) for (int i = (int)(s); i < (int)(t); ++i)
#define revrep(i, t, s) for (int i = (int)(t)-1; i >= (int)(s); --i)
#define all(x) begin(x), end(x)
template <typename T> bool chmax(T& a, const T& b) { return a < b ? (a = b, 1) : 0; }
template <typename T> bool chmin(T& a, const T& b) { return a > b ? (a = b, 1) : 0; }

ll str_to_bin(string s) {
    ll x = 0;
    for (char c : s) {
        x = 2*x + (c-'0');
    }
    return x;
}

string bin_to_str(ll x, int n) {
    string s = "";
    while (x) {
        s.push_back('0' + (x&1));
        x >>= 1;
    }
    while (s.size() < n) s.push_back('0');
    reverse(all(s));
    return s;
}


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);

    while (true) {
        ll n;
        cin >> n;
        if (n == 0) break;
        string b;
        cin >> b;

        ll m0 = str_to_bin("1" + b);
        int e0 = 0;

        ll m = m0;
        int e = e0;

        while (n) {
            ll m1 = m0;
            rep(_,0,e-e0) {
                m1 >>= 1;
            }
            if (m1 == 0) break;
            ll x = min(n, ((1LL<<53)-m+m1-1)/m1);
            if (x == 0) break;
            m += m1*x;
            n -= x;
            if (m >= (1LL<<53)) {
                m >>= 1;
                ++e;
            }
        }

        auto ans = bin_to_str(e, 12) + bin_to_str(m, 53).substr(1);
        cout << ans << "\n";
    }
}
