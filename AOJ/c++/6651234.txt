#include <bits/stdc++.h>
using namespace std;

int main()
{
  int V, E;
  cin >> V >> E;
  int64_t const INF = numeric_limits<int64_t>::max() / 2;
  vector<vector<vector<int64_t>>> C(V + 1, vector<vector<int64_t>>(V, vector<int64_t>(V, INF)));
  for (int i = 0; i <= V; i++)
    for (int j = 0; j < V; j++)
      C.at(i).at(j).at(j) = 0;
  for (int i = 0; i < E; i++) {
    int s, t, d;
    cin >> s >> t >> d;
    C.at(0).at(s).at(t) = d;
  }
  for (int i = 0; i < V; i++) {
    for (int j = 0; j < V; j++) {
      for (int k = 0; k < V; k++) {
        C.at(i + 1).at(j).at(k) = min(C.at(i).at(j).at(k), C.at(i).at(j).at(i) + C.at(i).at(i).at(k));
      }
    }
  }
  int neg = false;
  for (int j = 0; j < V; j++)
    if (C.at(V).at(j).at(j) < 0) {
      neg = true;
      break;
    }
  if (neg) {
    cout << "NEGATIVE CYCLE\n";
    return 0;
  }
  for (int j = 0; j < V; j++) {
    for (int k = 0; k < V; k++) {
      if (k > 0) cout << ' ';
      if (C.at(V).at(j).at(k) >= INF / 2)
        cout << "INF";
      else
        cout << C.at(V).at(j).at(k);
    }
    cout << '\n';
  }
}

