#include <iostream>
#include <vector>
#include <algorithm>
#include <deque>
#include <queue>
#include <string>
#include <iomanip>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <utility>
#include <stack>
#include <random>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <assert.h>
#if __has_include(<atcoder/all>)
#include <atcoder/all>
using namespace atcoder;
#endif
using namespace std;
using ll=long long;
#define read(x) cin>>(x);
#define readll(x) ll (x);cin>>(x);
#define readS(x) string (x);cin>>(x);
#define readvll(x,N) vector<ll> (x)((N));for(int i=0;i<(N);i++){cin>>(x)[i];}
#define rep(i,N) for(ll (i)=0;(i)<(N);(i)++)
#define rep2d(i,j,H,W) for(ll (i)=0;(i)<(H);(i)++)for(ll (j)=0;(j)<(W);j++)
#define is_in(x,y) (0<=(x) && (x)<H && 0<=(y) && (y)<W)
#define yn {cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

long long powll(long long x,long long n){
  long long res=1;
  while(n>0){
    if(n&1){
      res*=x;
    }
    x*=x;
    n>>=1;
  }
  return res;
}

void solve(ll N){
  vector<vector<pair<pair<ll,ll>,ll>>> B(N);
  ll x,y,l,r,f,b,d,u;
  string rot;
  for(ll i=0;i<N;i++){
    cin>>x>>y>>l>>r>>f>>b>>d>>u>>rot;
    B[i].reserve(rot.size()+1);
    B[i].push_back(make_pair(make_pair(x,y),d));
    for(char j:rot){
      ll dx=0,dy=0;
      if(j=='L'){
        // l,d,r,u
        ll t=l;
        l=u;
        u=r;
        r=d;
        d=t;
        dx=-1;
      }else if(j=='R'){
        // r d l u
        ll t=r;
        r=u;
        u=l;
        l=d;
        d=t;
        dx=1;
      }else if(j=='F'){
        // f d b u
        ll t=f;
        f=u;
        u=b;
        b=d;
        d=t;
        dy=-1;
      }else{
        // b d f u
        ll t=b;
        b=u;
        u=f;
        f=d;
        d=t;
        dy=1;
      }
      x+=dx;
      y+=dy;
      B[i].push_back(make_pair(make_pair(x,y),d));
    }
    // for(ll j=0;j<(ll)B[i].size();j++){
    //   cerr<<"("<<B[i][j].first.first<<","<<B[i][j].first.second<<"), ";
    // }cerr<<endl;
  }
  ll M=powll(2,N);
  vector<ll> dp(M);
  for(ll i=0;i<M;i++){
    set<pair<ll,ll>> xy;
    for(ll j=0;j<N;j++){
      if((i>>j)&1){
        for(ll k=0;k<(ll)B[j].size();k++){
          xy.insert(B[j][k].first);
        }
      }
    }
    //cerr<<"i: "<<i<<" xy size: "<<xy.size()<<endl;
    for(ll j=0;j<N;j++){
      if(((i>>j)&1)==0){
        ll s=0;
        set<pair<ll,ll>> th;
        for(ll k=(ll)B[j].size()-1;k>=0;k--){
          if(xy.find(B[j][k].first)==xy.end() && th.find(B[j][k].first)==th.end()){
            s+=B[j][k].second;
            th.insert(B[j][k].first);
          }
        }
        //cerr<<"j: "<<j<<" s: "<<s<<endl;
        dp[i|(1<<j)]=max(dp[i|(1<<j)],dp[i]+s);
      }
    }
  }
  cout<<dp[M-1]<<endl;
  // for(ll i=0;i<M;i++){
  //   cerr<<dp[i]<<" ";
  // }cerr<<endl;
  return;
}

int main(){
  ll N;
  while(1){
    cin>>N;
    if(N==0){
      break;
    }
    solve(N);
  }
}

