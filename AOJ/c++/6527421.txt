#pragma warning(disable:4996)
#include<bits/stdc++.h>
int a[500001];

void maxHeapify(int A[], int i, int H)
{
	int l = i * 2 + 1;
	int r = i * 2 + 2;
	int largest=i;
	if (l<=H&&A[l]>A[largest])
		largest = l;
	if (r<=H&&A[r]>A[largest])
		largest = r;
	if (largest != i)
	{
		int temp = A[i];
		A[i] = A[largest];
		A[largest] = temp;
		maxHeapify(A, largest, H);
	}
}

void insert(int A[], int key,int i)
{
	A[i] = key;
	while (i != 0 && A[(i - 1) / 2] < A[i])
	{
		int temp = A[i];
		A[i] = A[(i - 1) / 2];
		A[(i - 1) / 2] = temp;
		i = (i - 1) / 2;
	}
}

int extract(int A[],int i)
{
	int m = A[0];
	if (i == 0)
		return m;
	int temp = A[0];
	A[0] = A[i];
	A[i] = temp;
	maxHeapify(A, 0, i - 1);
	return m;
}

int main()
{
	int H = -1;
	while (1)
	{
		char ins[10];
		scanf("%s", ins);
		if (ins[2] == 'd')
			break;
		if (ins[0] == 'i')
		{
			int key;
			scanf("%d", &key);
			insert(a, key, H+1);
			H++;
		}
		if (ins[1] == 'x')
		{
			int out;
			out = extract(a, H);
			H--;
			printf("%d\n", out);
		}
	}
	
	return 0;
}
