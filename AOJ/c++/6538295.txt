#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <cmath>
#include <bitset>
#include <functional>
#include <queue>
#include <utility>

static const double pi = acos(-1.0);
const long long INF = pow(10,18);
const int mod1 = 1000000007;

using namespace std;

int main(){
    while (true){
        long long N,M; cin >> N >> M;
        if (N == 0 & M == 0) return 0;
        vector<pair<int,int>> dp(N);
        for (int i=0; i<N; i++) {
            int d,p; cin >> d >> p;
            dp[i] = make_pair(p,d);
        }
        sort(dp.begin(), dp.end());
        reverse(dp.begin(), dp.end());

        int ans = 0;
        int now = 0;
        while (dp[now].second <= M & now < N) {
            M -= dp[now].second;
            now += 1;
        }
        if (now == N) {
            cout << 0 << endl;
            continue;
        }
        dp[now].second -= M;
        for (int i=now;i<N;i++) ans += dp[i].first * dp[i].second;
        cout << ans << endl;
    }
}
