#include <iostream>
#include <cmath>
#include <vector>

#define MAXNODE 100
#define MAXEDGE 1000

std::vector<bool> visited;
bool flag;

void dfs(int a, int b, std::vector<std::vector<int> > nodes){
    visited[b] = 1;

    for(int i = 0; i < nodes[b].size(); ++i){
        if (nodes[b][i] == a){
            flag = 1;
            return;
            }
        if (visited[nodes[b][i]]) continue;
        dfs(a, nodes[b][i], nodes);
    }
}

int main()
{
    int node, edge, nodesize, edgesize;
    std::cin >> nodesize >> edgesize;
    std::vector<std::vector<int> > nodes(nodesize);

    for(int i = 0; i < edgesize; ++i){
        std::cin >> node >> edge;
        nodes[node].push_back(edge);
    }

    for(int i = 0; i < nodesize; ++i){
        if(flag) break;
        visited.assign(nodesize, false);
        dfs(i, i, nodes);
    }

    if(flag) std::cout << "1" << std::endl;
    else std::cout << "0" << std::endl;

    return 0;
}

