#define BUF_SIZE 1024

#include <stdio.h>

struct dice {
	int up;
	int south;
	int east;
	int west;
	int north;
	int down;
};

void roll_south(struct dice *d) {
	int tmp;
	tmp = d->south;
	d->south = d->up;
	d->up = d->north;
	d->north = d->down;
	d->down = tmp;
}

void roll_east(struct dice *d) {
	int tmp;
	tmp = d->east;
	d->east = d->up;
	d->up = d->west;
	d->west = d->down;
	d->down = tmp;
}

void roll_west(struct dice *d) {
	int tmp;
	tmp = d->west;
	d->west = d->up;
	d->up = d->east;
	d->east = d->down;
	d->down = tmp;
}

void roll_north(struct dice *d) {
	int tmp;
	tmp = d->north;
	d->north = d->up;
	d->up = d->south;
	d->south = d->down;
	d->down = tmp;
}
//水平方向に時計回りに回転
void roll_horizontal(struct dice *d){
	int tmp;
	tmp = d->south;
	d->south = d->east;
	d->east = d->north;
	d->north = d->west;
	d->west = tmp;
}



int main(void)
{
	char buf[BUF_SIZE];
	int up, south, east, west, north, down;
	int num, i;

	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d %d %d %d %d %d", &up, &south, &east, &west, &north, &down);
	struct dice d1 = { up, south, east, west, north, down };
	fgets(buf, sizeof(buf) - 1, stdin);
	sscanf(buf, "%d %d %d %d %d %d", &up, &south, &east, &west, &north, &down);
	struct dice d2 = { up, south, east, west, north, down };

	//d2とd1の上面を合わせる
	if (d2.up == d1.up) {
		//	何もしない
	}
	else if (d2.up == d1.east) {
		roll_west(&d1);
	}
	else if (d2.up == d1.west) {
		roll_east(&d1);
	}
	else if (d2.up == d1.north) {
		roll_south(&d1);
	}
	else if (d2.up == d1.south) {
			roll_north(&d1);
	}
	else if (d2.up == d1.down) {
		roll_north(&d1);
		roll_north(&d1);
	}

	//d2とd1の前面を合わせる
	if (d2.south == d1.west) {
		roll_horizontal(&d1);
		roll_horizontal(&d1);
		roll_horizontal(&d1);
	}
	else if (d2.south == d1.east) {
		roll_horizontal(&d1);
	}
	else if (d2.south == d1.north) {
		roll_horizontal(&d1);
		roll_horizontal(&d1);
	}
	//printf("%d %d %d %d %d %d", d.up, d.south, d.east, d.west, d.north, d.down);
	if ((d1.up == d2.up) && (d1.south == d2.south) && (d1.east == d2.east) && (d1.west == d2.west) && (d1.north == d2.north) && (d1.down == d2.down)) {
		printf("Yes\n");
	}
	else {
		printf("No\n");
	}

	return 0;
}
