#include<bits/stdc++.h> 
using namespace std;
typedef long long ll;
#define all(x) (x).begin(),(x).end()
template<typename T1,typename T2> bool chmin(T1 &a,T2 b){if(a<=b)return 0; a=b; return 1;}
template<typename T1,typename T2> bool chmax(T1 &a,T2 b){if(a>=b)return 0; a=b; return 1;}
template< typename T > istream &operator>>(istream &is, vector< T > &v) {
	for(T &in : v) is >> in;
	return is;
}
template< typename T > ostream &operator<<(ostream &os, const vector< T > &v) {
	for(int i = 0; i < (int) v.size(); i++) {
		os << v[i] << (i + 1 != (int) v.size() ? " " : "");
	}
	return os;
}


vector<vector<int>> v(5555);
vector<ll> a, b;

vector<array<ll,2>> dfs(int p, int pre){
	// (収支, 子ノードから貰った人の総和)を管理
	vector<array<ll,2>> ret = {{0, 0}};
	ll INF = 1e18;
	array<ll,2> ini = {-INF, -INF};

	// 先に子ノード分の処理を行う(読んでくれ)
	for(auto nx:v[p]){
		if(nx == pre) continue;
		vector<array<ll,2>> g = dfs(nx, p);
		int n = ret.size();
		int m = g.size();
		ret.resize(n + m - 1, ini);
		for(int s=n+m-2;s>=0;s--){
			for(int i=n-1;i>=0;i--){
				int j = s - i;
				if(j < 0 or j >= m) continue;
				if(ret[i][0] == -INF or g[j][0] == -INF) continue;
				if(chmax(ret[s][0], ret[i][0] + g[j][0])){
					ret[s][1] = ret[i][1] + g[j][0] * (g[j][0] > 0);
				}
				else if(ret[s][0] == ret[i][0] + g[j][0]){
					chmax(ret[s][1], ret[i][1] + g[j][0] * (g[j][0] > 0));
				}
			}
		}
	}

	// 自分のノードの処理
	ret.push_back(ini);
	int n = ret.size();
	for(int i=n-1;i>=0;i--){
		ret[i][0] += a[p];
		ret[i][1] += a[p];
		if(i and ret[i-1][1] + a[p] >= b[p]){
			chmax(ret[i][0], ret[i-1][0] + a[p]);
		}
		if(i and ret[i-1][1] + a[p] < b[p]){
			chmax(ret[i][0], min(-b[p] + ret[i-1][1], ret[i-1][0]) + a[p]);
		}
	}

	return ret;
}

signed main(){
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(20);

	int n;
	cin>>n;
	a.resize(n), b.resize(n);
	cin>>a>>b;
	for(int i=1;i<n;i++){
		int x,y;
		cin>>x>>y;
		x--,y--;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	vector<array<ll,2>> g = dfs(0, -1);
	assert((int)g.size() == n + 1);
	int ans = 0;
	for(int i=0;i<(int)g.size();i++){
		if(g[i][0] >= 0) ans = i;
	}
	cout << ans << endl;

}
