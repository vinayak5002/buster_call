#include <iostream>
using namespace std;

int n;                           //  頂点数
#define MAX_n                    //  n の最大数
int d[MAX_n + 1];                //  d[v]: 頂点 v を初めて訪問（発見）した時間 
int f[MAX_n + 1];                //  f[v]: 頂点 v を去った（訪問を終えた）時間
int Adj[MAX_n + 1][MAX_n + 1];   //  Adj[v]:  頂点 v の隣接リスト
                                 //  Adj[v][n] = 0:  番兵
int tm;                           //  時間

void dfs(int u)
{
    tm++;    // 時間を進めるのは一箇所にした方がよい
    int v;   // 次に訪問すべき頂点
    for (int i = 0; ; i++) {      //  改善の余地あり
	v = Adj[u][i];
	if (v == 0)
	    break;
    }
    if (v > 0) {        // 未訪問の頂点あり
	d[v] = tm + 1;
	dfs(v);
	dfs(u);         // 新たな冒険を終えたら、戻ってくる
    }
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; i++) {
	int u;
	cin >> u;
	int k;     // u に隣接する頂点の数
	cin >> k;
	for (int j = 0; j < k; j++)
	    cin >> Adj[u][j];
    }
    
    tm = 0;
    d[1] = 1;
    dfs(1);

    return 0;
}
		
    

