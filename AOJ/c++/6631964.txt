#include <stdio.h>
#include <stdlib.h>


#include <stdio.h>
#include <stdlib.h>

CalGridSum(int nGridSize){
    int gridA[nGridSize][nGridSize];
    int nVert[nGridSize];
    int nHori = 0;
    int nSkew[2*nGridSize-1];
    int nBackSkew[2*nGridSize-1];
    int i, j, nMax = 0;

    for (i = 0; i < nGridSize; i ++) {
        nVert[i] = 0;
    }
    for (i = 0; i < 2*nGridSize-1; i ++) {
        nSkew[i] = 0;
        nBackSkew[i] = 0;
    }

    for (i = 0; i < nGridSize; i++) {
        nHori = 0;
        for (j = 0; j < nGridSize; j++) {
            scanf("%1d",&gridA[i][j]);
            nHori += gridA[i][j];
            nVert[j] += gridA[i][j];
            nSkew[i+j] += gridA[i][j];
            nBackSkew[j-i+nGridSize-1] += gridA[i][j];
        }
        if (nHori > nMax) nMax = nHori;
    }
    for (i = 0; i < nGridSize; i ++) {
        if (nVert[i] > nMax) nMax = nVert[i];
    }

    for (i = 0; i < 2*nGridSize-1; i ++) {
        if (nSkew[i] > nMax) nMax = nSkew[i];
        if (nBackSkew[i] > nMax) nMax = nBackSkew[i];
    }
    printf("%d\n", nMax);
}

int main()
{
    int nGridSize;

    while(0!=scanf("%d",&nGridSize)) {
        if (0 == nGridSize) break;
        if (2 < = nGridSize && nGridSize <= 255) {
            CalGridSum(nGridSize);
        }
    }

}

