#include <bits/stdc++.h>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define rrep(i,a,b) for(int i=b-1;i>=a;i--)
#define all(x) (x).begin(),(x).end()
#define pb(x) push_back(x);
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a = b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a = b; return 1; } return 0; }
typedef long long ll;
typedef long double lld;
using namespace std;
const ll mod=998244353;
//const ll mod=1e9+7;
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
const string zton="0123456789";
const string atoz="abcdefghijklmnopqrstuvwxyz";
const ll inf=(1ll<<60);
ll gcd(ll a,ll b){
    ll r;
    r=a%b;
    if(r==0){
        return b;
    }
    else{
        return gcd(b,r);
    }
}
typedef pair<ll,int> P;

int main(void){
    int k;cin >> k;
    int p[8];rep(i,0,8)p[i]=i;
    int put_x[k],put_y[k];
    rep(i,0,k)cin >> put_x[i] >> put_y[i];
    do{
        bool f=true;
        rep(i,0,k){
            if(p[put_x[i]]!=put_y[i])f=false;
        }
        if(!f)continue;
        char mp[8][8];rep(i,0,8)rep(j,0,8)mp[i][j]='.';
        rep(i,0,8)mp[i][p[i]]='Q';
        rep(i,0,8){
            int x=i;
            int y=p[i];
            int d=1;
            int nx=x+1;
            int ny=y+1;
            while(0<=nx&&nx<8&&0<=ny&&ny<8){
                if(mp[nx][ny]=='Q')f=false;
                nx++;
                ny++;
            }
            nx=x-1;
            ny=y-1;
            while(0<=nx&&nx<8&&0<=ny&&ny<8){
                if(mp[nx][ny]=='Q')f=false;
                nx--;
                ny--;
            }
            nx=x+1;
            ny=y-1;
            while(0<=nx&&nx<8&&0<=ny&&ny<8){
                if(mp[nx][ny]=='Q')f=false;
                nx++;
                ny--;
            }
            nx=x-1;
            ny=y+1;
            while(0<=nx&&nx<8&&0<=ny&&ny<8){
                if(mp[nx][ny]=='Q')f=false;
                nx--;
                ny++;
            }
        }
        if(f){
            rep(i,0,8){
                rep(j,0,8)cout << mp[i][j];
                cout << endl;
            }
            return 0;
        }
    }while(next_permutation(p,p+8));
}
