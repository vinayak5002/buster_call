#include <iostream>
#include <vector>
#include <algorithm>  // std::copy
#include <iterator> // std::back_inserter
using namespace std;

void printVec(vector<int> *V)
{
    for (auto it = V->begin(); it != V->end(); it++) 
 	cout << " " << *it;
    cout << endl;
}

int main()
{
    int n;           // 頂点の数
    cin >> n; 
    vector<int> *cmp[n];

    for (int s = 0; s < n; s++) {
	cmp[s] = new vector<int>;
	cmp[s]->push_back(s);
    }

    int m;    //  辺の数
    cin >> m;
    for (int i = 0; i < m; i++) {
	int s, t;
	cin >> s >> t;
	if (cmp[s]->size() < cmp[t]->size())
	    swap(s, t);
	vector<int>::iterator it;
	for (it = cmp[t]->begin(); it != cmp[t]->end(); it++) 
	    if (find(cmp[s]->begin(), cmp[s]->end(), *it) == cmp[s]->end())
		cmp[s]->push_back(t);
	delete cmp[t];
        cmp[t] = cmp[s];
    }
	    
    for (int s = 0; s < n; s++) {
	cout << s << " @" << cmp[s] << ": ";
	printVec(cmp[s]);
    }
        
    int q;    // 質問の数
    cin >> q;
    for (int i = 0; i < q; i++) {
	int s, t;
	cin >> s >> t;
	if (cmp[s] == cmp[t])
	    cout << "yes" << endl;
	else
	    cout << "no" << endl;
    }

    return 0;
}


