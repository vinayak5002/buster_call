#include <bits/stdc++.h>
using namespace std ;
#define MAX 1000000001
#define NIL -2000000002
#define INF 2000000002
#define MAXN 11000
typedef long long int ll;
const int debug = 0 ; 
const int debug1 = 0 ; 

ll MAP[MAXN];
ll DP[MAXN][MAXN] ;
int n;
ll maxsquare = 0; 
int pos;
stack<pair<int,int>> ST;
/// st.first :　cur位置 / st.second : cur位置の高さ

////Histogramの面積をstackをつかって書き直すパターン///////

void init(){
    MAP[0]=0;
    MAP[n+1]=0;
    pos = 0;
    ST.push(make_pair(0,0));
}

void shori(){
    ll tmp;
    int leftcur;
    int rightcur;
    int prevht=0; //1つの前の高さ
    for (int i=1; i<=n+1 ; i++) { //n+1は壁
        if (MAP[i] > prevht) {
            //stackに積むだけ
            ST.push(make_pair(i,MAP[i]));
        } else if  (MAP[i] == prevht) {
            //何もしない
        } else {
            rightcur = i;
            // MAP[i]より高い部分をすべて清算する
            while (ST.top().second > MAP[i] && ST.size() > 1 ) {
                int height = ST.top().second;
                rightcur = i;
                leftcur=i-1;
                ST.pop();
                for (; leftcur >=0 ; leftcur--) {
                    if (MAP[leftcur] < height) {break;}
                }
                tmp = height * (rightcur - leftcur - 1) ;
                maxsquare = max(maxsquare,tmp);
            }

        }
        prevht = MAP[i];
    }
}


int main(){
    init();
    cin >> n;
    int tmp ; 
    for (int i=1 ; i<= n ; i++){
            cin >> tmp ; MAP[i]= tmp ; 
    }
 
    shori();

    printf("%lld\n",maxsquare ) ;
    return 0;
}

