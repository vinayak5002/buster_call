#include <bits/stdc++.h>
using namespace std;
#define MAX 10000
#define NIL -1

int n, pos;
vector<int> pre, in, post;

void rec (int l, int r) {
  if ( l >= r ) return; // leftとrightが重なったらreturn
  int root = pre[pos++]; // preを1つずつrootへ
  int m = distance(in.begin(), find(in.begin(), in.end(), root)); // inorder上のrootのindexを求めてる
  rec(l, m); // leftとrootを渡す(左部分木)
  rec(m + 1, r); // root+1とrightを渡す(右部分木)
  post.push_back(root); // 後行順巡回なので最後にpushしてる？
}

int solve() {
  pos = 0;
  rec(0, pre.size());
  for(int i = 0; i < n; i++) {
    if(i) cout << " ";
    cout << post[i];
  }
  cout << endl;
}

int main() {
  int k;
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> k;
    pre.push_back(k);
  }
  for (int i = 0; i < n; i++) {
    cin >> k;
    in.push_back(k);
  }

  solve();
  return 0;
}
