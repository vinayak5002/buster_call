#include<bits/stdc++.h>
using namespace std;
//#include<atcoder/all>
//using namespace atcoder;
using ll = long long;
int n;
vector<string> s;


void solve(){
	int cnt = 0;
	vector<int> matomeadd;
	vector<bool> istop;
	{
		set<char> st;
		map<char,int> mp;
		for(auto &i:s){
			for(auto &c:i){
				st.insert(c);
			}
		}
		for(auto &c:st){
			mp[c] = cnt++;
		}
		for(int i =0;i<n;i++){
			for(int j =0;j<s[i].size();j++){
				s[i][j] = mp[s[i][j]];
			}
		}
		matomeadd = vector<int>(cnt);
		for(int i = 0;i<n-1;i++){
			int add = 1;
			for(int j = s[i].size()-1;j>= 0;j--){
				matomeadd[s[i][j]] += add;
				add *= 10;
			}
		}
		istop = vector<bool>(10);
		for(int i = 0;i<n;i++){
			if(s[i].size()>1){
				istop[s[i][0]] = 1;
			}
		}
	}
	//for(auto &i:matomeadd)cerr<<i<<endl;
	vector<int> c10(10);
	for(int i = 0;i<cnt;i++)c10[i] = 1;
	sort(c10.begin(),c10.end());
	int ans = 0;
	int cntp = 0;
	do{
		vector<int> v;
		for(int i = 0;i<10;i++)if(c10[i])v.push_back(i);
		do{
			bool is = false;
			for(int i = 0;i<cnt;i++){
				if(v[i]==0){
					if(istop[i]){
						is = true;
					}
					break;
				}
			}
			if(is)continue;
			int l = 0;
			for(int i =0;i<cnt;i++){
				l += matomeadd[i]*v[i];
			}
			int r = 0;
			for(int i = 0;i<s[n-1].size();i++){
				r *= 10;
				r += v[s[n-1][i]];
			}
			ans += int(l==r);
			//if(l==r)cerr<<l<<' '<<r<<endl;
		}while(next_permutation(v.begin(),v.end()));
	}while(next_permutation(c10.begin(),c10.end()));
	cout<<ans<<endl;

}

signed main(){
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	while(1){
		cin >> n;
		if(n==0)break;
		s = vector<string>(n);
		for(int i = 0;i<n;i++){
			cin >> s[i];
		}
		solve();
	}
}

