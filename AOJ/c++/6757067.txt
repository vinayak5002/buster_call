#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int (i)=0;(i)<(n);(i)++)
#define ll long long
#define pp pair<ll,ll>
#define ld long double
#define all(a) (a).begin(),(a).end()
#define mk make_pair
#define difine define
constexpr int inf=1000000000;
constexpr ll INF=2e18;
constexpr ll mod=1000000007;
constexpr ll MOD=998244353;
int dx[4]={0,0,-1,1},dy[4]={-1,1,0,0};
int dx1[8]={0,0,-1,1,1,1,-1,-1},dy1[8]={-1,1,0,0,1,-1,1,-1};

 
// #include <atcoder/all>
// typedef atcoder::modint998244353 mint;
// typedef atcoder::modint1000000007 mint;


int main() {
  while(true){
   int n;
   cin >> n;
   if (n==0) break;
   vector<int> a(n),d(n);
   rep(i,n-1) cin >> a[i];
   rep(i,n-1) cin >> d[i];
   rep(i,n-1) a[i]--;
   vector<vector<pair<int,int>>> e(n,vector<pair<int,int>>(0));
   rep(i,n-1){
    e[i+1].push_back({d[i],a[i]});
    e[a[i]].push_back({d[i],i+1});
   }
   rep(i,n) sort(all(e[i]));
   ll mi=INF,sum=0;
   rep(i,n-1) sum+=d[i];
   rep(i,n){
    for (auto [f,g]:e[i]){
      if (e[i].size()>1 && e[g].size()>1) sum+=f;
    }
   }
   rep(i,n){
    ll ans=sum;
    if (e[i].size()<=1) continue;
    ll r=0;
    queue<pair<int,ll>> q;
    q.push({i,0});
    vector<int> c(n,0);
    c[i]=1;
    while(!q.empty()){
      auto [f,g] = q.front();
      q.pop();
      bool t=false;
      for (auto [ff,gg]:e[f]){
        if (e[gg].size()==1) t=true;
        else if (c[gg]==0) {
          q.push({gg,ff+g});
          c[gg]=1;
        }
      }
      if (t) r=max(r,g);
    }
    mi=min(mi,ans-r);
   }
   cout << mi << endl;
  }
}


