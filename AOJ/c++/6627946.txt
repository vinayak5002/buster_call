#include<stdio.h>
#define MAX 30
#define NIL -1

typedef struct Node{
	int left;                 // 左の子
	int right;                // 右の子
	int parent;               // 親
} N;

N T[MAX];
int n;                        // 節点の個数

void Preorder(int u)          // 先行順巡回
{
	if(u == NIL) return;
	printf(" %d", u);
	Preorder(T[u].left);
	Preorder(T[u].right);
}

void Inorder(int u)          // 中間順巡回
{
	if(u == NIL) return;
	Inorder(T[u].left);
	printf(" %d", u);
	Inorder(T[u].right);
}

void Postorder(int u)          // 後行順巡回
{
	if(u == NIL) return;
	Postorder(T[u].left);
	Postorder(T[u].right);
	printf(" %d", u);
}

int main(void)
{
	int i, x, le, ri, root;
	scanf("%d", &n);   // 節点の個数を入力
	
	for(i = 0; i < n; i++) T[i].parent = NIL;   // left, rightはすべて入力されるので親だけNILを代入
	for(i = 0; i < n; i++)
	{
		scanf("%d %d %d", &x, &le, &ri);
		T[x].left = le;
		T[x].right = ri;
		if( le != NIL ) T[le].parent = x;
		if( ri != NIL ) T[ri].parent = x;
	}
	
	for(i = 0; i < n; i++)
	{
		if(T[i].parent == NIL) root = i;
	}
	
	printf("Preorder\n");
	Preorder(root);
	printf("\n");
	printf("Inorder\n");
	Inorder(root);
	printf("\n");
	printf("Postorder\n");
	Postorder(root);
	printf("\n");
	
	return 0;
}
