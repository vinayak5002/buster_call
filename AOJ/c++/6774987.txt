#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;
using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;
using vd = vector<double>;
using vvd = vector<vd>;
using vvvd = vector<vvd>;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)
using pqr = priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>>;

template<class T>
bool chmax(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p < q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

template<class T>
bool chmin(T& p, T q, bool C = 1) {
    if (C == 0 && p == q) {
        return 1;
    }
    if (p > q) {
        p = q;
        return 1;
    }
    else {
        return 0;
    }
}

ll gcd(ll(a), ll(b)) {
    if (b == 0)return a;
    ll c = a;
    while (a % b != 0) {
        c = a % b;
        a = b;
        b = c;
    }
    return b;
}

vector<ll> fact, factinv, inv;
ll mod = 1e9 + 7;
void prenCkModp(ll n) {
    fact.resize(n + 5);
    factinv.resize(n + 5);
    inv.resize(n + 5);
    fact.at(0) = fact.at(1) = 1;
    factinv.at(0) = factinv.at(1) = 1;
    inv.at(1) = 1;
    for (ll i = 2; i < n + 5; i++) {
        fact.at(i) = (fact.at(i - 1) * i) % mod;
        inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
        factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
    }

}
ll nCk(ll n, ll k) {
    if (k < 0)return 0;
    if (n < k) return 0;
    return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}


int main() {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    while(1){
        ll N,M;
        cin>>N>>M;
        if(N==0)return 0;
        vll A(N);
        set<ll> Y;
        rep(i,N){
            cin>>A[i];
        }
        vll W(M);
        rep(i,M)cin>>W[i];

        set<ll> S;
        rep(bit, (1 << N)) {
            
            
            for (ll b = bit; b >= 0; b = (b - 1) & bit) {
                ll a=0,d=0;
                rep(i,M){
                    if(bit&(1<<i)){
                        if(b&(1<<i))a+=W[i];
                        else d+=W[i];
                    }
                }
                S.insert(abs(a-d));

                if (b == 0)break;
            }

            //ここにも書く
        }
        rep(i,N){
            if(S.count(A[i]))continue;
            else Y.insert(A[i]);
        }
        if(Y.size()==0){
            cout<<0<<endl;
            continue;
        }
        map<ll,ll> MA;
        for(auto y:Y){
            unordered_set<ll> USE;
            for(auto s:S){
                if(!USE.count(abs(s-y))){
                    MA[abs(s-y)]++;
                    USE.insert(abs(s-y));
                }
                if(!USE.count(abs(s+y))){
                    MA[abs(s+y)]++;
                    USE.insert(abs(s+y));
                }
            }
        }
        ll an=1e18;
        for(auto m:MA){
            if(m.second==Y.size()){
                chmin(an,m.first);
            }
        }
        cout<<(an<1e17?an:-1)<<endl;


    }

}



