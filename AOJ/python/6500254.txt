import java.util.*;
import java.io.*;

public class Main {
    
    public static Scanner sc = new Scanner(System.in);
    public static PrintWriter pw = new PrintWriter(System.out);
    
    public static void main(String[] args) {
        
        solve();
        pw.flush();
        
    }
    
    static void solve() {
        
        int N = sc.nextInt();
        int[] p = new int[N];
        int[] invp = new int[N];
        long v = 0;
        BinaryIndexedTree bit = new BinaryIndexedTree(N,998244353);
        
        for( int i = 0; i < N; i++ ) {
            p[i] = sc.nextInt()-1;
            invp[p[i]] = i;
        }
        
        for( int i = N-1; i >= 0; i-- ) {
            v += bit.sum(0,invp[i]);
            bit.add(invp[i],1);
        }
        
        if( v%2 == 1 ) pw.println(-1);
        else pw.println(v-1);
        
    }
    
}

class BinaryIndexedTree {
    
    int N;
    long P;
    long[] val;
    
    public BinaryIndexedTree(int N, long P) {
        
        this.N = N;
        this.P = P;
        this.val = new long[N+1];
        
    }
    
    public void add(int i, long x) {
        
        i++;
        for(; i <= N; i += i&-i ) {
            val[i] += x;
            val[i] %= P;
        }
        
    }
    
    public long sum(int l, int r) {
        
        return (sumsub(r)-sumsub(l-1)+P)%P;
        
    }
    
    public long sumsub(int i) {
        
        i++;
        long res = 0;
        for(; i > 0; i -= i&-i ) {
            res += val[i];
            res %= P;
        }
        
        return res;
        
    }
    
}
