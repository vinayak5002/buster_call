import java.io.*;

public class Main {

	static String[] dictionary;
	static int B;
	static int maxK = 0;

	public static void main(String[] args) throws IOException{

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);

		int n = Integer.parseInt(br.readLine());
		String order;
		String[] str = new String[2];
		B = 1046527;
		dictionary = new String[B];

		for(int i=0; i<n; i++) {

			order = br.readLine();
			str = order.split(" ");

			long strKey = changeInt(str[1]);

			if(str[0].charAt(0)=='i')
				insert(strKey, str[1]);
			else
				out.println(find(strKey, str[1]));
		}

		out.flush();
	}

	//数値に変換したstrを二重ハッシュで格納
	static void insert(long key, String str) {

		int k = 0;
		int d = -1;

		while(true) {

			d = (int)(h1(key) + k * h2(key)) % B;

			if(dictionary[d]!=null && dictionary[d].equals(str))
				break;

			if(dictionary[d] == null) {
				dictionary[d] = str;
				if(maxK < k)
					maxK = k;

				break;
			}

			k++;
		}
	}

	//strがdictionaryに格納されているか
	static String find(long key, String str) {

		int k = 0;
		int d = -1;

		while(true) {
			d = (int)(h1(key) + k * h2(key)) % B;

			if(dictionary[d] == null || k == maxK + 1)
				return "no";

			else if(dictionary[d].equals(str))
				return "yes";

			k++;
		}
	}

	//str(ACGT)を数値に変換
	static long changeInt(String str) {

		long key = 0;
		int c = 0;

		for(int i=0; i<str.length(); i++) {

			if(str.charAt(i) == 'A')
				c = 1;
			else if(str.charAt(i) == 'C')
				c = 2;
			else if(str.charAt(i) == 'G')
				c = 3;
			else if(str.charAt(i) == 'T')
				c = 4;

			key = 5 * key + c;
		}

		return key;
	}

	//各ハッシュ関数
	static long h1(long k) {
		return (int)(k % B);
	}

	static long h2(long k) {
		return (int)(1 + (k % (B-7)));
	}

}

