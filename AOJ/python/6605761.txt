//#include <boost/multiprecision/cpp_dec_float.hpp>
//#include <boost/multiprecision/cpp_int.hpp>
#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <math.h>
#include <algorithm>
#include <bitset>
#include <iomanip>
using namespace std;
//namespace mp = boost::multiprecision;
//using llll = mp::cpp_int;
// 仮数部が1024ビットの浮動小数点数型(TLEしたら小さくする)
//using Real = mp::number<mp::cpp_dec_float<1024>>;
using ll = long long;
const double EPS = 1e-10;
const ll MOD = 7+(1e+9);

int main(){
  //cout<<fixed<<setprecision(10);
  ll n,k;
  for(cin>>n>>k;n!=0||k!=0;cin>>n>>k){
    ll ans=-MOD;
    vector<ll>v(n,0);
    vector<ll>v2(n+1,0);
    for(ll i=0;i<n;i++){
      cin>>v[i];
      v2[i+1]=v2[i]+v[i];
    }
    for(ll i=0;i<n-2;i++){
      ans=max(ans,v2[i+3]-v2[i]);
    }
    cout<<ans<<endl;
  }
}

