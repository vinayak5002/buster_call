require('readline')
  .createInterface({ input: process.stdin })
  .on('line', (line) => main(line, process.stdout))

  /**
   * @type {object}
   */
const s = {
  length: 0
}
let f = true

/**
 * @param {string} line 
 * @param {NodeJS.WriteStream} so 
 */
function main(line, so) {
  if(f) {
    f = false
    return
  }

  const o = line.split(' ')
  switch(o[0]) {
    case '0':
      s[Number(o[1])] = true
      s.length++
      so.write(s.length + '\n')
      break
    case '1':
      so.write((s[Number(o[1])] ? 1 : 0) + '\n')
      break
    case '2':
      delete s[Number(o[1])]
      s.length--
      break
    case '3':
      const l = Number(o[1])
      const r = Number(o[2])
      Array.from(Object.keys(s)).forEach(v => {
        const vn = Number(v)
        if(l <= vn && vn <= r)
          so.write(vn + '\n')
      })
      break
  }
}

