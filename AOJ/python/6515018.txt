from collections import deque
n = int(input())
arr = deque([])
def DtoN(s):
    retnum= 0
    for i in range(len(s)):
        if s[i] == "A":
            retnum += 1 * 5**i
        elif s[i] == "C":
            retnum += 2 * 5**i
        elif s[i] == "G":
            retnum += 3 * 5**i
        elif s[i] == "T":
            retnum += 4 * 5**i
    return retnum
def binalys(str, arr):
    left = 0; right = len(arr)
    mid = int((left + right)/2)
    while right-left > 15:
        if str >= arr[mid]:
            left = mid
            mid = int((left + right)/2)
        else:
            right = mid
            mid = int((left + right)/2)
    if str in arr:
        print("yes")
    else:
        print("no")
def ins(que, s):#arrに入れて並べ替え
    flag = False
    if not(s in que):
        for i in range(len(que)):
            if que[i] > s and flag == False:
                que.insert(i,s)
                flag = True
            else:
                pass
        if flag == False:
            que.append(s)
    # print(arr)
        
for i in range(n):
    l = input().split()
    if l[0][0] == "i":
        ins(arr,DtoN(l[1]))
    elif l[0][0] == "f":
        binalys(DtoN(l[1]),arr)
