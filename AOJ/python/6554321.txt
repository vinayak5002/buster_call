import sys

import bisect
import array
import heapq
from collections import deque, defaultdict
import math
import copy
from itertools import permutations

sys.setrecursionlimit(10**9)
INF = float("inf")
mod = 998244353


#N = input()
#N,M = map(int,input().split())
#A = list(map(int,input().split()))

def square(n):
    return n*(n+1)*(n+2)//6
dp = [INF]*(10**6+1)
dp[0] = 0
ep = [INF]*(10**6+1)
ep[0] = 0
for i in range(1,2*10**2):
    for j in range(10**3+1):
        if j>=square(i):
            dp[j] = min(dp[j],dp[j-square(i)]+1)
            if square(i)%2 == 1:
                ep[j] = min(ep[j],ep[j-square(i)]+1)
while True:
    N = int(input())
    if N == 0:
        exit()
    print(dp[N],ep[N])
