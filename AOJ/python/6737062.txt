// #include "atcoder/all"
#include <iostream> // cout, endl, cin
#include <string> // string, to_string, stoi
#include <vector> // vector
#include <algorithm> // min, max, swap, sort, reverse, lower_bound, upper_bound
#include <utility> // pair, make_pair
#include <tuple> // tuple, make_tuple
#include <cstdint> // int64_t, int*_t
#include <cstdio> // printf
#include <map> // map
#include <queue> // queue, priority_queue
#include <set> // set
#include <stack> // stack
#include <deque> // deque
#include <unordered_map> // unordered_map
#include <unordered_set> // unordered_set
#include <bitset> // bitset
#include <cctype> // isupper, islower, isdigit, toupper, tolower
#include <iomanip> // setprecision
#include <complex> // complex
#include <math.h>
#include <functional>
#include <cassert>
using namespace std;
// using namespace atcoder;
using ll = long long;
using P = pair<ll,ll>;
constexpr ll INF = 1e18;
constexpr ll LLMAX = 9223372036854775807;
constexpr int inf = 1e9;
// constexpr ll mod = 1000000007;
constexpr ll mod = 998244353;
// 右下左上
const int dx[8] = {1, 0, -1, 0,1,1,-1,-1};
const int dy[8] = {0, 1, 0, -1,1,-1,1,-1};
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }
ll gcd(ll a,ll b){if(b==0){return a;}else{return gcd(b,a%b);}};
#define eb emplace_back
#define pb pop_back
#define eol endl
// ---------------------------------------------------------------------------

bool solve(){
    ll N;
    cin >> N;
    if(N == 0) return false;
    vector<ll> A(N);
    for(int i=0; i<N; i++) cin >> A[i];
    vector<vector<P>> dp(N+1,vector<P>(500*101,P(-1,-INF)));
    dp[0][0] = P(0,0);
    for(int i=0; i<N; i++){
        ll use_1000 = 1000;
        while(use_1000 < A[i]){
            use_1000 += 1000;
        }
        for(int j=0; j<500*101; j++){
            if(dp[i][j].first == -1) continue;
            {// かわない
                chmax(dp[i+1][j],dp[i][j]);
            }
            {//　おつり作る
                ll nxt500 = dp[i][j].first + (use_1000-A[i] >= 500);
                ll nxtrem = j + (use_1000-A[i])%500;
                if(nxtrem < 500*101){
                    chmax(dp[i+1][nxtrem],P(nxt500,dp[i][j].second-A[i]));
                }
            }
            {// おつり使う
                if(A[i]%500 > j) continue;
                if(A[i]%1000 > 500){
                    ll nxt500 = dp[i][j].first + 1;
                    ll nxtrem = j - A[i]%500;
                    ll nowuse = use_1000 + A[i]%500;
                    chmax(dp[i+1][nxtrem],P(nxt500,dp[i][j].second-A[i]));
                }else{
                    // 500つくらない
                    ll nxt500 = dp[i][j].first;
                    ll nowuse = (use_1000-1000) + A[i]%500;
                    ll nxtrem = j - A[i]%500;
                    chmax(dp[i+1][nxtrem],P(nxt500,dp[i][j].second-A[i]));
                    if(nxtrem >= 500){
                        nxt500++;
                        nxtrem -= 500;
                        chmax(dp[i+1][nxtrem],P(nxt500,dp[i][j].second-A[i]));
                    }
                }
            }
        }
    }
    P ans(-1,-1);
    for(int i=0; i<500*101; i++){
        chmax(ans,dp[N][i]);
    }
    cout << ans.first << " " << -ans.second << endl;
    return true;
}


int main(){
    while(solve());
    return 0;
}
