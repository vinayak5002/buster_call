vector<int> isPassed(101010, false);
vector<vector<int>> graph(101010);

bool dfs(const int current, const int before) {
    isPassed[current] = true;
    for(int i = 0; i < graph[current].size(); i++) {
        if(graph[current][i] == before) {
           
            continue;
        }
        if(isPassed[ graph[current][i] ]) {
          
            return true;
        }
        dfs(graph[current][i], current);
    }
    return false;
}

int main() {

    int n, m;
    cin >> n >> m;

    rep(i, m){
        int a, b;
        cin >> a >> b;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }

    bool hasLoop = dfs(0, -1);
    if(hasLoop) {
        cout << "1" << endl;
    } else {
        cout << "0" << endl;
    }
}

