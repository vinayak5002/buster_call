use std::io::BufRead;

fn main() {
    let input = std::io::BufReader::new(std::io::stdin());
    let mut lines = input.lines();
    let a = lines
        .nth(1)
        .unwrap()
        .unwrap()
        .split_ascii_whitespace()
        .map(|e| e.parse::<u32>().unwrap())
        .collect::<Vec<_>>();
    lines
        .nth(1)
        .unwrap()
        .unwrap()
        .split_ascii_whitespace()
        .map(|e| e.parse::<u32>().unwrap())
        .for_each(|target| {
            if is_combination_possible(target, &a[..]) {
                println!("yes");
            } else {
                println!("no");
            }
        });
}

fn is_combination_possible (target:u32, parts: &[u32]) -> bool{
    target == 0
    ||
    (parts.len() > 0 && (is_combination_possible(target, &parts[1..]) || is_combination_possible(target - parts[0], &parts[1..])))
}

