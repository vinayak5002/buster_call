from collections import deque
direction = [[0, 1], [0, -1], [-1, 0], [1, 0], [1, 1], [1, -1], [-1, -1], [-1, 1]]


def bfs(w, h):
    c = [list(map(int, input().split())) for i in range(h)]
    ans = 0
    for y in range(h):
        for x in range(w):
            if c[y][x]:
                ans += 1
                q = deque()
                q.append((x, y))
                while q:
                    nowX, nowY = q.popleft()
                    for mx, my in direction:
                        xm = nowX + mx
                        ym = nowY + my
                        if 0 <= xm < w and 0 <= ym < h:
                            if c[ym][xm]:
                                c[ym][xm] = 0
                                q.append((xm, ym))
    return ans


while 1:
    w, h = map(int, input().split())
    if w ==0 and h ==0:
        break
    print(bfs(w, h))
