n=int(input())
import math
def Koch_curve(p1,p2,count):
    s=[0.0]*2
    t=[0.0]*2
    u=[0.0]*2
    for i in range(1):
        s[i]=(2*p1[i]+p2[i])/3
        t[i]=(p1[i]+2*p2[i])/3
    u[0]=(t[0]+s[0])/2-(math.sqrt(3)*(t[1]-s[1])/2)
    u[1]=(t[1]+s[1])/2+(math.sqrt(3)*(t[0]-s[0])/2)
    
    count+=1
    if(count==n):
        print(s[0],s[1])
        print(u[0],u[1])
        print(t[0],t[1])
        print(p2[0],p2[1])
        return s,u,t,p2
    # Koch_curve(p1,s)
    # Koch_curve(s,u)
    # Koch_curve(u,t)
    # Koch_curve(t,p2)
    return Koch_curve(p1,s,count),Koch_curve(s,u,count),Koch_curve(u,t,count),Koch_curve(t,p2,count)
    
    # return Koch_curve(s,u)
    # Koch_curve(p1,s)
    # Koch_curve(s,u)
    # Koch_curve(u,t)
    # Koch_curve(t,p2)

p1=[0.0,0.0]
p2=[100,0]
print(p1[0],p1[1])
Koch_curve(p1,p2,0)
