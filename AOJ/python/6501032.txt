/*
1.binary tree 再帰
2.tree:
        left: arr[m] をs　に入れる　、つまり問題は ０ー８の中で nー１ご個数字を選んで和が　sー９ となる
        left: arr[m] をs　に入れない　、つまり問題は ０ー８ の中で n ご個数字を選んで和が s となる
        
        そのように再帰。



*/
import java.util.*;

public class Test5 {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int s = scan.nextInt();

        int[] arr = new int[]{0,1,2,3,4,5,6,7,8,9};

        int cnt;

        while(s !=0 || n != 0)
        {
            cnt = sum(9,arr,n,s);

            n = scan.nextInt();
            s = scan.nextInt();
            System.out.println(cnt);
        }




    }


    public static int sum( int m ,int[] arr ,int n , int s )
    {
        int cnt1 = 0;
        int cnt2 = 0 ;
        int cnt=0;
        if(n <0 || m < 0)
            return cnt;
        else{

            if(arr[m]==s && n==1){
                cnt++;
                return cnt;
            }else{
                cnt1 = sum(m-1,arr,n-1,s-arr[m]);
                cnt2 = sum(m-1,arr,n,s);

            }
            cnt = cnt+cnt1+cnt2;

            return cnt;
        }

    }

}

