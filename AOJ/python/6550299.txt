import sys
from itertools import product

def main(ioi):
    rxs = lambda: map(int, ioi.readline().split())
    N, = rxs()
    X1s, Y1s, X2s, Y2s = zip(*[[*rxs()] for _ in range(N)])
    xs = sorted(set(X1s+X2s))
    ys = sorted(set(Y1s+Y2s))
    x2i = {x: i for i, x in enumerate(xs)}
    y2i = {y: i for i, y in enumerate(ys)}
    W, H = len(xs), len(ys)
    As = [[0]*H for _ in range(W)]
    
    for x1, y1, x2, y2 in zip(X1s, Y1s, X2s, Y2s):
        As[x2i[x1]][y2i[y1]] += 1
        As[x2i[x2]][y2i[y2]] += 1
        As[x2i[x1]][y2i[y2]] -= 1
        As[x2i[x2]][y2i[y1]] -= 1

    for y in range(H):
        for x in range(1, W):
            As[x][y] += As[x-1][y]
    for x in range(W):
        for y in range(1, H):
            As[x][y] += As[x][y-1]

    return max(As[x][y] for x, y in product(range(W), range(H)))
    

DBG = False
if not DBG: print(main(sys.stdin))
else:
    import io
    print(main(io.StringIO("""2
0 0 3 2
2 1 4 3
""")))

