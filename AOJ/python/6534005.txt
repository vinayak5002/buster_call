import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.NoSuchElementException;
import java.util.zip.ZipEntry;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	
	static ArrayList<ArrayList<Integer>> list;
	static int[][] ans;
	static boolean[] isVisited;
	static int time;
	public static void main (String args[]) throws Exception{
		int n = Integer.parseInt(br.readLine());
		list = new ArrayList<ArrayList<Integer>>();
		for(int i = 0; i < n+1; ++i) list.add(new ArrayList<Integer>());
		for(int i = 0; i < n; ++i) {
			String[] s = br.readLine().split(" ");
			int u = Integer.parseInt(s[0]);
			int k = Integer.parseInt(s[1]);
			for(int j = 0; j < k; ++j) {
				list.get(u).add(Integer.parseInt(s[j+2]));
			}
		}
		isVisited = new boolean[n+1];
		ans = new int[n+1][2];
		time = 1;
		boolean f = true;
		while(f) {
			for(int i = 0; i < n; ++i) {
				if(!isVisited[i+1]) {
					dfs(i+1);
				}
				if(i == n-1) f = false;
			}
		}
		
		for(int i = 0; i < n; ++i) {
			System.out.println(i+1+" "+ans[i+1][0]+" "+ans[i+1][1]);
		}
		
	}
	
	static void dfs(int v) {
		isVisited[v] = true;
		ans[v][0] = time++;
		for(int i = 0; i < list.get(v).size(); ++i) {
			if(isVisited[list.get(v).get(i)]) continue;
			dfs(list.get(v).get(i));
		}
		ans[v][1] = time++;
	}
}
