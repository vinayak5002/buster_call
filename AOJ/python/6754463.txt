def find_Root(x):
    if parent[x] != x:
        parent[x] = find_Root(parent[x])
        weight[x] += weight[parent[x]]
    return parent[x]


def unite(x, y, w):
    root_x = find_Root(x)
    root_y = find_Root(y)

    if rank[root_x] == rank[root_y]:
        parent[root_y] = root_x
        rank[root_x] += 1
        weight[r_Y] = weight[x] + w - weight[y]
    elif rank[root_x] < rank[root_y]:
        parent[root_y] = root_x
        weight[root_x] = weight[y] - w - weight[x]
    else:
        parent[root_y] = root_x
        weight[root_y] = weight[x] + w - weight[y]


N, Q = map(int,input().split())
parent = list(range(N))
weight = list(range(N))
rank = list(range(N))

sum = 0
for _ in range(Q):
    query = list(map(int, input().split()))
    if query[0] == 0:
        unite(query[1:3])
    else:
        if find_root(q[1]) == find_root(q[2]):
            print(weight[q[2]] - weight[q[1]])
        else:
            print("?")

