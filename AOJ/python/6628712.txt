const a = require('fs').readFileSync('/dev/stdin', 'utf8').split("\n")

const num = Number(a.shift())
const arr = a.map(el => el.split(" "))
let cards = {
  S: [],
  H: [],
  C: [],
  D: [],
}

arr.forEach(el => {
  if (el[0] === 'S') {
    cards.S.push(el)
  } else if (el[0] === 'H') {
    cards.H.push(el)
  } else if (el[0] === 'C') {
    cards.C.push(el)
  } else if (el[0] === 'D') {
    cards.D.push(el)
  }
})
let ans = []
for (const [suit, arr] of Object.entries(cards)) {
  arr.sort((a,b) => (a[1] - b[1]));
  let current = 1
  for(let i = 0; i < arr.length; i++) {
		const n = arr[i] ? parseInt(arr[i][1]) : null
    if (i === arr.length - 1 && n != 13) {
			for (let j = current + 1; j <= 13; j++) {
        ans.push([`${suit}`, j])
      }
    } else if (current != n) {
			for (let j = current; j < (n || i + 1); j++) {
        ans.push([`${suit}`, j])
      }
      current = n || i + 1
    }
    current++;
  }
}
console.log(ans.map(el => el.join(" ")).join("\n").trim())
