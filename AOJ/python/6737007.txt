'''input

'''
import sys
import math
from bisect import bisect_right, bisect_left
from itertools import *
from collections import *
from heapq import heapify, heappush, heappop
inf = float('inf')
# mod = 1000000007
# mod = 998244353
input = lambda: sys.stdin.readline().rstrip()
def error(*args, sep=' ', end='\n'):
  print(*args, sep=sep, end=end, file=sys.stderr)
sys.setrecursionlimit(10**6)

##################

def plus(*args):
  ret = 0
  for arg in args:
    ret += int(arg)
  return ret

def multi(*args):
  ret = 1
  for arg in args:
    ret *= int(arg)
  return ret

flag = True
def dfs(n):
  if n == 0:
    return
  global li
  li.append([])
  s = input()
  if s[-1] in {'*', '+'}:
    # if (not li[len(s)-1]) or li[len(s)-1][-1] != ' ':
    #   li[len(s)-1].append(' ')
    li[len(s)].append(' ')
    li[len(s)+1].append(s[-1])
    dfs(n-1)
  else:
    li[len(s)].append(s[-1])
    dfs(n-1)
  return

fa = [[' '], []]
import copy
flag = True
while True:
  li = copy.deepcopy(fa)
  # print(li)
  m = int(input())
  if m == 0:
    break
  dfs(m)
  # print(li)
  a = []
  for i in range(len(li)-1, 0, -1):
    if not li[i]:
      continue
    tmp = [[]]
    for j in li[i]:
      if j in {'*', '+'}:
        tmp.append([j])
      else:
        tmp[-1].append(j)
    # print('tmp', tmp)
    for tm in tmp:
      if not tm: continue
      op = tm[0]
      if op == '+':
        li[i-1][li[i-1].index(' ')] = (plus(*tm[1:]))
      elif op == '*':
        li[i-1][li[i-1].index(' ')] = (multi(*tm[1:]))
  # print(li)
  print(li[1][0])
  li.clear()

