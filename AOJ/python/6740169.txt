use std::io;

fn main() {

    let mut data_set: Vec<_> = vec![];
    let mut result_count: Vec<i32> = vec![];
    loop {
        let mut s = String::new();
        io::stdin().read_line(&mut s).expect("Error");
        let line_str: Vec<&str> = s.split_whitespace().collect();
        let n = line_str[0].parse().unwrap_or(0);
        let x = line_str[1].parse().unwrap_or(0);
        if n == 0 && x == 0 {
            break;
        } else {
            let data = vec![n, x];
            data_set.push(data);
        }
    }

    for data in data_set {

        let n = data[0];
        let x = data[1];
        let mut match_num = 0;
        let mut comb: Vec<usize> = vec![];
        for i in 1..(n) as usize+1 {
            comb.push(i);
        }


        for i in 1..n+1 {
            for j in i+1..n+1 {
                for k in j+1..n+1 {
                    if i != j && j != k && k != i {
                        let sum = i + j + k;
                        if sum == x {
                            match_num += 1;
                        }
                    }
                }
            }
        }
        result_count.push(match_num);

    }
    for i in result_count {
        println!("{}", i);
    }
}

