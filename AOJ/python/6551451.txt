//#define _GLIBCXX_DEBUG
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <tuple>
#include <utility>
#include <vector>

using namespace std;

// https://onlinejudge.u-aizu.ac.jp/problems/ALDS1_10_B

vector<int> r, c;
vector<vector<int>> dp;

int rec(int x, int y) {
  if (dp[x][y] || y - x <= 1) return dp[x][y];
  if (y - x == 2) return dp[x][y] = r[x] * c[x] * c[y - 1];
  int result = rec(x + 1, y - 1) +
           min(r[x] * c[x] * r[y - 1] + r[x] * r[y - 1] * c[y - 1],
               c[x] * r[y - 1] * c[y - 1] + r[x] * c[x] * c[y - 1]);
  for (int i = x + 1; i <= y - 2; ++i)
    result = min(result, rec(x, i) + rec(i, y) + r[x] * r[i] * c[y - 1]);
  return dp[x][y] = result;
}

int main() {
  int n;
  cin >> n;
  r.resize(n);
  c.resize(n);
  for (int i = 0; i < n; ++i) cin >> r[i] >> c[i];
  dp.resize(n, vector<int>(n + 1));
  cout << rec(0, n) << '\n';
  return 0;
}
