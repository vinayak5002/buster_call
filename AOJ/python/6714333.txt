//#define _GLIBCXX_DEBUG
#include <bits/stdc++.h>
using namespace std;
#if __has_include(<atcoder/all>)
    #include <atcoder/all>
    using namespace atcoder;
    // using mint = modint1000000007;
    // using mint = modint998244353;
    // using mint = modint;
    // const int MOD = mint::mod();
#endif
using ll = long long;
template <class T> using pqg = priority_queue<T, vector<T>, greater<T>>;
// const int MOD = (int)1e9 + 7;
// const int MOD = (int)998244353;
const int INF = (int)1e9 + 1001010;
const ll llINF = (ll)4e18 + 11000010;
const double PI = 3.14159265358979;
const double EPS = 1e-10;
#define Isize(x) (int)((x).size())
#define ALL(x) (x).begin(),(x).end()
#define RALL(x) (x).rbegin(),(x).rend()
#define endn "\n"
#define SUM(v) accumulate(ALL(v), 0LL)
#define MIN(v) *min_element(ALL(v))
#define MAX(v) *max_element(ALL(v))
#define popcount __builtin_popcount
#define popcountll __builtin_popcountll

template <class T> inline vector<vector<T>> vector2(const size_t &i, const size_t &j, const T &init = T()) {
    return vector<vector<T>>(i, vector<T>(j, init));
}
template <class T> inline vector<vector<vector<T>>> vector3(const size_t &i, const size_t &j, const int &k, const T &init = T()) {
    return vector<vector<vector<T>>>(i, vector<vector<T>>(j, vector<T>(k, init)));
}
template <class T> inline vector<vector<vector<vector<T>>>> vector4(const size_t &i, const size_t &j, const size_t &k, const size_t &l, const T &init = T()) {
    return vector<vector<vector<vector<T>>>>(i, vector<vector<vector<T>>>(j, vector<vector<T>>(k, vector<T>(l, init))));
}

const string VEC_ELEM_SEPARATION = " ";
const string VEC_VEC_SEPARATION = endn;
template<class T> istream & operator >> (istream &i, vector<T> &A) {for(auto &I : A) {i >> I;} return i;}
template<class T> ostream & operator << (ostream &o, const vector<vector<T>> &A) {int i=A.size(); for(auto &I : A){o << I << (--i ? VEC_VEC_SEPARATION : "");} return o;}
template<class T> ostream & operator << (ostream &o, const vector<T> &A) {int i=A.size(); for(auto &I : A){o << I << (--i ? VEC_ELEM_SEPARATION : "");} return o;}
template<class T, class U> istream & operator >> (istream &i, pair<T,U> &A) {i >> A.first >> A.second; return i;}
template<class T, class U> ostream & operator << (ostream &o, const pair<T,U> &A) {o << A.first << " " << A.second; return o;}
template<class T, class U, class V> istream & operator >> (istream &i, tuple<T,U,V>&A) {i >> get<0>(A) >> get<1>(A) >> get<2>(A); return i;}
template<class T, class U, class V>ostream & operator << (ostream &o, const tuple<T,U,V> &A) {o << get<0>(A) << " " << get<1>(A) << " " << get<2>(A); return o;}

template<class T> vector<T>& operator ++(vector<T> &A) {for(auto &I : A) {I++;} return A;}
template<class T> vector<T>& operator ++(vector<T> &A, int n) {for(auto &I : A) {I++;} return A;}
template<class T> vector<T>& operator --(vector<T> &A) {for(auto &I : A) {I--;} return A;}
template<class T> vector<T>& operator --(vector<T> &A, int n) {for(auto &I : A) {I--;} return A;}

template<class T, class U> ll max(const T &a, const U &b){return ((a > b) ? a : b);}
template<class T, class U> ll min(const T &a, const U &b){return ((a < b) ? a : b);}
template<class T, class U> bool chmax(T &a, const U &b){return ((a < b) ? (a = b, true) : false);}
template<class T, class U> bool chmin(T &a, const U &b){return ((a > b) ? (a = b, true) : false);}

ll floor(ll a, ll b){
    assert(b != 0);
    if(a%b != 0 && ((a>0) ^ (b>0))) return a/b - 1;
    else return a/b;
}

ll ceil(ll a, ll b){
    assert(b != 0);
    if(a%b != 0 && !((a>0) ^ (b>0))) return a/b + 1;
    else return a/b;
}
// ================================== ここまでテンプレ ==================================


int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    while(true){
        int n; cin >> n;
        if(n == 0) break;
        vector<int> w(n); cin >> w;

        auto dp = vector2<int>(n, n, -1);
        auto dfs = [&](auto &&dfs, int l, int r) -> ll{
            if(dp[l][r] != -1) return dp[l][r];
            if(l > r) return 0;
            if(l == r) {
                return dp[l][r] = 0;
            }
            if(l+1 == r){
                return dp[l][r] = 2*(int)(abs(w[l] - w[r]) <= 1);
            }

            if(dfs(dfs, l+1, r-1) == abs(r-l-1)){
                chmax(dp[l][r], r-l-1 + 2*(int)(abs(w[l] - w[r]) <= 1));
            }
            for(int k = l; k < r; k++){
                chmax(dp[l][r], dfs(dfs, l, k) + dfs(dfs, k+1, r));
            }

            return dp[l][r];
        };


        cout << dfs(dfs, 0, n-1) << endl;
    }
    return 0;
}
