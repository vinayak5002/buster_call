// by Siddhid Saha

#include <bits/stdc++.h>
using namespace std;


#define INF 1e18
#define endl "\n"
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define all(x) (x).begin(), (x).end()
#define vi vector<int>
#define vll vector<ll>
#define rsort(a) sort(a,a+n,greater<int>())
#define rvsort(a) sort(all(a),greater<int>())
#define read(a,n) for(int i = 0 ; i < n ; i ++){ cin >> a[i];}
#define printv(a) for(auto it: a){cout << it << " ";}
#define f0r(a, b) for (long long a = 0; a < b; a++)
#define f1r(a, b, c) for (long long a = b; a < c; a++)
#define f0rd(a, b) for (long long a = b; a >= 0; a--)
#define f1rd(a, b, c) for (long long a = b; a >= c; a--)
#define ms(arr, v) memset(arr, v, sizeof(arr))


typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;

//const int mod = 1e9 + 7 , mod1 = 998244353; 

void solve(int tc =0)
{
	cout << "Hello World" <<endl;
	return;
}

int main() {
     
 solve();

	return 0;
}








/*struct Matrix{
	double a[2][2] = {{0,0} ,{0, 0}};
	Matrix operator *(const Matrix& other){
		Matrix product; 
		REP(i,2)REP(j,2)REP(k,2){
			product.a[i][k] += a[i][j] * other.a[j][k];
		} 
		return product;
	}
};*/


/*ll expo_power( ll a , ll k)
{
    ll product = 1;
	while(k > 0){
		if(k%2){
			product = product *a;
		} 
		a *= a;
		k /= 2;
	}
	return product;
}*/
