import java.io.*;
import java.util.StringTokenizer;

class AReader implements Closeable {
    private BufferedReader reader;
    private StringTokenizer tokenizer;
    public AReader(InputStream inputStream) {
        reader = new BufferedReader(new InputStreamReader(inputStream));
        tokenizer = new StringTokenizer("");
    }
    private String innerNextLine() {
        try {
            return reader.readLine();
        } catch (IOException ex) {
            return null;
        }
    }
    public boolean hasNext() {
        while (!tokenizer.hasMoreTokens()) {
            String nextLine = innerNextLine();
            if (nextLine == null) {
                return false;
            }
            tokenizer = new StringTokenizer(nextLine);
        }
        return true;
    }
    public String next() {
        hasNext();
        return tokenizer.nextToken();
    }
    public int nextInt() {
        return Integer.parseInt(next());
    }

    public long nextLong(){
        return Long.parseLong(next());
    }



    @Override
    public void close() throws IOException {
        reader.close();
    }
}
class AWriter implements Closeable {
    private BufferedWriter writer;
    public AWriter(OutputStream outputStream) {
        writer = new BufferedWriter(new OutputStreamWriter(outputStream));
    }
    public void println(Object object) throws IOException {
        writer.write(object.toString());
        writer.write("\n");
    }

    public void print(Object object) throws IOException {
        writer.write(object.toString());
    }

    @Override
    public void close() throws IOException {
        writer.close();
    }
}




public class Main {

    static int N = 200005, cnt = 0;
    static int f[] = new int[N];


    public static void main(String[] args) throws IOException {
	// write your code here
        AReader reader = new AReader(new BufferedInputStream(System.in));
        AWriter writer = new AWriter(System.out);


        int n = reader.nextInt();
        for (int i = 0; i < n; i++) {
            f[i] = reader.nextInt();
        }
        int ans = Integer.MIN_VALUE;
        int min_value = f[0];
        for(int i = 1; i < n; i ++){
            ans = Math.max(ans, f[i] - min_value);
            min_value = Math.min(min_value, f[i]);
        }
        writer.println(ans);

        reader.close();
        writer.close();
    }
}

