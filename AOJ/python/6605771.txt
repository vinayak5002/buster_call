//#include <boost/multiprecision/cpp_dec_float.hpp>
//#include <boost/multiprecision/cpp_int.hpp>
#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <math.h>
#include <algorithm>
#include <bitset>
#include <iomanip>
using namespace std;
//namespace mp = boost::multiprecision;
//using llll = mp::cpp_int;
// 仮数部が1024ビットの浮動小数点数型(TLEしたら小さくする)
//using Real = mp::number<mp::cpp_dec_float<1024>>;
using ll = long long;
const double EPS = 1e-10;
const ll MOD = 7+(1e+9);

int main(){
  //cout<<fixed<<setprecision(10);
  ll n,q,ans=0;
  cin>>n;
  set<ll> st;
  for(ll i=0;i<n;i++){
    ll a;
    cin>>a;
    st.insert(a);
  }
  cin>>q;
  vector<ll>v2(q,0);
  for(ll i=0;i<q;i++){
    cin>>v2[i];
  }
  for(ll i=0;i<q;i++){
    ans+=!!st.count(v2[i]);
  }
  cout<<ans<<endl;
}

