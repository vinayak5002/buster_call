import java.util.*;

public class Main {
    static Scanner sc = new Scanner(System.in);
    public static void main(String[] args) {
        int n = getInt();
        int[] S = new int[n];
        Arrays.setAll(S, num -> getInt());
        System.out.println(mergeSort(S, 0, S.length));
    }

    static int getInt() {
        return Integer.parseInt(sc.next());
    }

    static int merge(int[] A, int left, int right, int mid) {
        int n1 = mid - left;
        int n2 = right - mid;
        int cnt = 0;
        int[] L = new int[n1 + 1];
        int[] R = new int[n2 + 1];
        for (int i = 0; i < n1; i++) {
            L[i] = A[left + i];
        }
        for (int i = 0; i < n2; i++) {
            R[i] = A[mid + i];
        }
        L[n1] = R[n2] = Integer.MAX_VALUE;
        int li = 0, ri = 0;
        for (int i = left; i < right; i++) {
            if (L[li] < R[ri]) {
                A[i] = L[li++];
            } else {
                A[i] = R[ri++];
                cnt += n1 - li;
            }
        }
        return cnt;
    }

    static int mergeSort(int[] A, int left, int right) {
        if (left + 1 < right) {
            int mid = (left + right) / 2;
            int v1 = mergeSort(A, left, mid);
            int v2 = mergeSort(A, mid, right);
            int v3 = merge(A, left, right, mid);
            return v1 + v2 + v3;
        }
        return 0;
    }
}

