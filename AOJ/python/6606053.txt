// https://qiita.com/DaikiSuyama/items/9dba963ba74396b9b7fd
// https://luling.hatenablog.com/entry/2018/12/01/212805
// https://zenn.dev/antyuntyun/articles/atcoder-cpp-template
//
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

// rep macro
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); ++i)
#define rreps(i, a, n) for (ll i = (a); i > (ll)(n); --i)
#define rep(i, n) reps(i, 0, n)
#define rrep(i, n) reps(i, 1, n + 1)
#define repd(i,n) for(ll i=n-1;i>=0;i--)
#define rrepd(i,n) for(ll i=n;i>=1;i--)

#define optimize_cin() cin.tie(0); ios::sync_with_stdio(false)

#define pb push_back
#define mp make_pair
#define all(obj) (obj).begin(), (obj).end()
#define YESNO(bool) if(bool){cout<<"YES"<<endl;}else{cout<<"NO"<<endl;}
#define yesno(bool) if(bool){cout<<"yes"<<endl;}else{cout<<"no"<<endl;}
#define YesNo(bool) if(bool){cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

//定数
#define INF32 2147483647           // 2.147483647 x 10^{9}:32bit整数のinf
#define INF64 9223372036854775807  // 9.22337203685477580 x 10^{18}:64bit整数のinf
#define MOD 1000000007             //問題による
#define PI 3.14159265359           // 円周率

//略記
#define F first
#define S second

//出力(空白区切りで昇順に)
#define dump(x)                                                 \
  for (auto i = x.begin(); i != --x.end(); i++) cout << *i << " "; \
  cout << *--x.end() << endl;
#define echo(x) cout << (x) << endl;

// aをbで割る時の繰上げ,繰り下げ
ll _ceil(ll a, ll b) { return (a + (b - 1)) / b; }
ll _floor(ll a, ll b) { return a / b; }

// 大きい方、小さい方を残す
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

// 参考 : https://ufcpp.net/study/algorithm/col_heap.html

vector<ll> xs;

void pushHeap(ll x) {
  int n = xs.size();
  xs.push_back(x);
  while (n != 0) {
    int i = (n - 1) / 2;
    // 親と子を入れ替える
    if (xs[n] < xs[i]) {
      swap(xs[n], xs[i]);
    }
    n = i;
  }
}

ll popHeap() {
  ll element = xs.back();
  int n = xs.size() - 1;
  xs[n] = xs[0];
  xs.pop_back();
  for (int i = 0, j; (j = 2 * i + 1) < n;) {
    // 値の大きい方を選択する
    if (j != n - 1 && xs[j] > xs[j + 1]) j++;
    // 子と入れ替え
    if (xs[i] > xs[j]) {
      swap(xs[i], xs[j]);
    }
    i = j;
  }
  return element;
}

signed main() {
  while (true) {
    string op;
    cin >> op;
    if (op == "insert") {
      ll value;
      cin >> value;
      pushHeap(value);
      //dump(xs);
    } else if (op == "extract") {
      echo(popHeap());
    } else {
      break;
    }
  }
}

