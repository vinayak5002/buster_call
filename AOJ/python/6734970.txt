Q=[0] * 100000
head=tail=0

def enqueue(x):
  global Q, tail
  Q[tail] = x
  if tail + 1 == len(Q):
    tail = 0
  else:
    tail += 1

def dequeue():
  global Q, head
  ret = Q[head]
  if head + 1 == len(Q):
    head = 0
  else:
    head += 1
  return ret

elaps = 0

map = input().split(" ")
n = int(map[0])
q = int(map[1])

for i in range(n):
    map = input().split(" ")
    u = {}
    u["name"] = str(map[0])
    u["t"] = int(map[1])
    enqueue(u)

while( head != tail ):
  u = dequeue()
  c = min(u["t"], q)
  u["t"] -= c 
  elaps += c
  if u["t"] > 0:
    enqueue(u)
  else:
    print(u["name"], elaps)
