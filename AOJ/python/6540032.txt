import java.util.Scanner;

class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int[] a = new int[6];

		for (int i = 0; i < 6; i++) {
			a[i] = sc.nextInt();
		}
		Dice1 dice1 = new Dice1(a[0], a[1], a[2], a[3], a[4], a[5]);

		int[] b = new int[6];

		for (int i = 0; i < 6; i++) {
			b[i] = sc.nextInt();
		}
		Dice2 dice2 = new Dice2(b[0], b[1], b[2], b[3], b[4], b[5]);

		int top = dice2.top();
		int front = dice2.front();
		int right = dice2.right();
		int left = dice2.left();
		int back = dice2.back();
		int bottom = dice2.bottom();

		boolean isYes = true;

		dice1.compareDice(top, front, right, left, back, bottom, isYes);

		if (dice1.isYes == true) {
			System.out.println("Yes");
		}else if(dice1.isYes == false){
			System.out.println("No");
		}
	}
}

//初期値
class Dice1 {
	int[] base = new int[6];
	boolean isYes;

	Dice1(int a, int b, int c, int d, int e, int f) {
		base[0] = a;// top
		base[1] = b;// front
		base[2] = c;// right
		base[3] = d;// left
		base[4] = e;// back
		base[5] = f;// bottom
	}
	
	//サイコロの挙動
	public void turnN() {
		int a = base[0];
		base[0] = base[1];
		base[1] = base[5];
		base[5] = base[4];
		base[4] = a;
	}

	public void turnS() {
		int a = base[0];
		base[0] = base[4];
		base[4] = base[5];
		base[5] = base[1];
		base[1] = a;
	}

	public void turnE() {
		int a = base[0];
		base[0] = base[3];
		base[3] = base[5];
		base[5] = base[2];
		base[2] = a;
	}

	public void turnW() {
		int a = base[0];
		base[0] = base[2];
		base[2] = base[5];
		base[5] = base[3];
		base[3] = a;
	}

	public void turnClockwise() {
		int a = base[1];
		base[1] = base[2];
		base[2] = base[4];
		base[4] = base[3];
		base[3] = a;
	}

	//return
	public int top() {
		return base[0];
	}
	
	public int front() {
		return base[1];
	}
	
	public int right() {
		return base[2];
	}

	public int left() {
		return base[3];
	}
	public int	back() {
		return base[4];
	}
	public int	bottom() {
		return base[5];
	}
	
	
	
	//topとfrontを見る
	public void setTopAndFront(int top, int front) {
			for (int j = 0; j < 4; j++) {// 縦回転

				if (top() == top)
					break;
				turnN();

				if (j == 3) {// 横回転
					if (right() == top) {
						turnW();

					} else if (left() == top) {
						turnE();
					}
				}
			}
			for (int k = 0; k < 4; k++) {
				if (front() == front) {
					break;
				}
			turnClockwise();//上下抑えたまま時計回り
			}
	}
	
	
	
	public boolean compareDice(int top,int front,int right,int left,int back,int bottom,boolean isYes) {
		for (int j = 0; j < 4; j++) {// 縦回転
			if (top() == top)
				break;
			turnN();

			if (j == 3) {// 横回転 3＝見つかってない
				if (right() == top) {
					turnW();

				} else if (left() == top) {
					turnE();//すべての面を見た
				}else{
					isYes=false;
					break;
				}
			}
		}
		
		for (int k = 0; k < 4; k++) {
			if (front() == front) {
				break;
			}else{
				isYes=false;
				break;
			}
		}
			turnClockwise();//上下抑えたまま時計回り
			
			if (right() == right && left() == left && back() == back && bottom() == bottom) {
				isYes=true;
			}else{
				isYes=false;
			}
			return isYes;
	}	
}
class Dice2 {
		int[] base = new int[6];

		Dice2(int a, int b, int c, int d, int e, int f) {
			base[0] = a;// top
			base[1] = b;// front
			base[2] = c;// right
			base[3] = d;// left
			base[4] = e;// back
			base[5] = f;// bottom
		}
		
		//サイコロの挙動
		public void turnN() {
			int a = base[0];
			base[0] = base[1];
			base[1] = base[5];
			base[5] = base[4];
			base[4] = a;
		}

		public void turnS() {
			int a = base[0];
			base[0] = base[4];
			base[4] = base[5];
			base[5] = base[1];
			base[1] = a;
		}

		public void turnE() {
			int a = base[0];
			base[0] = base[3];
			base[3] = base[5];
			base[5] = base[2];
			base[2] = a;
		}

		public void turnW() {
			int a = base[0];
			base[0] = base[2];
			base[2] = base[5];
			base[5] = base[3];
			base[3] = a;
		}

		public void turnClockwise() {
			int a = base[1];
			base[1] = base[2];
			base[2] = base[4];
			base[4] = base[3];
			base[3] = a;
		}

		//return
		public int top() {
			return base[0];
		}
		
		public int front() {
			return base[1];
		}
		
		public int right() {
			return base[2];
		}

		public int left() {
			return base[3];
		}
		public int	back() {
			return base[4];
		}
		public int	bottom() {
			return base[5];
		}

}


