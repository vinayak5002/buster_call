from bisect import *

d, n = map(int, input().split())
t = [(0, 0)] * d
clothes = [[] for _ in range(d)]  # 日毎の服の派手さ
for i in range(d):
    t[i] = (int(input()), i)
temp = []
day = []
for tpl in sorted(t):
    temp.append(tpl[0])
    day.append(tpl[1])

for _ in range(n):
    a, b, c = map(int, input().split())
    # a℃以上b℃以下の日を探す
    l = bisect_left(temp, a)
    r = bisect_right(temp, b)
    if l == r:
        continue
    # 見つかった日に派手さをセット
    for j in range(l, r):
        clothes[day[j]].append(c)

for i in range(d):
    min_c = min(clothes[i])
    max_c = max(clothes[i])
    clothes[i] = [min_c, max_c]

dp = [[0] * 2 for _ in range(d)]
for i in range(1, d):
    dp[i][0] = dp[i - 1][0] + abs(clothes[i - 1][0] - clothes[i][0])
    dp[i][0] = max(dp[i][0], dp[i - 1][1] + abs(clothes[i - 1][1] - clothes[i][0]))
    dp[i][1] = dp[i - 1][1] + abs(clothes[i - 1][1] - clothes[i][1])
    dp[i][1] = max(dp[i][1], dp[i - 1][0] + abs(clothes[i - 1][0] - clothes[i][1]))

print(max(dp[d - 1][0], dp[d - 1][1]))

