//52枚あるはずのトランプカードがn枚しかない。
#include <iostream>
#include <vector>


//やること。入力データを読み込んでいく、それを全てのトランプと照らし合わせ、なかったものだけを出力。
//intのaとintのbがあれば、std::cin >> a >> b; としたら「a b」と表示される。

int main()
{
    //全てのトランプと実際にある枚数を照らし合わせ、あるものはチェックするために、
    //はじめは配列の箱の中にある数字すべてを0として、確認できたカードだけ1にするしくみをつくる
    //一つの配列が１３個の箱を４つ作る。（トランプは１３枚で絵柄は４枚なので）
    std::vector<std::vector<int>> cards = {
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //スペードのカード
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

    };


    //まず、47回などの提示される回数をn回として定義し、入力された値を代入するようにつくる
    int n;
    std::cin >> n;

    //回数を何回くりかえすかをfor()の中に、{}の中には条件を満たすとき何をするかを書く
    //for()の中身の意味　int iは0にします。nより小さいうちは繰り返します。繰り返す度1増えます。
    for(int i = 0; i < n; ++i)
    {
        char suit;
        int rank;
        std::cin >> suit >> rank; //入力された！

        //カードの絵柄と番号が入力されたら、２次元配列乗の数値に反映される。
        //例えば「s 13」が入力されたら、cards[0][12]が0から1に変わりチェックされたことになる。

        //カードの絵柄を添え字にする
        //入力された数字がこの以下のどれかに当てはまるか。rank-1は13なら配列的には12なので。
        if(suit == 'S'){
            cards[0][rank-1] = 1; //0だったとこに1が代入されていく。
        }
        if(suit == 'H'){
            cards[1][rank-1] = 1;
        }
        if(suit == 'C'){
            cards[2][rank-1] = 1;
        }
        if(suit == 'D'){
            cards[3][rank-1] = 1;
        }

    }

    // n枚の入力がcardsに反映できた。
    //入力されなかったカードを表示する。
    std::vector<char> suits = {'S', 'H', 'C', 'D'};
    int suit_index = 0;
    for (char suit: suits){
        for (int rank_index = 0; rank_index < 13; ++rank_index)
        {
            if (cards[suit_index][rank_index] == 0)
            {
                std::cout << suit << " " << rank_index + 1 << "\n";
            }
        }
        ++suit_index;
    }
    return 0;
}

