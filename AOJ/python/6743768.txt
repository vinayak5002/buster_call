fn main() {
    let n: u32 = read();
    let v: Vec<Vec<i32>> = read_vec2(n);
    let mut d = [[[0; 10]; 3]; 4];
    for e in v {
        d[e[0] as usize - 1][e[1] as usize - 1][e[2] as usize - 1] += e[3];
    }
    for (i, e1) in d.iter().enumerate() {
        for e2 in e1 {
            for e3 in e2 {
                print!(" {}", e3);
            }
            println!("");
        }
        if i != 3 {
            for _ in 0..20 {
                print!("#");
            }
            println!("");
        }
    }
}
fn read<T: std::str::FromStr>() -> T {
    let mut s = String::new();
    std::io::stdin().read_line(&mut s).ok().unwrap();
    s.trim().parse().ok().unwrap()
}

fn read_vec<T: std::str::FromStr>() -> Vec<T> {
    read::<String>()
        .split_whitespace()
        .map(|e| e.parse().ok().unwrap())
        .collect()
}

fn read_vec2<T: std::str::FromStr>(n: u32) -> Vec<Vec<T>> {
    (0..n).map(|_| read_vec()).collect()
}

