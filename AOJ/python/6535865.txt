use std::io;
use std::io::Read;

fn main() {
    let mut buf = String::new();
    io::stdin().read_to_string(&mut buf).unwrap();
    let mut iter = buf.split_whitespace();

    let n: usize = iter.next().unwrap().parse().unwrap();
    let p: i64 = iter.next().unwrap().parse().unwrap();
    let q: i64 = iter.next().unwrap().parse().unwrap();

    let mut c: Vec<i64> = Vec::with_capacity(n);
    let mut c_iq_p: Vec<(i64, usize)> = Vec::with_capacity(n);

    for i in 0..n {
        let c_i: i64 = iter.next().unwrap().parse().unwrap();
        c.push(c_i);
        c_iq_p.push((c_i + (i as i64 - q) * p, i));
    }

    c_iq_p.sort();

    let mut jisui: Vec<bool> = Vec::with_capacity(n);
    jisui.resize(n, false);

    let mut answers: Vec<i64> = Vec::with_capacity(n + 1);

    answers.push(c.iter().sum());

    for d in 0..n {
        answers.push(answers[d] + 2 * d as i64 * p - c_iq_p[d].0)
    }

    println!("{}", answers.iter().max().unwrap());
}

