//#include <boost/multiprecision/cpp_dec_float.hpp>
//#include <boost/multiprecision/cpp_int.hpp>
#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <math.h>
#include <algorithm>
#include <bitset>
#include <iomanip>
using namespace std;
//namespace mp = boost::multiprecision;
//using llll = mp::cpp_int;
// 仮数部が1024ビットの浮動小数点数型(TLEしたら小さくする)
//using Real = mp::number<mp::cpp_dec_float<1024>>;
using ll = long long;
const double EPS = 1e-10;
const ll MOD = 7+(1e+9);

int main(){
  ll n,m,x;
  cin>>n>>m;
  vector<vector<ll>>a;
  for(ll i=0;i<n;i++){
    vector<ll>v;
    for(ll j=0;j<m;j++){
      cin>>x;
      v.push_back(x);
    }
    a.push_back(v);
  }
  vector<ll>b;
  for(ll i=0;i<m;i++){
    cin>>x;
    b.push_back(x);
  }
  for(ll i=0;i<n;i++){
    x=0;
    for(ll j=0;j<m;j++){
      x+=a[i][j]*b[j];
    }
    cout<<x<<endl;
  }
}

