def unite():
    if parent[x]==-1:
        parent[x] = 'root'
    if parent[y]==-1:
        parent[y] = 'root'

    temp_x, temp_y, Sx_rank, Sy_rank = find_root()
    if temp_x==temp_y:
        pass
    elif Sx_rank>=Sy_rank:
        parent[temp_y] = temp_x
    else:
        parent[temp_x] = temp_y

def same():
    temp_x, temp_y, Sx_rank, Sy_rank = find_root()
    if (parent[x]!='root' or parent[y]!='root') and temp_x==temp_y:
        result[k] = 1
    else:
        result[k] = 0


def find_root():
    Sx_rank, Sy_rank = 0, 0
    temp_x, temp_y = x, y
    while parent[temp_x]!='root' and parent[temp_x]!=-1:
        temp_x = parent[temp_x]
        Sx_rank += 1
    while parent[temp_y]!='root' and parent[temp_y]!=-1:
        temp_y = parent[temp_y]
        Sy_rank += 1
        # print(temp_y)
        # print(parent[temp_y])
    return temp_x, temp_y, Sx_rank, Sy_rank

def print_result():
    for i in range(k):
        print(result[i])


n, q = list(map(int, input().split()))
parent = [-1] * (n+1)
result = [0] * q
k = 0

for i in range(q):
    query, x, y = list(map(int, input().split()))
    if query == 0:
        unite()
    if query == 1:
        same()
        k += 1

print_result()

