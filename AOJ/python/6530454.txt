import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class Main {


    public static int solve(ArrayList<Integer> cards) {
        int pairs = 0;

        Collections.sort(cards);

        int n = cards.size();

        for (int i = 0; i < n; i++) {
            boolean pairFound = false;
            if (cards.get(i) == 0) continue;
            for (int j = i+1; j < n; j++) {
                for (int k = j+1; k < n; k++) {
                    // (i, j, k) is valid pair?

                    if (cards.get(i) == cards.get(j) && cards.get(j) == cards.get(k)) {
                        pairs++;
                        cards.set(i, 0);
                        cards.set(j, 0);
                        cards.set(k, 0);
                        pairFound = true;
                        break;
                    }
                    else if (cards.get(i)+1 == cards.get(j) && cards.get(j)+1 == cards.get(k)) {
                        pairs++;
                        cards.set(i, 0);
                        cards.set(j, 0);
                        cards.set(k, 0);
                        pairFound = true;
                        break;
                    }
                }
                if (pairFound) break;
            }
        }

        return pairs;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int t = scanner.nextInt();

        for (int i = 0; i < t; i++) {
            ArrayList<Integer> redCards = new ArrayList<>();
            ArrayList<Integer> greenCards = new ArrayList<>();
            ArrayList<Integer> blueCards = new ArrayList<>();

            int[] inputs = new int[9];
            for (int j = 0; j < 9; j++) {
                inputs[j] = scanner.nextInt();
            }

            for (int j = 0; j < 9; j++) {
                String color = scanner.next();
                if (color.equals("R")) {
                    redCards.add(inputs[j]);
                } else if (color.equals("G")) {
                    greenCards.add(inputs[j]);
                } else {
                    blueCards.add(inputs[j]);
                }
            }

            int pairs = 0;
            
            pairs += solve(redCards);
            pairs += solve(greenCards);
            pairs += solve(blueCards);

            System.out.println(pairs >= 3 ? "1" : "0");
        }

        scanner.close();
    }
}
