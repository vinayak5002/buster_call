using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _20220424_AOJ
{
    internal class ITP2_8A
    {
        static int ReadInt() { return int.Parse(Console.ReadLine()); }
        static double ReadDouble() { return double.Parse(Console.ReadLine()); }
        static int[] ReadIntArr(char dlm = ' ') { return Console.ReadLine().Split(dlm).Select(x => int.Parse(x)).ToArray(); }
        static double[] ReadDoubleArr(char dlm = ' ') { return Console.ReadLine().Split(dlm).Select(x => double.Parse(x)).ToArray(); }
        static string[] ReadStringArr(char dlm = ' ') { return Console.ReadLine().Split(dlm).ToArray(); }

        static void Main(string[] args)
        {
            string line = Console.ReadLine();
            int q = int.Parse(line);
            Dictionary<string, int> map = new Dictionary<string, int>();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < q; i++)
            {
                string[] query = ReadStringArr();
                int command = int.Parse(query[0]);
                string key = query[1];
                if (command == 0)
                {
                    if(map.ContainsKey(key))
                    {
                        map[key] = int.Parse(query[2]);
                    }
                    else
                    {
                        map.Add(key, int.Parse(query[2]));
                    }
                }
                else
                {
                    if (map.ContainsKey(key))
                    {
                        sb.AppendLine(map[key].ToString());
                    }
                }
            }
            Console.Write(sb);
        }
    }
}

