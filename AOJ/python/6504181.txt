import java.util.*;

public class Main {
    private static boolean nextPermutation(int[] array) {
        for (int i = array.length - 1; i > 0; i--) {
            if (array[i - 1] < array[i]) {
                int j = find(array, array[i - 1], i, array.length - 1);
                int temp = array[j];
                array[j] = array[i - 1];
                array[i - 1] = temp;
                Arrays.sort(array, i, array.length);
                return true;
            }
        }
        return false;
    }

    private static int find(int[] array, int dest, int f, int l) {
        if (f == l) {
            return f;
        }
        int m = (f + l + 1) / 2;
        return (array[m] <= dest) ? find(array, dest, f, m - 1) : find(array, dest, m, l);
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int[] h = new int[8];
        int[] w = new int[8];
        int[] s = new int[15];
        int[] t = new int[15];

        int n = 8;
        int[] a = { 0, 1, 2, 3, 4, 5, 6, 7 };

        List<List<Integer>> ans = new ArrayList<List<Integer>>();

        int k = Integer.parseInt(input.next());
        HashMap<Integer, Integer> m = new HashMap<>();
        for (int i = 0; i < k; i++) {
            m.put(Integer.parseInt(input.next()), Integer.parseInt(input.next()));
        }

        do {
            Arrays.fill(h, 0);
            Arrays.fill(w, 0);
            Arrays.fill(s, 0);
            Arrays.fill(t, 0);
            Boolean nmat = false;
            for (int i = 0; i < n; i++) {
                if (m.get(i) != null) {
                    if (m.get(i) != a[i]) {
                        nmat = true;
                        break;
                    }
                }

            }
            if (nmat) {
                continue;
            }

            for (int i = 0; i < n; i++) {
                h[i]++;
                w[a[i]]++;
                s[i + a[i]]++;// 右上→足す
                t[i - a[i] + 7]++;// 左上→yを引いてオフセット7
            }

            Boolean flag = true;
            for (int i = 0; i < n; i++) {
                if (h[i] > 1 || w[i] > 1) {
                    flag = false;
                }
            }
            for (int i = 0; i < n * 2 - 1; i++) {
                if (s[i] > 1 || t[i] > 1) {
                    flag = false;
                }
            }

            if (flag) {
                break;
            }
        } while (nextPermutation(a));

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (a[i] == j) {
                    System.out.printf("Q");
                } else {
                    System.out.printf(".");
                }
            }
            System.out.println("");
        }

        input.close();
    }
}
