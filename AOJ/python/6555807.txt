using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace ITP_1_6A
{
    public class Card
    {
        public int B { get; set; }
        public int F { get; set; }
        public int R { get; set; }
        public int V { get; set; }
    }
    //public class CardComparer : IEqualityComparer<Card>
    //{
    //    public bool Equals(Card i_lhs, Card i_rhs)
    //    {
    //        if (i_lhs.Suit == i_rhs.Suit &&
    //            i_lhs.Number == i_rhs.Number)
    //        {
    //            return true;
    //        }
    //        return false;
    //    }

    //    public int GetHashCode(Card i_obj)
    //    {
    //        // 本当はnullチェックをしなきゃ駄目だよ。
    //        return i_obj.Number ^ i_obj.Suit.GetHashCode();
    //    }
    //}


    class Program
    {
        static void Main(string[] args)
        {
            //var N = Console.ReadLine().Trim().Split(' ').Select(s => int.Parse(s)).ToArray();

            int n,i,j;
            n = i = j = 0;

            string str = "";
            string line = "";
            while (( line = Console.ReadLine())!= "-")
            {
                if (!int.TryParse(line, out n))
                {
                    str = line;
                }
                else if (i==1)
                {
                    j = n+1;
                }
                else if(i>1)
                {
                    string strage = str.Substring(0, n);
                    int length = str.Length-n;
                    str = str.Substring(n, length);
                    //str.Replace(strage, "");
                    str += strage;
                }

                if (i ==j && i!=0)
                {
                    Console.WriteLine(str);
                    i = -1;
                }
                i++;
            }


            //int n= S.Length- Regex.Replace(S, N, "", RegexOptions.IgnoreCase).Length;

            

            return;
        }
    }

}

