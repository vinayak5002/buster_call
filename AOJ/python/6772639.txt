import networkx as nx

G = nx.Graph() 
G.add_node((1,1)) 
G.add_node((1,3))
G.add_node((2,1))
G.add_node((3,1))
G.add_node((3,3))
G.add_node((3,5))
G.add_node((4,1))
G.add_node((4,4))

G.nodes()

G.add_edge((1,1), (2,1))
G.add_edge((2,1), (3,1))
G.add_edge((3,1), (4,1))
G.add_edge((3,3), (4,4))
G.add_edge((3,5), (4,4))

G.edges()

nx.number_connected_components(G)

def answer(input_file_name, output_file_name):
    input_file = open(input_file_name)
    output_file = open(output_file_name, 'w')
    while True:
        w, h = map(int, input_file.readline().split())
        if w == 0 and h == 0:
            break
        c = []
        for i in range(h):
            c.append(list(map(int, input_file.readline().split())))
        G = nx.Graph()
        for i in range(h):
            for j in range(w):
                if c[i][j] == 1:
                    G.add_node((i, j))
                if j < w - 1 and c[i][j] == 1 and c[i][j + 1] == 1:
                    G.add_edge((i, j), (i, j + 1))
                if i < h - 1 and c[i][j] == 1 and c[i + 1][j] == 1:
                    G.add_edge((i, j), (i + 1, j))
                if i < h - 1 and j > 0 and c[i][j] == 1 and c[i + 1][j - 1] == 1:
                    G.add_edge((i, j), (i + 1, j - 1))
                if i < h - 1 and j < w - 1 and c[i][j] == 1 and c[i + 1][j + 1] == 1:
                    G.add_edge((i, j), (i + 1, j + 1))
        output_file.write(f'{nx.number_connected_components(G)}\n')
    input_file.close()
    output_file.close()
    return

from google.colab import drive
drive.mount('/content/drive')

input_file_names = ['B1', 'B2', 'B3', 'B4']
file_dir = '/content/drive/My Drive/python/acm_icpc/domestic2009/judgedata/'
for input_file_name in input_file_names:
    answer(f'{file_dir}{input_file_name}', f'{file_dir}{input_file_name}.out')

'/python/acm_icpc/domestic2009/judgedata/

/judgedata/B1.out /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B1.ans
!diff /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B2.out /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B2.ans
!diff /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B3.out /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B3.ans
!diff /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B4.out /content/drive/'My Drive'/python/acm_icpc/domestic2009/judgedata/B4.ans

