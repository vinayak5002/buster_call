import java.util.Scanner;

class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        
        int[] rolling = new int[3];
        int[] dice = new int[6];
        for(int i = 0;i < 6;i++){
            dice[i] = sc.nextInt();
        }
        String order = sc.next();
        for(int i=0;i<order.length();i++){
            if("W".equals(order.charAt(i))){
                rolling = WE_roll(true);
            }
            else if("E".equals(order.charAt(i))){
                rolling = WE_roll(false);
            }
            else if("N".equals(order.charAt(i))){
                rolling = NS_roll(true);
            }
            else{
                rolling = NS_roll(false);
            }
            dice = Roller(dice,rolling);
        }
        System.out.println(dice[0]);
        
        
    }
    
    static int[] WE_roll(boolean T){
        int[] WE_load = {3,5,2};
        int N = WE_load.length;
        int temp;
        if(T){
            int[] W_roller = new int[N];
            for(int i=0;i<N;i++){
                W_roller[i] = WE_load[i];
            }
            WE_load = W_roller;

        }
        else{
            int[] E_roller = new int[N];
            for(int i=0;i<N;i++){
                E_roller[i] = WE_load[N-1-i];
            }
            WE_load = E_roller; 
        }
        return WE_load;
    }
    
    static int[] NS_roll(boolean T){
        int[] NS_load = {4,5,1};
        int N = NS_load.length;
        int temp;
        if(T){
            int[] N_roller = new int[N];
            for(int i=0;i<N;i++){
                N_roller[i] = NS_load[i];
            }
            NS_load = N_roller;

        }
        else{
            int[] S_roller = new int[N];
            for(int i=0;i<N;i++){
                S_roller[i] = NS_load[N-1-i];
            }
            NS_load = S_roller; 
        }
        return NS_load;
    }
    
    static int[] Roller(int[] dice, int[] roller){
        int N = roller.length;
        for(int i=0;i<N;i++){
            int num_posi  = WE_load[i];
            int num_point = 0;
            temp = dice[num_point];
            dice[num_point] = dice[num_posi];
            dice[num_posi] = temp;
            
        }
        return dice;
    }
    
    
    
    
}
