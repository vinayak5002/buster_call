import math
import pprint
from sre_constants import RANGE
def DispMatrix(matrix):
    pprint.pprint(matrix)
def CalcMaxSumRow(matrix):
    max = 0
    for i in range(len(matrix)):
        sum = 0
        for j in range(len(matrix[i])):
            sum += matrix[i][j]
            # print(matrix[i][j])
        if(sum > max):
            max = sum
    return max
def CalcMaxSumColumn(matrix):
    max = 0
    for j in range(len(matrix[0])):
        sum = 0
        for i in range(len(matrix)):
            sum += matrix[i][j]
        if(sum > max):
            max = sum
    return max
def CalcMaxSumDiagonal(matrix):
    max = 0
    #upper left
    for i in range(len(matrix)):
        sum = 0
        for k in range(i + 1):
            sum += matrix[i - k][k]
        if(sum > max):
            max = sum
    #upper right
    for i in range(len(matrix)):
        sum = 0
        for k in range(i + 1):
            sum += matrix[i - k][len(matrix[0]) - 1 - k]
        if(sum > max):
            max = sum
    #bottom right
    for i in range(len(matrix)):
        sum = 0
        for k in range(i + 1):
            sum += matrix[len(matrix) - 1 - i + k][len(matrix[0]) - 1 - k]
        if(sum > max):
            max = sum
    #bottom left
    for i in range(len(matrix)):
        sum = 0
        for k in range(i + 1):
            sum += matrix[len(matrix) - 1 - i + k][k]
        if(sum > max):
            max = sum
    return max

while(True):
    n = int(input())
    if(n == 0):
        break
    matrix = []
    for i in range(n):
        s = input()
        matrix.append([])
        for j in range(len(s)):
            matrix[i].append([])
            matrix[i][j] = int(s[j])
    # DispMatrix(matrix)
    maxRow = CalcMaxSumRow(matrix)
    maxColumn = CalcMaxSumColumn(matrix)
    maxDiagonal = CalcMaxSumDiagonal(matrix)
    max = maxRow
    if(max < maxColumn):
        max = maxColumn
    if(max < maxDiagonal):
        max = maxDiagonal
    print(max)







