//
// Created by 17261 on 2022/5/13.
//

#include <bits/stdc++.h>

typedef long long ll;

using namespace std;

const int maxn=2e6+10;

string s1,s2;
int T;
int n, sa[maxn], rk[maxn], oldrk[maxn], id[maxn], px[maxn], cnt[maxn];

bool cmp(int x, int y, int w) {
    return oldrk[x] == oldrk[y] && oldrk[x + w] == oldrk[y + w];
}

void init(){
    int i, m = 300, p, w;
    int n=s1.size();
    for (i = 1; i <= n; ++i) ++cnt[rk[i] = s1[i]];
    for (i = 1; i <= m; ++i) cnt[i] += cnt[i - 1];
    for (i = n; i >= 1; --i) sa[cnt[rk[i]]--] = i;
    for (w = 1;; w <<= 1, m = p) {
        for (p = 0, i = n; i > n - w; --i) id[++p] = i;
        for (i = 1; i <= n; ++i)
            if (sa[i] > w) id[++p] = sa[i] - w;
        memset(cnt, 0, sizeof(cnt));
        for (i = 1; i <= n; ++i) ++cnt[px[i] = rk[id[i]]];
        for (i = 1; i <= m; ++i) cnt[i] += cnt[i - 1];
        for (i = n; i >= 1; --i) sa[cnt[px[i]]--] = id[i];
        memcpy(oldrk, rk, sizeof(rk));
        for (p = 0, i = 1; i <= n; ++i)
            rk[sa[i]] = cmp(sa[i], sa[i - 1], w) ? p : ++p;
        if (p == n) {
            for (int i = 1; i <= n; ++i) sa[rk[i]] = i;
            break;
        }
    }
}

int main() {
#ifdef Ac1dX
    freopen("C:\\Users\\17261\\Desktop\\Ac1dX\\acm\\data.in", "r", stdin);
    freopen("C:\\Users\\17261\\Desktop\\Ac1dX\\acm\\data.out", "w", stdout);
#endif
    cin>>s1;
    cin>>T;
    init();
    while(T--){
        cin>>s2;
        int l=1,r=s1.size();
        int ans=0;
        while(l<=r){
            int mid=(l+r)/2;
            string tmp=s1.substr(sa[mid],s2.size());
            if(s2==tmp){
                ans=1;
                break;
            }
            else if(tmp<s2) l=mid+1;
            else r=mid-1;
        }
        cout<<ans<<endl;
    }
    return 0;
}
