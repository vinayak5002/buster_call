ans = 0


class graph:
    def __init__(self,V,E,edges):
        self.V = V
        self.E = E
        self.dir = [[]for _ in range(V)]

        for row in edges:
            self.dir[row[0]].append(row[1])
        
        self.visit = set()

def dfs(g,node):
    g.visit.add(node)

    for n in g.dir[node]:
        if n in g.visit:
            global ans
            ans = 1
        else :
            dfs(g,n)


    g.visit.remove(node)



V,E = map(int,input().split())

edges = [[0,0] for _ in range(E)]

for i in range(E):
    edges[i][0], edges[i][1] = map(int,input().split())

g = graph(V,E,edges)
for i in range(V):
    dfs(g,i)
    if ans == 1:
        break

print(ans)





