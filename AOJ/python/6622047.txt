b=0
n=gets.to_i
m=[]
n.times do
  k,*l=gets.split.map(&:to_i)
  m << l.inject(0) {|r,i| r+=1<<i}
end
gets.to_i.times do
  q,i=gets.split.map(&:to_i)
  case q
  when 0; puts (b&1 << i)==0 ? 0 : 1
  when 1; b|=m[i]
  when 2; b&=((1 << 64)-1)^m[i]
  when 3; b^=m[i]
  when 4; puts b&m[i]==m[i] ? 1 : 0
  when 5; puts b&m[i]==0 ? 0 : 1
  when 6; puts b&m[i]==0 ? 1 : 0
  when 7; puts (b&m[i]).to_s(2).count('1')
  when 8; puts b&m[i]
  end
end
