from collections import deque
from sys import setrecursionlimit
setrecursionlimit(10 ** 7)

dr = [1, 0, -1, 0]
dc = [0, 1, 0, -1]

def slv(H, W, S):

    sr, sc, gr, gc = 0, 0, 0, 0
    for r in range(H):
        for c in range(W):
            if S[r][c] == 2:
                sr, sc = r, c
            elif S[r][c] == 3:
                gr, gc = r, c
    
    done = [[10 ** 18] * W for _ in range(H)]

    def dfs(r, c, cnt):
        if r == gr and c == gc:
            return 0
        elif cnt > 10:
            return -1
        else:
            ans = -1
            for i in range(4):
                if 0 <= r + dr[i] < H and 0 <= c + dc[i] < W:
                    if S[r + dr[i]][c + dc[i]] == 1:
                        continue
                    k = 0
                    ok = 0
                    while True:
                        if 0 <= r + (k + 1) * dr[i] < H and 0 <= c + (k + 1) * dc[i] < W:
                            if S[r + (k + 1) * dr[i]][c + (k + 1) * dc[i]] in [1, 3]:
                                ok = S[r + (k + 1) * dr[i]][c + (k + 1) * dc[i]]
                                break
                            else:
                                k += 1
                        else:
                            break
                    if ok == 1:
                        S[r + (k + 1) * dr[i]][c + (k + 1) * dc[i]] = 0
                        d = dfs(r + k * dr[i], c + k * dc[i], cnt + 1)
                        if ans == -1:
                            ans = d
                        elif d != -1:
                            ans = min(ans, d)
                        S[r + (k + 1) * dr[i]][c + (k + 1) * dc[i]] = 1
                    elif ok == 3:
                        if ans == -1:
                            ans = cnt
                        elif d != -1:
                            ans = min(ans, cnt)
            return ans
    
    ans = dfs(sr, sc, 1)
    print(ans)

while True:
    W, H = map(int, input().split())
    if H == W == 0:
        exit()
    S = [list(map(int, input().split())) for _ in range(H)]
    slv(H, W, S)
