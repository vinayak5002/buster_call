from collections import Counter, deque, defaultdict
from itertools import permutations, combinations, accumulate, product, chain
from functools import lru_cache
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heapify, heappush, heappop
from array import array
from decimal import Decimal
from copy import deepcopy
from pprint import pprint
from string import ascii_uppercase, ascii_lowercase, ascii_letters
from math import factorial, floor, ceil, sqrt, log, log2, log10
from math import sin, cos, tan, asin, acos, atan, degrees, radians
import math
import sys
sys.setrecursionlimit(1<<30)

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

if __name__ == '__main__':

    while True:
        N, W, D = map(int, readline().split())
        if N == W == D == 0:
            break
        A = [[D, W]]
        for _ in range(N):
            p, s = map(int, readline().split())
            p -= 1
            d, w = A.pop(p)
            if s >= d+w:
                s %= d+w
            if s <= w:
                s1 = [d*s, d, s]
                s2 = [d*(w-s), d, w-s]
            else:
                dd = d-(s-w)
                s1 = [dd*w, dd, w]
                s2 = [(d-dd)*w, d-dd, w]
            s1, s2 = sorted([s1, s2])
            A.append(s1[1:])
            A.append(s2[1:])
        AA = list()
        for a in A:
            AA.append(a[0]*a[1])
        AA.sort()
        print(*AA)

