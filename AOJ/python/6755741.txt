using namespace std;
#include <bits/stdc++.h>
const int MOD = 998244353;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<bool> vb;
typedef vector<char> vc;
typedef vector<vi> vvi;
typedef vector<vll> vvll;
typedef vector<string> vs;
typedef vector<vc> vvc;
#define REP(i, n) for (int i = 0; i < (n); i++)
#define FOR(i, N, n) for (int i = N; i < (n); i++)
#define SZ(x) (int)(x).size() // size_t
#define ALL(s) (s).begin(), (s).end()
#define so(V) sort(ALL(V))
#define rev(V) reverse(ALL(V))

const ll INF = 1LL << 60;


void dfs(ll N, ll M, ll x, ll y, vvc &c)
{
    int nx, ny;
    c[y][x] = '0';
    FOR(dx, -1, 2)
    {
        FOR(dy, -1, 2)
        {
            nx = x + dx;
            ny = y + dy;
            if ((nx >= 0 && nx < M) && (ny >= 0 && ny < N))
            {
                if (c[ny][nx] == '1')
                {
                    c[ny][nx] = '0';
                    dfs(N, M, nx, ny, c);
                }
            }
        }
    }
}

int main()
{
    ll W, H, ans;
    vvc c(50, vc(50));
    while (1)
    {
        cin >> W >> H;
        ans = 0;
        if (W == 0 && H == 0)
        {
            break;
        }
        REP(i, H)
        {
            REP(j, W)
            {
                cin >> c[i][j];
            }
        }
        REP(i, H)
        {
            REP(j, W)
            {
                if (c[i][j] == '1')
                {
                    dfs(H, W, j, i, c);
                    ans++;
                }
            }
        }
        cout << ans << endl;
    }

    return 0;
}
