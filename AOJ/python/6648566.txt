/*********************************DOCUMENTACIÃ“N*********************************

Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor

Complejidad de tiempo = O(*) con *=?

*******************************************************************************/

#include <bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define MP make_pair
#define INF 1e9

#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()
#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define ROF(i, a, b) for (int i = (a); i >= (b); i--)
#define FASTIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(0);                       \
    cout.tie(0);

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<double,double> pdd;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<ll> vll;
typedef vector<char> vc;
typedef vector<bool> vb;
int graph[16][16];

int main(int argc, char const *argv[])
{
    FASTIO;
    int n,e;
    cin >> n >> e;
    FOR(i,0,n-1){
        FOR(j,0,n-1){
            graph[i][j] = 1001;
            graph[j][i] = 1001;
        }
    }
    int s,t,d;
    FOR(i,0,e-1){
        cin >> s >> t >> d;
        graph[s][t] = d;
    }

    int dp[n][(1<<n)];
    int ans_min = INT_MAX;
    bool found = false;
    ROF(m,(1<<n)-1,0){
      FOR(u,0,n-1){
        if(m == ((1<<n)-1)) dp[u][m] = 0;
        else{
            dp[u][m] = 1001;
            FOR(o,0,n-1){
                if((m&(1<<o))==0){
                    dp[u][m] = min(dp[u][m],dp[o][m|(1<<o)] + graph[u][o]);
                }
            }
            if(m==0 && dp[u][m]<ans_min && !found){
                ans_min = dp[u][m];
                found = true;
            }
        }
      }
    }

    if(ans_min == 1001) cout << -1 <<"\n";
    else cout << ans_min <<"\n";
    
    return 0;
}

