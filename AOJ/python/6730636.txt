
import sys
sys.setrecursionlimit(10000000)


def nextMasu(i, j):
    nextMasu = [[i-1,j-1], \
        [i-1,j],\
            [i-1,j+1],\
                [i,j-1],\
                    [i,j+1],\
                        [i+1,j-1],\
                            [i+1,j],\
                                [i+1,j+1]]
    return nextMasu

def dfs(i,j):
    global visited
    global c_list
    global H, W
    visited[i][j] = True
    for i_, j_ in nextMasu(i,j):
        if not (0<=i_<H and 0<=j_<W):
            continue
        if visited[i_][j_]:
            continue
        if c_list[i_][j_] == 0:
            continue
        dfs(i_,j_)


def countShima():
    global visited
    global c_list
    global H, W
    shima = 0
    for i in range(H):
        for j in range(W):
            if visited[i][j]:
                continue
            if c_list[i][j] == 1:
                shima += 1
                dfs(i,j)
    print(shima)    


while True:

    W, H = map(int, input().split())
    if W == 0 and H == 0:
        break
    c_list = [list(map(int, input().split())) for _ in range(H)]
    visited = [[False]*W for _ in range(H)]
    countShima()
