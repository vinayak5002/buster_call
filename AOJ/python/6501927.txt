def rec(l,r):
  
  if dp[l][r] != -1:
    return dp[l][r]
  
  if l == r:
    dp[l][r] = 0
    return 0
  
  if l +1 == r:
    if abs(w[l] - w[r]) <= 1:
      dp[l][r] = 2
      return 2
    else:
      dp[l][r] = 0
      return 0
  res = 0
  
  if abs(w[l] - w[r]) <= 1 and rec(l+1, r-1) == (r-1) - (l+1) + 1:
    res = (r -1) - (l + 1) + 1 + 2
  else:
    for mid in range(l,r):
      res = max(res,rec(l,mid)+rec(mid+1,r))
      
  dp[l][r] = res
  return res

while(1):
  n = int(input())
  if n == 0:
    break
  w = list(map(int, input().split()))
  dp = [[-1] * n for _ in range(n)]
  rec(0,n-1)
  print(dp[0][n-1])
  
