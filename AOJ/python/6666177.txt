import java.io.*;

class Main
{
    static boolean excess = false;
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] tmp_str = br.readLine().split("\\s");
        int n = Integer.parseInt(tmp_str[0]);
        int k = Integer.parseInt(tmp_str[1]);
        int[] w = new int[n];
        int sum = 0;
        
        for(int i = 0; i < n; i++){
            w[i] = Integer.parseInt(br.readLine());
            sum += w[i];
        }
        //binaly search
        int left = 0;
        int right = sum;
        int p = (left + right) / 2;
        while(left < right){
            
            if(check_load(n ,k, p, w)){
                break;
            }else if(excess){
                left = p + 1;
                
            }else{
                right = p;
                
            }
            p = (left + right) / 2;
        }
        System.out.println(p);
    }
    
    static boolean check_load(int n, int k, int p, int[] w)
    {
        int tmp_sum = 0;
        int index_w = 0;
        int index_t = 0;
        
        if(p == 0) return false;
        
        while(index_w < n && index_t < k){
            tmp_sum = 0;
            while(index_w < n && tmp_sum + w[index_w] <= p){
                tmp_sum += w[index_w];
                index_w++;
            }
            index_t++;
        }
        if(index_t == k) excess = true;
        if(index_t == k) return true;
        else return false;
    }
}
