import java.util.*;



public class Main
{    
  static void Intercambiar(int[] a, int i, int j)
  {
      int temp = a[i];
      a[i] = a[j];
      a[j] = temp;
  }
  
  static int Particionar(int[] a, int l, int r)
  {
      int p = a[l];
      while(l < r)
      {
          while(a[l] < p)
              l++;
          while(r >= 0 && a[r] >= p)
              r--;
          if(r >= 0 && l < r) Intercambiar(a, l, r);
      }
      return r;
  }
  
  static void QuickSort(int[] a, int l, int r)
  {
      if(l >= r) return;
      int k = Particionar(a, l, r);
      if(k < l)   // Si k es menor que l es que todos los elementos
          k = l;  // son mayores o iguales que el de la pos l.
      QuickSort(a, l, k);
      QuickSort(a, k + 1 , r);
  } 
    
  static void QuickSort(int[] a)
  {
      QuickSort(a,0,a.length - 1);
  }
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) 
    {       
        Scanner escaner  = new Scanner(System.in);        
        int[] arreglo = new int[escaner.nextInt()];
        
        for (int i = 0; i < arreglo.length; i++) 
            arreglo[i] = escaner.nextInt();
        
        int pivote = arreglo[arreglo.length -1];
        QuickSort(arreglo);
        
        if(arreglo[0] == pivote) 
            System.out.print("[" + arreglo[0] + "]");
        else 
            System.out.print(arreglo[0]);
        for(int i = 1; i< arreglo.length; i++)
        {
            if(arreglo[i] == pivote)
                System.out.print(" [" + arreglo[i] + "]");
            else                
                System.out.print(" " + arreglo[i]);
        }
        System.out.println();
        
               
                      
    }    
}
