elaps = 0
head = tail = 0
Q = [0] * 10

def enqueue(x):
  global Q, tail
  Q[tail] = x
  if tail+1 == len(Q):
    tail = 0
  else:
    tail += 1

def dequeue():
  global Q, head
  ret = Q[head]
  if head + 1 == len(Q):
    head = 0
  else:
    head += 1
  return ret

n, q = (int(x) for x in input().split())
for i in range(int(n)):
  name, t = input().split()
  enqueue({"name":name,"t":int(t)})
while head != tail:
  u = dequeue()
  q >= u["t"]
  c = min(u["t"],q)
  u["t"] -= c
  elaps += c
  if u["t"] > 0:
    enqueue(u)
  else:
    print(u["name"], elaps)
