import java.util.Scanner;

public class Main {
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        int n = getInt();
        BinaryTree bt = new BinaryTree();
        StringBuilder res = new StringBuilder();
        for (int i = 0; i < n; i++) {
            String com = sc.next();
            if (com.equals("insert")) {
                bt.insert(getInt());
            } else {
                bt.walk(bt.root, res, 1);
                res.append('\n');
                bt.walk(bt.root, res, 0);
                res.append('\n');
            }
        }
        System.out.print(res);
    }

    static int getInt() {
        return Integer.parseInt(sc.next());
    }
}

class BinaryTree {
    Node root;

    void insert(int key) {
        Node node = new Node(key);
        if (root == null) {
            root = node;
            return;
        }

        Node parent = null;
        Node current = root;
        while (current != null) {
            parent = current;
            if (node.key < current.key) {
                current = current.left;
            } else {
                current = current.right;
            }
        }
        if (node.key < parent.key) {
            parent.left = node;
        } else {
            parent.right = node;
        }
    }

    void walk(Node node, StringBuilder res, int order) {
        if (node == null) {
            return;
        }
        if (order == 0) {
            res.append(' ').append(node.key);
        }
        walk(node.left, res, order);
        if (order == 1) {
            res.append(' ').append(node.key);
        }
        walk(node.right, res, order);
    }
}

class Node {
    int key;
    Node left;
    Node right;
    Node(int key) {
        this.key = key;
    }
}
