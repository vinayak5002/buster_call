class Dice: #サイコロのクラス
    
    #サイコロの面の初期位置
    def __init__(self, d0, d1, d2, d3, d4, d5):
        self.dice = [d0, d1, d2, d3, d4, d5]
        #d0=face, d1=under, d2=right, d3=left, d4=up, d5=uup
        
    #サイコロの面の状態の更新
    def ch_state(self, s):
        self.dice_b = [x for x in self.dice]
        
        if s == "N":
            self.dice[0] = self.dice_b[1]
            self.dice[4] = self.dice_b[0]
            self.dice[1] = self.dice_b[5]
            self.dice[5] = self.dice_b[4]
        elif s == "S":
            self.dice[0] = self.dice_b[4]
            self.dice[4] = self.dice_b[5]
            self.dice[1] = self.dice_b[0]
            self.dice[5] = self.dice_b[1]
        elif s == "E":
            self.dice[0] = self.dice_b[3]
            self.dice[2] = self.dice_b[0]
            self.dice[3] = self.dice_b[5]
            self.dice[5] = self.dice_b[2]
        elif s == "W":
            self.dice[0] = self.dice_b[2]
            self.dice[2] = self.dice_b[5]
            self.dice[3] = self.dice_b[0]
            self.dice[5] = self.dice_b[3]
"""            
    def r_judge(self, l):
        if  self.st == l[0]:
            if self.
"""                


d = [int(x) for x in input().split()] #入力の取得

dc = Dice(d[0], d[1], d[2], d[3], d[4], d[5]) #イニシャライズ

for direc in list(input()): #操作の入力
    dc.ch_state(direc)

print(dc.dice[0])
