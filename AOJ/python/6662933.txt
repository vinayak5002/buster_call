use std::io;

#[warn(dead_code)]
fn main() {
    let n: usize = read();
    let mut a: Vec<i32> = read_vec();

    let mut done = 0;

    for i in 0..n - 2 {
        let min = a.iter().min().unwrap();
        let index = a[done..].iter().position(|&x| x == min).unwrap();
        a.swap(done, index);
        done += 1;
    }
}

fn read<T: std::str::FromStr>() -> T {
    let mut s = String::new();
    std::io::stdin().read_line(&mut s).ok();
    s.trim().parse().ok().unwrap()
}
fn read_vec<T: std::str::FromStr>() -> Vec<T> {
    read::<String>()
        .split_whitespace()
        .map(|e| e.parse().ok().unwrap())
        .collect()
}
fn read_vec2<T: std::str::FromStr>(n: u32) -> Vec<Vec<T>> {
    (0..n).map(|_| read_vec()).collect()
}

