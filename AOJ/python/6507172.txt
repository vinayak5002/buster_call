const input = 1 ? process.stdin : require('fs').createReadStream('./inp.txt')
const stdin = []
require('readline').createInterface({ input }).on('line', (line) => stdin.push(line)).on('close', () => main(stdin, process.stdout))
// 以下 main 内に処理を追加
function main(si, so) {
	let queryNum = si[0]
	let map = new Map()
	for (let i = 1; i <= queryNum; i++) {
		let queryLine = si[i].split(" ")
		let order = queryLine[0]
		let element = queryLine[1]
		
		if (order == 0){
			// 値を追加
			if (map.has(element)){
				map.set(element,map.get(element) + 1)
			} else {
				map.set(element,1)
			}
			
			// 要素数を表示
			let sum = 0
			for (let key of map.keys()){
				sum += map.get(key)
			}
			so.write(sum + "\n")
			
		} else if (order == 1) {
			// 指定された値の数量を表示
			if (map.has(element)){
				so.write(map.get(element) + "\n")
			} else {
				so.write("0\n")
			}
			
		} else if (order == 2) {
			// 指定された値の削除
			map.delete(element)
		} else if (order == 3) {
			// 指定範囲内の数を表示
			let under = Number(queryLine[1])
			let upper = Number(queryLine[2])
			
			let ans = []
			let key = Array.from(map.keys()).filter(function(val){
				return under <= val && val <= upper
			})
			for (let j of key){
				for (let k = 0; k < map.get(j); k++){
						ans.push(Number(j))
				}
			}
			if (ans.length){
				so.write(ans.sort(function(a, b){
					return a - b
				}).join("\n") + "\n")
			}
		}
	}
}

