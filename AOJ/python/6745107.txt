import heapq

"""
・左括弧を見ると新しく再帰潜るような実装
・heapqで最小票を(n+1)//2こ取り出すような
"""
pt = 0

def read(formula):
    global pt
    if formula[pt] == "[":
        return solve(formula)
    number = 0
    while formula[pt].isdigit():
        number = number * 10 + int(formula[pt])
        pt += 1
    pt += 1
    return (number + 1) // 2

def solve(formula):
    global pt
    heap = []
    while pt < len(formula) and formula[pt] != "]":
        pt += 1
        res = read(formula)
        heapq.heappush(heap, res)
    length = len(heap)
    ans = 0
    while len(heap) >= (length + 1) // 2:
        ans += heapq.heappop(heap)
    pt += 1
    return ans


def main():
    global pt
    N = int(input())
    result = []
    for _ in range(N):
        formula = input()
        res = solve(formula)
        result.append(res)
        pt = 0

    for res in result:
        print(res)


if __name__ == '__main__':
    main()

