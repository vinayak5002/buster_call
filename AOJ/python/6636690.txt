class Goods:
    def __init__(self, value, weight):
        self.value = value
        self.weight = weight


goodsCount, knapsackWeight = map(int, input().split())
dp = [[ 0 for _ in range(knapsackWeight+1)] for _ in range(goodsCount)]
goodsList = []

def goodsInput():
    for i in range(goodsCount):
        value, weight = map(int, input().split())
        goodsList.append(Goods(value, weight))

def calDp(goodsList):
    for i in range(goodsCount):
        for w in range(knapsackWeight+1):
            goods = goodsList[i]
            selectValue = dp[i][w - goods.weight] + goods.value
            notSelectValue = dp[i-1][w]
            if goods.weight > w:
                dp[i][w] = notSelectValue
            else:
                dp[i][w] = max(notSelectValue, selectValue)


def printMaxKnapsackValue():
    print(dp[goodsCount-1][knapsackWeight])


goodsInput()
calDp(goodsList)
printMaxKnapsackValue()
