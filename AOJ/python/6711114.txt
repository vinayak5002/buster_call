from typing import List

import math


def get_minkowski_distance(n: int, x: List[int], y: List[int]) -> float:
    # Minkowski distance
    d = 0
    for i in range(n):
        d += abs(x[i] - y[i]) ** 3
    return d ** (1 / 3)


def get_manhattan_distance(n: int, x: List[int], y: List[int]) -> float:
    # Manhattan distance
    d = 0
    for i in range(n):
        d += abs(x[i] - y[i])
    return d


def get_euclidean_distance(n: int, x: List[int], y: List[int]) -> float:
    # Euclidean distance
    d = 0
    for i in range(n):
        d += abs(x[i] - y[i]) ** 2
    return math.sqrt(d)


def get_chebyshev_distance(n: int, x: List[int], y: List[int]) -> float:
    # Chebyshev distance
    d: List[int]= []
    for i in range(n):
        d.append(abs(x[i] - y[i]))
    return max(d)

n = int(input())
x = list(map(int, input().split()))
y = list(map(int, input().split()))

print(f'{get_manhattan_distance(n, x, y):.8f}')
print(f'{get_euclidean_distance(n, x, y):.8f}')
print(f'{get_minkowski_distance(n, x, y):.8f}')
print(f'{get_chebyshev_distance(n, x, y):.8f}')

