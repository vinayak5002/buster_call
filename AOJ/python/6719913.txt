using namespace std;
#include <bits/stdc++.h>
const int MOD = 998244353;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<bool> vb;
typedef vector<vi> vvi;
typedef vector<vll> vvll;
typedef vector<string> vs;
#define REP(i, n) for (int i = 0; i < (n); i++)
#define FOR(i, N, n) for (int i = N; i < (n); i++)
#define SZ(x) (int)(x).size() // size_t
#define ALL(s) (s).begin(), (s).end()
#define so(V) sort(ALL(V))
#define rev(V) reverse(ALL(V))

const ll INF = 1LL << 60;

int main()
{
	string s1, s2;
	cin >> s1 >> s2;
	vvll dp(SZ(s1) + 1, vll(SZ(s2) + 1, INF));

	dp[0][0] = 0;
	for (int i = 1; i <= SZ(s1); i++)
	{
		for (int j = 1; j <= SZ(s2); j++)
		{
			if (i - 1 >= 0 && j - 1 >= 0)
			{
				if (s1[i - 1] == s2[j - 1])
				{
					dp[i][j] = min(dp[i][j - 1] + 1, min(dp[i - 1][j] + 1, dp[i - 1][j - 1]));
				}
				else
				{
					dp[i][j] = min(dp[i][j - 1] + 1, min(dp[i - 1][j] + 1, dp[i - 1][j - 1] + 1));
				}
			}
			else if (i - 1 >= 0)
			{
				dp[i][j] = dp[i - 1][j] + 1;
			}
			else if (j - 1 >= 0)
			{
				dp[i][j] = dp[i][j - 1] + 1;
			}
		}
	}
	cout << dp[SZ(s1)][SZ(s2)] << endl;

	return 0;
}
