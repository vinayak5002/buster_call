//C program for Binary search 
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
//Binary searching 
int Bin_search(int pointer,int array[],int LEFT,int RIGHT)
  {  
    int MID;
    while(LEFT <= RIGHT)
      {
        MID = (LEFT + RIGHT) / 2;
        if (array[MID] == pointer)
          {
            return 1;
          }
        else if (array[MID] > pointer)
          {
            RIGHT = MID - 1;
          }
        else if (array[MID] < pointer)
          {
            LEFT = MID + 1;
          }        
      }
    return 0;
  }
int main()
{
  //First array
  int i,j,num_1Array,count = 0,num_2Array,temp = 0,total_target;
  scanf("%d",&num_1Array);
  if (num_1Array < 0 || num_1Array >= 100001)
    {
      printf("Input error \n ");
      return EXIT_FAILURE;      
    }
  int Array1[num_1Array];
  for(i = 0; i < num_1Array; i++)
    {
      int value_read = scanf("%d",&Array1[i]);
      if (value_read != 1)
        {
          printf("Input error %d \n ", i);
          return EXIT_FAILURE;
        }
      if (Array1[i] < 0 || Array1[i] > pow(10,9))
        {
          printf("input exceed range from 0-10^9");
          return EXIT_FAILURE;
        }
    }
  //Second array 
  scanf("%d",&num_2Array);
  if (num_2Array < 0 || num_2Array >= 50001)
    {
      printf("Input error \n ");
      return EXIT_FAILURE;      
    }
  int Array2[num_2Array];
  for(i = 0; i < num_2Array; i++)
    {
      int value_read = scanf("%d",&Array2[i]);
      if (value_read != 1)
        {
          printf("Input error %d \n ", i);
          return EXIT_FAILURE;
        }
      if (Array2[i] < 0 || Array2[i] > pow(10,9))
        {
          printf("input exceed range from 0-10^9");
          return EXIT_FAILURE;
        }
    }
  //Binary searching array1 and array2
  for(i = 0; i < num_2Array; i++)
    {
      temp = Bin_search(Array2[i],Array1,0,num_1Array-1);
      total_target = total_target + temp;
    }
  printf("%d",total_target);
  printf("\n");  
  return EXIT_SUCCESS; 
}
