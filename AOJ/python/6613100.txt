using System;
using System.Collections.Generic;
using System.Linq;

namespace プログラム実行用
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string line = Console.ReadLine();
            int count = int.Parse(line.Split(' ')[0]);
            int quantam = int.Parse(line.Split(' ')[1]);
            string[] strAr = new string[count];
            for(int i = 0; i < count; i++)
            {
                strAr[i] = Console.ReadLine();
            }
            Run(strAr, quantam);
        }

        static void Run(string[] strArray, int quantum)
        {
            Queue<(string pName, int val)> queue = new Queue<(string pName, int val)>();

            for (int i = 0; i < strArray.Length; i++)
            {
                string val = strArray[i].Split(' ')[1];
                string name = strArray[i].Split(' ')[0];
                queue.Enqueue((name, int.Parse(val)));
            }

            int count = 0;
            List<(string pName, int time)> resultList = new();
            while (queue.Count > 0)
            {
                int left = quantum;
                while (left > 0)
                {
                    // 値を取り出す
                    (string pName, int val) process = queue.Dequeue();

                    int val = process.val;

                    int result = val - left;
                    // 処理完了
                    if (result < 0)
                    {
                        // 処理能力の残り
                        left = Math.Abs(result);
                        count = count + val;

                        string name = process.pName;
                        resultList.Add((name, count));
                        if (queue.Count == 0) break;
                    }
                    else
                    {
                        process.val = result;
                        queue.Enqueue(process);
                        left = 0;
                        count = quantum;
                    }
                }
            }

            foreach (var r in resultList)
            {
                Console.WriteLine($"{r.pName} {r.time}");
            }
        }
    }
}

