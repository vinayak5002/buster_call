
def rotate(a,n):
    return a[n:]+a[:n]

class doublyLinkedList():

	def __init__(self,l ) -> None:
		l.append(0)
		self.lis = rotate(l, -1)
		self.forwardlist = rotate([x for x in range(len(l))], 1)
		self.reverselist = rotate([x for x in range(len(l))], -1)
		self.firstp = 0
		#self.lastp = len(l)-1
		self.listlen = len(l)-1


	def deleteFirst(self):
		self.forwardlist[self.firstp] = self.forwardlist[self.forwardlist[self.firstp]]
		self.reverselist[self.forwardlist[self.firstp]] = self.firstp
		self.listlen -= 1

	def deleteLast(self):
		lastp = self.reverselist[self.firstp]
		self.forwardlist[self.reverselist[lastp]] = self.forwardlist[lastp]
		self.reverselist[self.firstp] = self.reverselist[lastp]
		self.listlen -= 1

	def delete(self, x):
		# xをキーとする最初の要素を連結リストから削除する
		cnt = 1
		index = self.forwardlist[self.firstp]
		while cnt <= self.listlen:
			if self.lis[index] == x:
				self.forwardlist[self.reverselist[index]] = self.forwardlist[index]
				self.reverselist[self.forwardlist[index]] = self.reverselist[index]
				self.listlen -= 1
				break

			else:
				index = self.forwardlist[index]
				cnt += 1

	def insert(self, x):
		# 先頭にxをキーとする要素を追加する
		self.lis.append(x)
		self.forwardlist.append(self.forwardlist[self.firstp])
		self.reverselist.append(self.reverselist[self.forwardlist[self.firstp]])

		self.reverselist[self.forwardlist[self.firstp]] = len(self.lis)-1
		self.forwardlist[self.firstp] = len(self.lis)-1
		self.listlen += 1


	def printList(self):

		printlist = []
		if self.listlen == 0:
			print(*printlist)
		else:
			d = self.lis[self.firstp]
			f = self.forwardlist[self.firstp]
			for _ in range(self.listlen):
				d = self.lis[f]
				printlist.append(d)
				f = self.forwardlist[f]
			print(*printlist)



n = int(input())
A=[]
#A = [int(input())]
D = doublyLinkedList(A)
for _ in range(n):
	ls = list(map(str, input().split()))
	
	if len(ls) == 2:
		s = ls[0]
		t = ls[1]
	else:
		s = ls[0]
	if s == "insert":
		D.insert(int(t))
	elif s == "delete":
		D.delete(int(t))
	elif s == "deleteFirst":
		D.deleteFirst()
	elif s == "deleteLast":
		D.deleteLast()

	#print(D.lis)
	#print(D.forwardlist)
	#print(D.reverselist)
D.printList()





