comp_sum = 0

def merge_sort(num_list):
    if len(num_list) < 2:
        return num_list
    middle = len(num_list) // 2
    left_list = merge_sort(num_list[:middle])
    right_list = merge_sort(num_list[middle:])
    return merge(left_list, right_list)


def merge(left_list, right_list):
    global comp_sum
    result_list = list()
    i = 0
    j = 0

    while len(left_list) != i or len(right_list) != j:
        comp_sum += 1
        if len(left_list) != i and len(right_list) != j:
            if left_list[i] < right_list[j]:
                result_list.append(left_list[i])
                i += 1
            else:
                result_list.append(right_list[j])
                j += 1
        elif len(left_list) != i:
            result_list.append(left_list[i])
            i += 1
        elif len(right_list) != j:
            result_list.append(right_list[j])
            j += 1

    return result_list


def main():
    n = int(input())
    input_list = list(map(int, input().split()))
    output_list = merge_sort(input_list)
    print(*output_list)
    print(comp_sum)

main()

