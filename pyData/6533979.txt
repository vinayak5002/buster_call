import Data.Hashable (hash)
import Data.Map ( empty, insert, member, Map )
main :: IO ()
main = do
  getLine
  getContents >>=
    mapM_ putStrLn . solve [] empty . map ((\[a,b] -> (a,b)) . words) . lines
solve :: [String] -> Map Int Bool -> [(String,String)] -> [String]
solve acc dict [] = reverse acc
solve acc dict (c:cs) = if command == "insert" then solve acc (insert key True dict) cs
  else solve (if member key dict then "yes":acc else "no":acc) dict cs
  where
    command = fst c
    key = myhash $ snd c
    myhash :: String -> Int
    myhash = hash
