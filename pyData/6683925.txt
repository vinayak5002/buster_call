n = int(input())
P = [i for i in range(n)]
def root(x):
 path_to_root = []
 while P[x] !=x:
 	path_to_root.append(x)
 	x=P[x]
 for node in path_to_root:
 	P[node] = x
 return x
def is_same_set(x,y):
 return root(x) == root(y)
def unite(x,y):
 P[root(x)] = root(y)
a=[]
p=0
for i in range(n):
 l = list(map(int,input().split()))
 for j in range(i,n):
 	if l[j] != -1:
 		a.append([l[j],i,j])
a=sorted(a)
for k in range(0,len(a)):
 if int(is_same_set(a[k][1],a[k][2])) == 0:
 	unite(a[k][1],a[k][2]) 
 	p= p + a[k][0]
print(p)
