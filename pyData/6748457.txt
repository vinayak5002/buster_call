from collections import deque


w,h,n = map(int,input().split())
Q = []
for i in range(n):
    x,y,z = map(int,input().split())
    Q.append((x-1,y-1,z))

G = [[-10**9]*w for _ in range(h)]

#引数はリストと開始点
def bfs(H,W,Z):
    que = deque()
    que.append((H,W))
    G_ = [[10**9]*w for _ in range(h)]
    G_[H][W]=Z
    while que:
        v1,v2 = que.popleft()
        for a,b in ((0,1),(1,0),(0,-1),(-1,0)):
            if(not(0<=v1+a<h and 0<=v2+b<w)) or G_[v1+a][v2+b]!=10**9:
                continue
            G_[v1+a][v2+b]=G_[v1][v2]-1
            que.append((v1+a,v2+b))
    return G_

for i in range(n):
    x,y,z = Q[i]
    G_ = bfs(y,x,z)
    for hh in range(h):
        for ww in range(w):
            G[hh][ww]=max(G[hh][ww],G_[hh][ww])

for i in range(n):
    x,y,z = Q[i]
    if(G[y][x]!=z):
        print("No")
        exit()


ans = sum(sum(G[i][j]for j in range(w))for i in range(h))
print(ans)
