import sys

# READ_FROM_FILE = True
READ_FROM_FILE = False

num_vertexes = 0
adjacency_list = []
current_time = 0
is_visited = []
found_time = []
search_finished_time = []


def dfs(v):
    global current_time
    if is_visited[v]:
        return
    found_time[v] = current_time
    is_visited[v] = True
    current_time += 1

    for u in adjacency_list[v]:
        if is_visited[u]:
            continue
        dfs(u)
    search_finished_time[v] = current_time
    current_time += 1
    return


def main():
    if READ_FROM_FILE:
        f = open('test0.txt', 'r')
    else:
        f = sys.stdin

    global num_vertexes, found_time, search_finished_time, adjacency_list, is_visited, current_time
    num_vertexes = int(f.readline())
    found_time = [0] * num_vertexes
    search_finished_time = [0] * num_vertexes
    is_visited = [False] * num_vertexes

    adjacency_list = [[] for _ in range(num_vertexes)]
    for _ in range(num_vertexes):
        adjacency = list(map(int, f.readline().split()))
        cn = adjacency[0] - 1
        adjacency = adjacency[2:]
        for i in range(len(adjacency)):
            adjacency[i] -= 1
        adjacency_list[cn] += adjacency

    current_time = 1
    for i in range(num_vertexes):
        dfs(i)

    for i in range(num_vertexes):
        print(i + 1, found_time[i], search_finished_time[i])

    if READ_FROM_FILE:
        f.close()
    return


if __name__ == '__main__':
    main()

