from heapq import heappop,heappush
INF = 1<<64
V,E,r = map(int,input().split())
G = [[] for _ in range(V)]
for _ in range(E):
    s,t,d = map(int,input().split())
    G[s].append((t, d))
cost = [INF] * V
heap = []
heappush(heap, (0, r))
while heap:
    c,pos = heappop(heap)
    if c < cost[pos]:
        cost[pos] = c
        for nxt,d in G[pos]:
            heappush(heap, (c+d, nxt))
for i in range(V):
    if cost[i] == INF:
        cost[i] = 'INF'
    print(cost[i])
