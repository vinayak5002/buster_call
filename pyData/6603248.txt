def trick(v):
    global layout

    if len(layout) == 0:
        layout.append(v[0])
        v.pop(0)
    else:
        flg = False
        for i_ in range(len(v)):
            if v[i_] > layout[-1]:
                layout.append(v[i_])
                v.pop(i_)
                flg = True
                break
        if not flg:
            layout = []


while True:
    n = int(input())
    if n == 0:
        exit(0)
    taro = []
    hanako = []
    for _ in range(n):
        taro.append(int(input()))
    taro.sort()
    for i in range(1, 2 * n + 1):
        if i in taro:
            continue
        hanako.append(i)
    hanako.sort()

    layout = []  # 場札
    turn = 0  # どちらの順番か(0:taro, 1:hanako)
    while len(taro) > 0 and len(hanako) > 0:
        if turn == 0:
            trick(taro)
            turn = 1
        else:
            trick(hanako)
            turn = 0

    print(len(hanako))
    print(len(taro))

