inf=10**9
def main():
    N, M = map(int, input().split())
    G = [[] for _ in range(N)]
    for _ in range(M):
        s,t,d = map(int,input().split())
        G[s].append((t,d))
    
    dp = [[inf]*N for _ in range(1<<N)]
    dp[0][0] = 0
    #does not matter where to start
    for i in range(1<<N):
        for f in range(N):
            for t,c in G[f]:
                #visited or there is no edge or not visited u
                if i>>t&1 or (i>>f&1==0 and i!=0): continue
                dp[(1<<t)|i][t]=min(dp[(1<<t)|i][t], dp[i][f]+c)
    print(-1 if dp[-1][0]==inf else dp[-1][0])
main()
