import sys

# READ_FROM_FILE = True
READ_FROM_FILE = False


def calc_length2(v):
    length = 0
    for element in v:
        length += element ** 2
    return length


def v_diff(v0, v1):
    dif = []
    for i in range(len(v0)):
        dif.append(v1[i] - v0[i])
    return dif


def inner_product(v0, v1):
    ip = 0
    for i in range(len(v0)):
        ip += v0[i] * v1[i]
    return ip


def cross_product2d(v0, v1):
    return v0[0] * v1[1] - v0[1] * v1[0]


def intersects(p0, p1, p2, p3):
    v01 = v_diff(p0, p1)
    v02 = v_diff(p0, p2)
    v03 = v_diff(p0, p3)

    cp0 = cross_product2d(v01, v02)
    cp1 = cross_product2d(v01, v03)

    if cp0 == cp1 == 0.0:
        ip0 = inner_product(v01, v02)
        ip1 = inner_product(v01, v03)

        if ip0 > ip1:
            ip0, ip1 = ip1, ip0

        return ip0 <= calc_length2(v01) and 0 <= ip1

    v23 = v_diff(p2, p3)
    v20 = v_diff(p2, p0)
    v21 = v_diff(p2, p1)

    cp2 = cross_product2d(v23, v20)
    cp3 = cross_product2d(v23, v21)

    return cp0 * cp1 <= 0 and cp2 * cp3 <= 0


def main():
    if READ_FROM_FILE:
        f = open('test0.txt', 'r')
    else:
        f = sys.stdin

    q = int(f.readline())
    for _ in range(q):
        coord_list = list(map(int, f.readline().split()))
        p0 = (coord_list[0], coord_list[1])
        p1 = (coord_list[2], coord_list[3])
        p2 = (coord_list[4], coord_list[5])
        p3 = (coord_list[6], coord_list[7])

        if intersects(p0, p1, p2, p3):
            print(1)
        else:
            print(0)

    if READ_FROM_FILE:
        f.close()
    return


if __name__ == '__main__':
    main()

