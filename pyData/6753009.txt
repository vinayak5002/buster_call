import queue
def dfs(sx, sy):
    que = queue.deque()
    que.append((sx, sy))

    while que:
        x, y = que.pop()
        for dx in range(-1, 2):
            for dy in range(-1, 2):
                if dx == dy == 0:
                    continue
                nx = x + dx
                ny = y + dy
                if not 0 <= nx < H or not 0 <= ny < W:
                    continue
                if C[nx][ny] == 0:
                    continue
                C[nx][ny] = 0
                que.append((nx, ny))




while True:
    W, H = map(int, input().split())
    if W == H == 0:
        exit()

    C = [list(map(int, input().split())) for _ in range(H)]
    ans = 0

    for i in range(H):
        for j in range(W):
            if C[i][j] == 1:
                ans += 1
                C[i][j] = 0
                dfs(i, j)

    print(ans)
