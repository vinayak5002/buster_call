import sys
from math import inf
ioi = sys.stdin
rxs = lambda: map(int, ioi.readline().split())
N, W = rxs()
vw = [[*rxs()] for _ in range(N)]

# dp[n][v] = min(dp[n-1][v], dp[n-1][v-v[n]] + w[n])

V = sum(v for v, _ in vw)
dp = [[0, *((inf if vv > v else w) for v, w in [vw[0]] for vv in range(1, V+1))]]

for n in range(1, N):
    dp.append([0])
    v, w = vw[n]
    for vv in range(1, V+1):
        dp[n].append(min(
            dp[n-1][vv],
            (dp[n-1][vv-v] + w) if vv >= v else w
        ))

print(max([v for n in range(N) for v, w in enumerate(dp[n]) if w <= W]))

