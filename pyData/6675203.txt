from heapq import heappop,heappush

N=4

a,b,c,d=map(int,input().split())
e,f,g,h=map(int,input().split())
i,j,k,l=map(int,input().split())
m,n,o,p=map(int,input().split())


X=(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)
GOAL=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0)

POW16=[1]

for i in range(20):
    POW16.append(POW16[-1]*16)

def hash(X):
    score=0
    for i in range(16):
        score+=POW16[i]*X[i]
    return score

def manh(X):
    score=0
    for i in range(16):
        x=X[i]
        if x==0:
            continue
        score+=abs(i//N-(x-1)//N) + abs(i%N-(x-1)%N)
    return score

for i in range(16):
    if X[i]==0:
        zero=i

Q=[(manh(X),manh(X),hash(X),-10,zero)]

USE=set()
USE.add(hash(X))

ANS=45

while Q:
    dis_score,dis,NOW,fr,zero=heappop(Q)

    if dis==0:
        ANS=min(ANS,dis_score-dis)
        print(ANS)
        break

    for i in [N,-N,1,-1]:
        if i==fr:
            continue

        if i==1:
            if zero%N==N-1:
                continue
        elif i==-1:
            if zero%N==0:
                continue
        elif i==N or i==-N:
            if zero+i<0 or zero+i>=16:
                continue

        x=NOW//(POW16[zero+i])%16

        NEXT_NOW=NOW-POW16[zero+i]*x+POW16[zero]*x

        if NEXT_NOW in USE:
            continue

        manh_dis=dis

        manh_dis-=abs((zero+i)//N-(x-1)//N) + abs((zero+i)%N-(x-1)%N)
        manh_dis+=abs(zero//N-(x-1)//N) + abs(zero%N-(x-1)%N)

        USE.add(NEXT_NOW)

        if dis_score-dis+1+manh_dis>ANS:
            continue

        heappush(Q,(manh_dis+dis_score-dis+1,manh_dis,NEXT_NOW,-i,zero+i))
