def area(pos):
    pos.sort()
    max_x = max_y = 0
    min_x = min_y = 50000
    for i in range(4):
        max_x = max(max_x, pos[i][0])
        min_x = min(min_x, pos[i][0])
        max_y = max(max_y, pos[i][1])
        min_y = min(min_y, pos[i][1])

    outer_square = (max_x - min_x) * (max_y - min_y)
    p1 = pos[0]
    p2 = pos[1]
    triangle = abs(p1[0] - p2[0]) * abs(p1[1] - p2[1])
    return outer_square - triangle * 4 // 2


def search(v, a):
    left = -1
    right = len(v)
    while right - left > 1:
        mid = (left + right) // 2
        if v[mid] == a:
            return True
        elif v[mid] > a:
            right = mid
        else:
            left = mid
    return False


def main():
    n = int(input())
    if n == 0:
        return False

    p = []
    for _ in range(n):
        x, y = map(int, input().split())
        p.append((x, y))

    p.sort()
    max_area = 0
    for i in range(n):
        p1 = p[i]
        for j in range(i + 1, n):
            p2 = p[j]
            diff_x = abs(p1[0] - p2[0])
            diff_y = abs(p1[1] - p2[1])
            left_down = (p1[0] - diff_y, p1[1] + diff_x)
            if search(p, left_down):
                left_up = (p2[0] - diff_y, p2[1] + diff_x)
                if search(p, left_up):
                    max_area = max(max_area, area([p1, p2, left_down, left_up]))
    print(max_area)


if __name__ == '__main__':
    while True:
        main()

