MOD = 10 ** 9 + 7
N = 200000
fact = [0 for _ in range(N)]
invfact = [0 for _ in range(N)]
fact[0] = 1
for i in range(1, N):
    fact[i] = fact[i - 1] * i % MOD

invfact[N - 1] = pow(fact[N - 1], MOD - 2, MOD)

for i in range(N - 2, -1, -1):
    invfact[i] = invfact[i + 1] * (i + 1) % MOD

def nCk(n, k):
    if k < 0 or n < k:
        return 0
    else:
        return (fact[n] * invfact[k] % MOD) * invfact[n - k] % MOD

def nHk(n, k):
    return nCk(n + k - 1, k)

n, k = map(int, input().split())
if n < k:
    print(0)
    exit()
n -= k
dp = [[0] * (k + 1) for _ in range(n + 1)]
for j in range(k + 1):
    dp[0][j] = 1
for i in range(1, n + 1):
    for j in range(k + 1):
        if j > 0:
            dp[i][j] += dp[i][j - 1]
        if i >= j:
            dp[i][j] += dp[i - j][j]
        dp[i][j] %= MOD
print(dp[n][k])
