def root(x):
    path_to_root=[]
    while x!=P[x]:
        path_to_root.append(x)
        x=P[x]
    for i in path_to_root:
        P[i]=x
    return x
def unite(x,y):
    P[root(x)]=P[root(y)]
def same(x,y):
    return root(x)==root(y)
n=int(input())
A=[list(map(int,input().split())) for _ in range(n)]
Q=[]
for i in range(n):
    for j in range(i):
        if A[i][j]!=-1:
            Q.append([A[i][j],i,j])
Q.sort()
P=[]
for i in range(n):
    P.append(i)
weight=0
for branch in Q:
    if not same(branch[1],branch[2]):
        unite(branch[1],branch[2])
        weight+=branch[0]
print(weight)

