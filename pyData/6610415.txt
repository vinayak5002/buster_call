import heapq
v,e,r=map(int,input().split())
edge=[[]for _ in range(v)]
for _ in range(e):
    s,t,d=map(int,input().split())
    edge[s].append([t,d])

node=[float("inf")]*v
node[r]=0
node_name=[]
heapq.heappush(node_name,[0,r])

while node_name:
    _,min_point=heapq.heappop(node_name)
    nexts=edge[min_point]
    for next,dist in nexts:
        if node[min_point]+dist<node[next]:
            node[next]=node[min_point]+dist
            heapq.heappush(node_name,[node[min_point]+dist,next])

for i in node:
    if i==float("inf"):
        print("INF")
    else:
        print(i)

