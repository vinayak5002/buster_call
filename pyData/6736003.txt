import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while True:
    N, M = mi()
    if N == 0:
        break
    ans = 0
    cnt = 0
    moneys = li()
    for i in range(N-1):
        for j in range(i+1,N):
            cnt = moneys[j] + moneys[i]
            if cnt <= M and ans < cnt:
                ans = cnt
    if ans == 0:
        print('NONE')
    else:
        print(ans)

