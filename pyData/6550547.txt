import sys

def main(ioi):
    rxs = lambda: map(int, ioi.readline().split())
    N, W = rxs()
    vws = [[*rxs()] for _ in range(N)]
    # dp[n][w] = max(dp[n-1][w-k*W[n]]+k*V[n])) for k in range(w//W[n])
    # dp[n][w] = max(dp[n-1][w], dp[n][w-W[n]]+V[n])
    dp = []

    for w in range(W+1):
        dp.append(vws[0][0] * (w // vws[0][1]))

    for n in range(1, N):
        for w in range(W+1):
            if w >= vws[n][1]:
                dp[w] = max(dp[w], dp[w-vws[n][1]]+vws[n][0])

    return dp[W]
    
DBG=False
if not DBG: print(main(sys.stdin))
else:
    import io
    print(main(io.StringIO("""4 8
4 2
5 2
2 1
8 3
""")))
    print(main(io.StringIO("""2 20
5 9
4 10
""")))
    print(main(io.StringIO("""3 9
2 1
3 1
5 2
""")))

