N = int(input())
List1 = [list(map(int,input().split())) for _ in range(N)]
import itertools
import copy
seenD = dict()
def solve(L,N):
  if N > 2:
    ans = float('inf')
    for i in range(N-1):
      a = L[i][0]
      b = L[i][1]
      c = L[i+1][0]
      d = L[i+1][1]
      L2 = copy.deepcopy(L)
      L2.pop(i)
      L2[i] = [a,d]
      List2 = list(itertools.chain.from_iterable(L2))
      if not seenD.get(tuple(List2)):
        seenD[tuple(List2)] = solve(L2,N-1)
      ans = min(ans,seenD[tuple(List2)]+a*c*d)
    List3 = list(itertools.chain.from_iterable(L))
    seenD[tuple(List3)] = ans
    return seenD[tuple(List3)]
  else:
    a = L[0][0]
    b = L[0][1]
    c = L[1][0]
    d = L[1][1]
    List3 = list(itertools.chain.from_iterable(L))
    seenD[tuple(List3)] = a*c*d
    return seenD[tuple(List3)]
if N == 1:
  print(0)
else:
  print(solve(List1,N))   
    
    
  
