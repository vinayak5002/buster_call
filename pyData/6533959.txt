import Data.Map ( empty, insert, member, Map )
main :: IO ()
main = do
  getLine
  getContents >>=
    mapM_ putStrLn . solve [] empty . map ((\[a,b] -> (a,b)) . words) . lines
solve :: [String] -> Map String Bool -> [(String, String)] -> [String]
solve acc dict [] = reverse acc
solve acc dict (c:cs) = if fst c == "insert" then solve acc (insert (snd c) True dict) cs
  else solve (if member (snd c) dict then "yes":acc else "no":acc) dict cs
