import sys
readline = sys.stdin.readline

def f(i, j, dp, A):
    if dp[i][j] != -1:
        return dp[i][j]
    if i == j:
        dp[i][j] = 0
        return dp[i][j]
    if abs(j - i) == 1:
        if abs(A[i] - A[j]) <= 1:
            dp[i][j] = 2
        else:
            dp[i][j] = 0
            # 前後に広げることが出来る
        if i - 1 >= 0:
            dp[i - 1][j] = dp[i][j]
        if j + 1 < N:
            dp[i][j + 1] = dp[i][j]
        return dp[i][j]
    # あるkで分割したときの最大値の和
    for k in range(i, j):
        dp[i][j] = max(dp[i][j], f(i, k, dp, A) + f(k + 1, j, dp, A))
        
    # 間の区間が全て崩せるとき
    if abs(A[i] - A[j]) <= 1:
        if f(i + 1, j - 1, dp, A) == j - i - 1:
            dp[i][j] = j - i + 1
    return dp[i][j]

def solve(N, A):
    # dp[i][j] = 区間i,jで取り除ける最大数
    dp = [[-1] * N for i in range(N)]
    
    ans = f(0, N - 1, dp, A)
    print(ans)

            

    
    
while True:
    N = int(readline())
    if N == 0:
        break
    A = list(map(int,readline().split()))
    solve(N, A)
    
    

