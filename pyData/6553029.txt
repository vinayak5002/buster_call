import sys
from math import inf
from bisect import *

def main(ioi):
    rxs = lambda: map(int, ioi.readline().split())
    s1 = [ord(c)-ord('a') for c in ioi.readline().strip()]
    s2 = [ord(c)-ord('a') for c in ioi.readline().strip()]
    dp = [[0]*len(s2) for _ in range(2)]

    for i, c1 in enumerate(s1):
        for j, c2 in enumerate(s2):
            if c1 == c2:
                dp[i&1][j] = dp[(i&1)^1][j-1] if i >= 1 and j >= 1 else 0
            elif i == j == 0:
                dp[i&1][j] = 1
            else:
                dp[i&1][j] = 1 + min(
                    dp[(i&1)  ][j-1] if j >= 1 else inf,
                    dp[(i&1)^1][j  ] if i >= 1 else inf,
                    dp[(i&1)^1][j-1] if i >= 1 and j >= 1 else inf,
                )
        pass
    
    return dp[(len(s1)-1)&1][len(s2)-1] + abs(len(s1)-len(s2))

DBG = False
if not DBG: print(main(sys.stdin))
else:
    import io
    print(main(io.StringIO("""acac
acm
""")))
    print(main(io.StringIO("""icpc
icpc
""")))


