V,E,r = map(int,input().split())
Graph = [[] for _ in range(V)]
for _ in range(E):
  a,b,c = map(int,input().split())
  Graph[a].append([b,c])
import heapq
edgeL = []
heapq.heapify(edgeL)
dist = [float('inf')]*V
dist[r] = 0
heapq.heappush(edgeL, (0,r))
while edgeL:
  x = heapq.heappop(edgeL)
  for l in Graph[x[1]]:
    if dist[l[0]] > dist[x[1]]+l[1]:
      dist[l[0]] = dist[x[1]]+l[1]
      heapq.heappush(edgeL, (dist[l[0]],l[0]))
for d in dist:
  if d != float('inf'):
    print(d)
  else:
    print('INF')
      
    
      
    
  
  
  

