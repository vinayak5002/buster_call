def calc_dist(i, j, dist):
    return dist[i][j]


def main():
    N, M = map(int, input().split())
    INF = 2**62
    dp = [[INF]*N for i in range(2**N)]
    dp[0][0] = 0
    adj = [[] for i in range(N)]
    dist = [[0]*N for i in range(N)]
    for i in range(M):
        s, t, d = map(int, input().split())
        adj[s].append(t)
        dist[s][t] = d

    for bit in range(2**N):
        for i in range(N):
            for j in range(N):
                if i == j:
                    continue
                if bit & (1 << i) == 0 and j in adj[i]:
                    dp[bit | 2**i][i] = min(dp[bit | 2**i]
                                            [i], dp[bit][j]+calc_dist(i, j, dist))

    if dp[2**N-1][0] == INF:
        print("-1")
    else:
    	print(dp[2**N-1][0])


if __name__ == '__main__':
    main()

