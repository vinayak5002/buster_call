import sys
import math
from collections import defaultdict, deque

sys.setrecursionlimit(10 ** 6)
stdin = sys.stdin

INF = float('inf')

ni = lambda: int(ns())
na = lambda: list(map(int, stdin.readline().split()))
ns = lambda: stdin.readline().strip()

dx = [1, 0, -1, 0, 1, -1, 1, -1]
dy = [0, 1, 0, -1, 1, 1, -1, -1]
def dfs(x, y):
    grid[y][x] = 0
    for i in range(8):
        nx = dx[i] + x
        ny = dy[i] + y
        if nx < W and ny < H and nx >= 0 and ny >= 0 and grid[ny][nx] == 1:
            dfs(nx, ny)

while True:
    W, H = na()
    if W == 0 and H == 0:
        break
    grid = []
    for i in range(H):
        grid.append(na())

    ans = 0
    for i in range(H):
        for j in range(W):
            if grid[i][j] == 1:
                dfs(j, i)
                ans += 1
    print(ans)
