import sys

class Node:
    def __init__(self, value):
        self.value = value
        self.prev = None
        self.next = None


class TwoWayLinkedList:
    def __init__(self):
        self.head = None

    def print(self):
        print("#" * 10)
        if self.head is None:
            sys.exit("List is empty")
        cursor = self.head
        while True:
            print(cursor.value)
            if cursor.next == self.head:
                break
            cursor = cursor.next

    def reverse_print(self):
        print("#" * 10)
        if self.head is None:
            sys.exit("List is empty")
        cursor = self.head.prev
        while True:
            print(cursor.value)
            if cursor.prev == self.head.prev:
                break
            cursor = cursor.prev

    def add_head(self, value):
        node = Node(value)
        if self.head is None:
            self.head = node
            self.head.prev = node
            self.head.next = node
            return
        node.prev = self.head.prev  
        node.next = self.head  
        self.head.prev.next = node  
        self.head.prev = node  
        self.head = node  

    def add_tail(self, value):
        node = Node(value)
        if self.head is None:
            self.head = node
            self.head.prev = node
            self.head.next = node
            return
        node.prev = self.head.prev  
        node.next = self.head  
        self.head.prev.next = node  
        self.head.prev = node  


if __name__ == "__main__":
    two_way_list = TwoWayLinkedList()
    two_way_list.add_head(1)
    two_way_list.print()
    two_way_list.add_head(2)
    two_way_list.print()
    two_way_list.add_head(3)
    two_way_list.print()
    two_way_list.add_head(4)
    two_way_list.print()
    two_way_list.add_tail(0)
    two_way_list.print()
    two_way_list.add_tail(1)
    two_way_list.print()
    two_way_list.reverse_print()
    two_way_list.add_tail(2)
    two_way_list.print()

