H = int(input())
nodeIndexList = list(map(int, input().split()))


def maxHeapify(index):
    leftNodeIndex = 2 * (index + 1) - 1
    rightNodeIndex = 2 * (index + 1)
    isRightNodeBiggerThanSelf = False
    isLeftNodeBiggerThanSelf = False
    largestNodeIndex = index
    # 子と自分の中で値が最大のノードを選ぶ
    if leftNodeIndex <= H - 1 and nodeIndexList[leftNodeIndex] > nodeIndexList[index]:
        isLeftNodeBiggerThanSelf = True
    if rightNodeIndex <= H - 1 and nodeIndexList[rightNodeIndex] > nodeIndexList[index]:
        isRightNodeBiggerThanSelf = True

    isChildNodeBiggerThanSelf = isRightNodeBiggerThanSelf or isLeftNodeBiggerThanSelf

    if isChildNodeBiggerThanSelf:
        if not isRightNodeBiggerThanSelf:
            largestNodeIndex = leftNodeIndex
        elif not isLeftNodeBiggerThanSelf:
            largestNodeIndex = rightNodeIndex
        else:
            if nodeIndexList[leftNodeIndex] >= nodeIndexList[rightNodeIndex]:
                largestNodeIndex = leftNodeIndex
            else:
                largestNodeIndex = rightNodeIndex

        nodeIndexList[index], nodeIndexList[largestNodeIndex] = (
            nodeIndexList[largestNodeIndex],
            nodeIndexList[index],
        )
        maxHeapify(largestNodeIndex)


for i in range((H - 1) // 2, -1, -1):
    maxHeapify(i)

print(" " + " ".join(map(str, nodeIndexList)))
