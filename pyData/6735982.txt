import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)


while True:
    M, Nmin, Nmax = mi()
    if M == 0:
        break
    points = []
    ans = 0
    cnt = 0
    for i in range(M):
        points.append(ii())
    for i in range(Nmax-Nmin+1):
        cnt = points[Nmin+i-1] - points[Nmin+i] 
        if cnt >= ans:
            ans = cnt
            ans1 = Nmin + i
    print(ans1)

