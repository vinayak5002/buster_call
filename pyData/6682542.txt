class Node:
    def __init__(self, v):
        self.value = v
        self.left = None
        self.right = None

    def insert(self, v):
        if self.value > v:
            if self.left == None:
                self.left = Node(v)
                
            else:
                self.left.insert(v)
        elif self.value < v:
            if self.right == None:
                self.right = Node(v)
                
            else:
                self.right.insert(v)
        else:
            return
    def find(self, v):
        if self.value == v:
            print("yes")
        elif self.value < v:
            if self.right == None:
                print("no")
            else:
                self.right.find(v)
        else:
            if self.left == None:
                print("no")
            else:
                self.left.find(v)
        
def pre_order(t):
    if t != None:
        print('',t.value, end='')
        pre_order(t.left)
        pre_order(t.right)


def in_order(t):
    if t != None:
        in_order(t.left)
        print('',t.value, end='')
        in_order(t.right)


N = int(input())
root = Node(None)#root作成
stdin = input().split()
if stdin[0] == 'insert':
    root = Node(int(stdin[1]))
for i in range(N-1):
    stdin = input().split()
    if stdin[0] == 'insert':
        root.insert(int(stdin[1]))
    elif stdin[0] == 'print':
        in_order(root)
        print()
        pre_order(root)
        print()
    elif stdin[0] == 'find':
        root.find(int(stdin[1]))



