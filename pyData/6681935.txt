from collections import defaultdict


INF = 10 ** 18
V, E, r = map(int, input().split())
G = defaultdict(list)
for _ in range(E):
    _s, _t, _d = map(int, input().split())
    G[_s].append((_t, _d))
nodes = [INF] * V
seen = [False] * V
nodes[r] = 0
seen[r] = True
q = [r]
while q:
    r = q.pop()
    seen[r] = True
    for t, d in G[r]:
        if seen[t] == False and nodes[r] + d < nodes[t]:
            nodes[t] = nodes[r] + d
            q.append(t)

for p in nodes:
    print(p if p != INF else "INF")

