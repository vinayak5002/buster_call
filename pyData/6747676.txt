from itertools import accumulate
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin


INF = 10 ** 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

N, W, H = mi()
imoW = [0] * (W + 1) # 道を通るか
imoH = [0] * (H + 1) # 道を通るか
for i in range(N):
    x, y, w = mi()
    imoW[max(x - w, 0)] += 1
    imoW[min(x + w, W)] -= 1
    imoH[max(y - w, 0)] += 1
    imoH[min(y + w, H)] -= 1

accW = list(accumulate(imoW))[:-1]
accH = list(accumulate(imoH))[:-1]
print("Yes" if min(accW) or min(accH) else "No")

