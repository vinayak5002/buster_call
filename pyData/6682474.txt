class Node:
    def __init__(self, v):
        self.value = v
        self.left = None
        self.right = None
        self.parent = None

def insert(root, v):
    
    if v < root.value:
        if root.left == None:
            node = Node(v)
            node.parent = root
            root.left = node
                
        else:
            insert(root.left, v)
    elif root.value < v:
        if root.right == None:
            node = Node(v)
            node.parent = root
            root.right = node
                
        else:
            insert(root.right, v)

   
        
def pre_order(t):
    if t != None:
        print('',t.value, end='')
        pre_order(t.left)
        pre_order(t.right)


def in_order(t):
    if t != None:
        in_order(t.left)
        print('',t.value, end='')
        in_order(t.right)


N = int(input())
root = Node(None)#root作成
stdin = input().split()
if stdin[0] == 'insert':
    root = Node(int(stdin[1]))
for i in range(N-1):
    stdin = input().split()
    if stdin[0] == 'insert':
        
        insert(root,int(stdin[1]))
    elif stdin[0] == 'print':
        in_order(root)
        print()
        pre_order(root)
        print()
    elif stdin[0] == 'find':
        root.find(int(stdin[1]))

