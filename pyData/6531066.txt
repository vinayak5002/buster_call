import sys

# READ_FROM_FILE = True
READ_FROM_FILE = False


def dfs(adjacency_list, v, is_visited):
    for u in adjacency_list[v]:
        if not is_visited[u]:
            is_visited[u] = True
            dfs(adjacency_list, u, is_visited)
    return


def main():
    if READ_FROM_FILE:
        f = open('test0.txt', 'r')
    else:
        f = sys.stdin

    while True:
        m = int(f.readline())
        if m == 0:
            break

        n = int(f.readline())
        d_list = [0]
        for _ in range(n):
            d = int(f.readline())
            d_list.append(d)
        d_list.append(0)

        adjacency_list = [[] for _ in range(n + 2)]
        r_adjacency_list = [[] for _ in range(n + 2)]

        for i in range(n + 2):
            for j in range(1, m + 1):
                k = i + j
                k = min(k, n + 1)
                k += d_list[k]
                k = min(k, n + 1)
                k = max(k, 0)
                adjacency_list[i].append(k)
                r_adjacency_list[k].append(i)

        is_reachable = [False] * (n + 2)
        is_reachable[0] = True
        dfs(adjacency_list, 0, is_reachable)
        r_is_reachable = [False] * (n + 2)
        r_is_reachable[n + 1] = True
        dfs(r_adjacency_list, n + 1, r_is_reachable)

        for i in range(n + 2):
            if is_reachable[i] and not r_is_reachable[i]:
                print('NG')
                break
        else:
            print('OK')

    if READ_FROM_FILE:
        f.close()
    return


if __name__ == '__main__':
    main()

