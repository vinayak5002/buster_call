from bisect import *

d, n = map(int, input().split())
t = [0] * d
clothes = [[] for _ in range(d)]  # 日毎の服の派手さ
for i in range(d):
    t[i] = int(input())
sorted_t = sorted(t)

for _ in range(n):
    a, b, c = map(int, input().split())
    # a℃以上b℃以下の日を探す
    l = bisect_left(sorted_t, a)
    r = bisect_right(sorted_t, b)
    if l == r:
        continue
    # 見つかった日に派手さをセット
    for j in range(l, r):
        idx = t.index(sorted_t[j])
        clothes[idx].append(c)

dp = [[0] * d for _ in range(2)]  # 日毎に選んだ服
# 前日の服の派手さとの差が大きい方を追加する
for i in range(d):
    min_c = min(clothes[i])
    max_c = max(clothes[i])
    if i % 2 == 0:
        dp[0][i] = min_c
        dp[1][i] = max_c
    else:
        dp[0][i] = max_c
        dp[1][i] = min_c

# 服の派手さの合計を計算
x = y = 0
for i in range(d - 1):
    x += abs(dp[0][i] - dp[0][i + 1])
    y += abs(dp[1][i] - dp[1][i + 1])
print(max(x, y))

