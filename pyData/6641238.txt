def root(x):
    path_to_root = []
    while P[x] != x:
        path_to_root.append(x)
        x = P[x]
    for node in path_to_root:
        P[node] = x # パス圧縮
    return x
def is_same_set(x,y):
    return root(x) == root(y)
def unite(x,y):
    P[root(x)] = root(y)
ini=int(input())
P = [i for i in range(ini)]
A=[]
for j in range(ini):
    a=list(map(int,input().split()))
    A.append(a)
list_g=[]
for i in range(ini):
    for j in range(i+1,ini):
        if A[i][j]!=-1:
            list_g.append([A[i][j],i,j])
list_g.sort()
count=0
for p in list_g:
    if not is_same_set(p[1],p[2]):
        count+=p[0]
        unite(p[1],p[2])
print(count)
