import heapq
import math
import sys
import string
from collections import deque, Counter, defaultdict
from itertools import permutations, accumulate, groupby
from copy import deepcopy
from decimal import Decimal
# import numpy as np

# sys.setrecursionlimit(10 ** 7)
readline = sys.stdin.readline

ii = lambda : int(readline())
mi = lambda : map(int,readline().split())
li = lambda : list(map(int,readline().split()))

int1 = lambda x: int(x)-1

ii1 = lambda : int1(readline())
mi1 = lambda : map(int1,readline().split())
li1 = lambda : list(map(int1,readline().split()))

MOD = 10 ** 9 + 7
INF = 2 ** 63 - 1
# MOD = 998244353

# ------------------------------

while True:
    n=ii()
    if n==0:
        break
    else:
        t=[input().split() for _ in range(n)]
        s=[]
        e=[]
        for i in range(n):
            tmp=t[i][0]
            h=int(tmp[:2])
            m=int(tmp[3:5])
            se=int(tmp[6:8])
            s.append(h*3600+m*60+se)
            tmp=t[i][1]
            h=int(tmp[:2])
            m=int(tmp[3:5])
            se=int(tmp[6:8])
            e.append(h*3600+m*60+se)
        cnt=0
        t=[0]*86400
        for i in range(n):
            t[s[i]]+=1
            t[e[i]]-=1
        for i in range(86399):
            t[i+1]+=t[i]
        print(max(t))
