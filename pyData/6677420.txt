import math

n = int(input())        #整数nの入力
x_lst = list(map(int,input().split()))       #xの要素をリストに格納
y_lst = list(map(int,input().split()))       #yの要素をリストに格納

# print(x_lst, y_lst)

# math.pow(x, y)

#     x の y 乗を返します。例外的な場合については、 C99 標準の付録 'F' に可能な限り従います。特に、 pow(1.0, x) と pow(x, 0.0) は、たとえ x が零や NaN でも、常に 1.0 を返します。もし x と y の両方が有限の値で、 x が負、 y が整数でない場合、 pow(x, y) は未定義で、 ValueError を送出します。

#     組み込みの ** 演算子と違って、 math.pow() は両方の引数を float 型に変換します。正確な整数の冪乗を計算するには ** もしくは組み込みの pow() 関数を使ってください。



# 数値xの絶対値|x|

# は、冒頭にも述べたように

#     組み込み関数： abs(x)
#     mathモジュール： math.fabs(x)

