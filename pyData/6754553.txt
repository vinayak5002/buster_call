def insertion_sort(A, n, g):
    for i in range(g, n):
        v = A[i]
        j = i - g
        while j >= 0 and A[j] > v:
            A[j+g] = A[j]
            j = j - g
            global cnt
            cnt += 1
        A[j+g] = v

def shell_sort(A, n):
    G = []
    g = 1
    while True:
        if g > n:
            break
        G.append(g)
        g = g * 3 + 1

    for i in range(-1, -1 * len(G) - 1, -1):
        insertion_sort(A, n, G[i])

    return G

cnt = 0

n = int(input())
A = [int(input()) for _ in range(n)]

G = shell_sort(A, n)

if cnt > n ** 1.5:
    raise Exception('cnt is too big')

print(len(G))
print(' '.join(map(str, reversed(G))))
print(cnt)

for a in A:
    print(a)

