import sys
from math import inf
ioi = sys.stdin
# import io
# ioi = io.StringIO("""4 5
# 4 2
# 5 2
# 2 1
# 8 3
# """)
# ioi = io.StringIO("""2 20
# 5 9
# 4 10
# """)
rxs = lambda: map(int, ioi.readline().split())
N, W = rxs()
vw = [[*rxs()] for _ in range(N)]

# dp[n][v] = min(dp[n-1][v], dp[n-1][v-v[n]] + w[n])

V = sum(v for v, _ in vw)
dp = [[(inf if vv > v else w) for v, w in [vw[0]] for vv in range(V+1)]]
dp[0][0] = 0

for n in range(1, N):
    dp.append([0])
    v, w = vw[n]
    for vv in range(1, V+1):
        dp[n].append(min(
            dp[n-1][vv],
            *[(dp[n-1][vv-vvv] + w if vv >= vvv else w) for vvv in range(1, v+1)]
        ))

# from pprint import pprint
# pprint(dp)
print(max([v for n in range(N) for v, w in enumerate(dp[n]) if w <= W]))

