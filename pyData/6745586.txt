def Make_Tree(x):
    parent[x] = x
    rank[x] = 1


def Find_Root(x):
    if parent[x] != x:
        Find_Root(parent[x])
    return parent[x]



def Unite(x, y):
    root_x = Find_Root(x)
    root_y = Find_Root(y)
    # print(parent)
    # print(rank)
    # print()
    if rank[root_x] > rank[root_y]:
        parent[root_y] = root_x
        rank[root_x] += rank[root_y]
    else:
        parent[root_x] = root_y
        rank[root_y] += rank[root_x]


def Same(x, y):
    if Find_Root(x) == Find_Root(y):
        return 1
    else:
        return 0


# Main
n, q = list(map(int, input().split()))
parent = [-1]*n
rank = [0]*n

for i in range(n):
    Make_Tree(i)

for _ in range(q):
    query, x, y = list(map(int, input().split()))
    if query == 0:
        Unite(x, y)
    else:
        print(Same(x, y))

