import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from statistics import mean
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while True:
    N = ii()
    cnt = 0
    ans = 10**10
    if N == 0:
        break
    if N <= 3:
        print(N)
        continue
    for i in range(101):
        tmp = N
        cnt = 0
        for j in range(1001):
            if (tmp - i**3 - j**2) < 0:
                break
            cnt = i + j + (tmp - i**3 - j**2)
            if cnt < ans:
                ans = cnt
        if (tmp - i**3) < 0:
            break
    print(ans)

