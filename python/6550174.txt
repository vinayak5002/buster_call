from pprint import pprint
import sys
from itertools import product

def main(ioi):
    rxs = lambda: map(int, ioi.readline().split())
    N, = rxs()
    XYs = [[*rxs()] for _ in range(N)]
    X1s, Y1s, X2s, Y2s = zip(*XYs)
    ans = 0

    ss = sorted(set(X1s+X2s))
    ts = sorted(set(Y1s+Y2s))
    xs = {k:i for i, k in enumerate(ss)}
    ys = {k:i for i, k in enumerate(ts)}
    W, H = len(xs), len(ys)
    zss = [[0]*H for _ in range(W)]

    for x1, y1, x2, y2 in XYs:
        zss[xs[x1]][ys[y1]] += 1
        zss[xs[x1]][ys[y2]] -= 1
        zss[xs[x2]][ys[y1]] -= 1
        zss[xs[x2]][ys[y2]] += 1

    for y in range(H):
        for x in range(1, W):
            zss[x][y] += zss[x-1][y]

    for x in range(W):
        for y in range(1, H):
            zss[x][y] += zss[x][y-1]

    ans = 0
    for x, y in product(range(W-1), range(H-1)):
        if zss[x][y]:
            ans += (ss[x+1]-ss[x])*(ts[y+1]-ts[y])

    return ans

#print(main(sys.stdin))

import io
print(main(io.StringIO("""2
0 0 3 4
1 2 4 3
""")))

