def partition(A,p,r):
    x=A[r][1]
    i=p-1
    for j in range(p,r):
        #基準より小さかったら、iを一つ進めてA[i]とA[j]を交換
        if(A[j][1]<=x):
            i=i+1
            temp=A[i]
            A[i]=A[j]
            A[j]=temp
    temp=A[i+1]
    A[i+1]=A[r]
    A[r]=temp
    return i+1
N=int(input())
    
def quickSort(A,p,r):
    if p<r:
        q=partition(A,p,r)
        quickSort(A,p,q-1)
        quickSort(A,q+1,r)
    return A

def is_Stable(N, A):
    flag = True
    for i in range(N-1):
        if (A[i][1] == A[i + 1][1] and A[i][0] > A[i + 1][0]):
            flag=False
            break
    if(flag):
        return "Stable"
    else:
        return "Not Stable"
    
A=[]
for i in range(N):
    A.append(input().split())

for i in range(N):
    A[i][1]=int(A[i][1])

A=quickSort(A,0,N-1)
print(is_Stable(N,A))
for i in range(len(A)):
    print(A[i][0],A[i][1])
