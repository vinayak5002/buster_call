const { clear } = require('console');
const { kill } = require('process');

const input = 1 ? process.stdin : require('fs').createReadStream('./inp.txt')
const stdin = []
require('readline').createInterface({ input }).on('line', (line) => stdin.push(line)).on('close', () => main(stdin, process.stdout))
// 以下 main 内に処理を追加
function main(si, so) {
    let q = si[0];
    const Bit = 64;
    let nums = new Array(Bit).fill("0");
    let flags = new Flags(nums);
    for (let i = 0; i < q; i++) {
        const query = si[i + 1].split(" ");
        const order = Number(query[0]);
        const rightN = Number(query[1]);
        //console.log("now i = " + i)

        switch (order) {
            case 0:
                flags.test(rightN);
                break;
            case 1:
                flags.set(rightN);
                break;
            case 2:
                flags.clear(rightN);
                break;
            case 3:
                flags.flip(rightN);
                break;
            case 4:
                flags.all();
                break;
            case 5:
                flags.any();
                break;
            case 6:
                flags.none();
                break;
            case 7:
                flags.count();
                break;
            case 8:
                flags.val();
                break;
        }
    }
}

class Flags {
    constructor(array) {
    this.arr = array;
    }
    // 0 <= i <= 31
    test(i) {// 指定された箇所のフラグがONの場合, 1を返す. そうでない場合, 0を返す.
        if (this.arr[i] === "1") {
            console.log("1");
            return;
        }
        console.log("0");
    }

    set(i) {// 指定された箇所のフラグをONにする.
        this.arr[i] = "1";
    }

    clear(i) {// 指定された箇所のフラグをOFFにする.
        this.arr[i] = "0";
    }

    flip(i) {// 指定された箇所のフラグを逆転させる.
        this.arr[i] = String(Math.abs(this.arr[i] - 1));
    }

    all() {// 全てのフラグがONの場合, 1を出力する. そうでない場合は0を出力する.
        for (let judge of this.arr) {
            if (judge === "0") {
                console.log("0");
                return;
            }
        }
        console.log("1");
    }

    any() {// いずれかのフラグがONの場合, 1を出力する. そうでない場合は0を出力する.
        for (let judge of this.arr) {
            if (judge === "1") {
                console.log("1");
                return;
            }
        }
        console.log("0");
    }

    none() {// 全てのフラグがOFFの場合, 1を出力する. そうでない場合は0を出力する.
        for (let judge of this.arr) {
            if (judge === "1") {
                console.log("0");
                return;
            }
        }
        console.log("1");
    }

    count() {// ONのフラグの数を出力する.
        let count = 0;
        for (let judge of this.arr) {
            if (judge === "1") {
                count++;
            }
        }
        console.log(count);
    }

    val() {// 現在のフラグ管理状態を10進数で出力する.
        let bin = "";
        for (let i = this.arr.length - 1; i >= 0; i--) {// 左右反転
            bin += this.arr[i];
        }

        if (parseInt(bin, 2) < 10) {
            console.log(parseInt(bin, 2));
            return;
        }
        // 現時点で64bitで表したbinは, 数が大きい場合に小さい桁が丸められるため,
        // 別途計算して後で追加する.

        let lowNum_dec = 0;
        for (let i = 0; i < this.arr.length; i++) {
            if (this.arr[i] === "1"){
                let pow = 1;
                for (let j = 0; j < i; j++) {
                    pow *= 2
                    pow %= 100000;
                }
                lowNum_dec += pow;
            }
        }
        bin = parseInt(bin, 2);
        lowNum_dec = String(lowNum_dec).slice(-5);
        bin = String(bin).slice(0, -lowNum_dec.length);

        //console.log(bin);
        //console.log(lowNum_dec);
        console.log(bin + lowNum_dec)
    }
}
