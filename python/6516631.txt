   #include <bits/stdc++.h>
    using namespace std;
    #include <math.h>
    #include <iomanip>
    #include <cstdint>
    #include <string>
    #include <sstream>
    
    template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
    template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }
    #define rep(i,n) for (int i = 0; i < (n); ++i)

    typedef long long ll;
    typedef unsigned long long ull;
    using P=pair<ll,ll>;
    using tp=tuple<ll,ll,ll>;
    const int INF=1001001001;
    const ll INFL=1e18;
    const int mod=1e9+7;
    
    int left(vector<int>& a,int i){
        return i*2<a.size()?i*2:INF;
    }
    int right(vector<int>& a,int i){
        return i*2+1<a.size()?i*2+1:INF;
    }
    void maxHeapify(vector<int>& a,int i){
        int l=left(a,i),r=right(a,i),largest=i;
        if(l<a.size()&&a[l]>a[i]){largest=l;}
        if(r<a.size()&&a[r]>a[largest]){largest=r;}
        
        if(largest!=i){
            swap(a[i],a[largest]);
            maxHeapify(a,largest);
        }
    }
    void buildMaxHeap(vector<int>& a){
        int h=a.size();
        for(int i=h/2;i>=1;i--){
            maxHeapify(a,i);
        }
    }
    void solve(){
        int h;
        cin>>h;
        vector<int>a(h+1);
        for(int i=1;i<=h;i++)cin>>a[i];
        buildMaxHeap(a);
        for(int i=1;i<=h;i++){
            cout<<" "<<a[i];
        }
        cout<<endl;
    }

    int main(){
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        
        solve();
        
        return 0;
    }
