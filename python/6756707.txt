import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while True:
    N = ii()
    if N == 0:
        break
    ans = 0
    cnt = 0
    che_li = []
    for i in range(N):
        l = li()
        che_li.append(l[1:])
    rou_li = li()
    rou_li.pop(0)
    for i in range(N):
        flag = True
        for j in rou_li:
            if not j in che_li[i]:
                flag = False
                break
        if flag:
            cnt += 1
            idx = i+1
    if cnt >= 2 or cnt == 0:
        print(-1)
    else:
        print(idx)

