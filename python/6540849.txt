
_INPUT = """\
5
1 5 7 10 21
4
2 4 17 8
"""


def i_input(): return int(input())
def i_map(): return map(int, input().split())
def i_list(): return list(i_map())
def s_input(): return input()
def s_map(): return input().split()
def s_list(): return list(s_map())
def lcm(a, b): return a * b // gcd(a, b)  # 最小公倍数

#l = [[0 for i in range(3)] for j in range(2)]
#[[0, 0, 0], [0, 0, 0]]
#l[2][3] = 1


#start = time.time()
#elapsed_time = time.time() - start
#print("elapsed_time:{0}".format(elapsed_time) + "[sec]")

# Shift+alt+fでコード成形


INF = float('inf')
MOD = 10 ** 9 + 7
#start = time.time()

sys.stdin = io.StringIO(_INPUT)
##################################
##################################
n = i_input()
A = i_list()
q = i_input()
m = i_list()


def bit_all_serach(target, m, q):
    bool = False
    for i in range(2 ** q):
        sum = 0
        l = []
        #print("pattern {}: ".format(i), end="")
        for j in range(q):
            if ((i >> j) & 1):
                sum += m[j]
                l.append(m[j])
        if(sum == target):
            bool = True
            break
    if bool:
        return True


for i in range(0, q):
    if bit_all_serach(m[i], A, n):
        print("yes")
    else:
        print("no")
