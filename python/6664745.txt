//N
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
using namespace std;
#define ms(x, n) memset(x,n,sizeof(x));
typedef  long long LL;
const LL maxn = 42;
 
int n, tag = 0;
vector<int> pre, in, post;
void rec(int l, int r){
    if(l>=r) return;
    int c = pre[tag++];  //preOrder遍历的下一个节点
    int m = distance(in.begin(), find(in.begin(), in.end(), c)); //c在in中的位置
    rec(l,m);   //递归左子树
    rec(m+1, r);//递归右子树
 
    post.push_back(c);
}
int main()
{
    int input;
    cin >> n;
    for(int i = 1; i <= n; i++)
        cin >> input, pre.push_back(input);
    for(int i = 1; i <= n; i++)
        cin >> input, in.push_back(input);
 
    rec(0, pre.size());
    for(int i = 0; i < n; i++){
        if(i) cout<<" ";
        cout << post[i];
    }
    cout << endl;
 
	return 0;
}
 
 
