// // #define _GLIBCXX_DEBUG
// #include <bits/stdc++.h>
// //#include <atcoder/all>
// using namespace std;
// //using namespace atcoder;

// #define int long long
// #define all(x) (x).begin(), (x).end()
// #define rall(x) (x).rbegin(), (x).rend()
// #define rep(i, n) for (int i = 0; i < n; ++i)
// #define REP(i, n) for (int i = 0; i < n; ++i)
// #define range(i,a,b) ((a)<=(i) && (i)<(b))
// #define debug(x) cout << #x << " = " << (x) << endl;
// #define fs first
// #define sc second
// #define pb push_back
// #define eb emplace_back
// #define SP << " " <<

// typedef long long ll;
// typedef pair<int, int> P;
// typedef tuple<int, int, int> T;
// typedef vector<int> vec;
// typedef vector<P> pvec;
// typedef vector<vector<int>> vvec;
// typedef vector<vector<P>> pvvec;
// typedef priority_queue<int> PQI;
// typedef priority_queue<P> PQP;
// typedef priority_queue<int,vector<int>,greater<int>> PQIG;
// typedef priority_queue<P,vector<P>,greater<P>> PQPG;

// const vector<int> DX = {0, -1, 0, 1, 1, 1, -1, -1};
// const vector<int> DY = {1, 0, -1, 0, 1, -1, 1, -1};
// constexpr int MOD = (1000000007);
// // const int MOD = (998244353);
// // const int INF = (1 << 30); // 1073741824
// const ll INF = (1LL << 60); // 1152921504606846976
// const double PI = (3.141592653589794);
// const double EPS = (0.0000000001); // 10^(-10)

// template<class T> inline bool chmin(T& a, T b) {if (a > b) {a = b; return 1;} return 0;}
// template<class T> inline bool chmax(T& a, T b) {if (a < b) {a = b; return 1;} return 0;}
// template<class T> inline T ceil(T a, T b) {return T((a + b - 1) / b);}
// template<class T> inline T round(T a, T b) {return T(a / b);}
// template< typename T1, typename T2 > istream &operator>>(istream &is, pair< T1, T2 > &p) { is >> p.first >> p.second; return is; }
// template <class T> inline void out(T &a) { bool flag=true; for(auto&x:a){if(flag) {flag=false;} else{ cout << ' '; } cout<<x; } cout << endl; }



// //----------------------------------------------------------------
// int nmax=200000; // 2*(10^5)
// vvec G(nmax);



// vector<int> dp(2000000);
// vector<bool> pushed(2000000);


// int to_int(vec &memo){
//   int n = memo.size();
//   int res = 0;
//   int tmp = 1;
//   for(int i=0;i<n;i++){
//     res+= tmp * memo[i];
//     tmp *= 5;
//   }
//   return res;
// }

// void solve4ts()
// {
  
//   int n,m;
//   cin>>n>>m;
//   if(n==0) exit(0);
  
//   int win = n/2;
//   int num_cards = n*(n-1)/2;
//   vector<P> cards(num_cards);
//   for(int i=0;i<n;i++){
//     for(int j=i+1;j<n;j++){
//       cards.push_back(P(i,j));
//       // cout<<i<<" "<<j<<endl;
//     }
//   }

//   dp = vector<int>(2000000,0);
//   pushed = vector<bool>(2000000,false);
//   dp[0]=1;
  
//   queue<P> q;
//   q.push(P(0,0)); // (0,0,0)と次の試合番号
//   vector<int> memo(n);
//   while(!q.empty()){
//     int state=q.front().first;
//     int index_card=q.front().second;
//     q.pop();
//     for(int i=0;i<n;i++){
//       memo[i]=state%5;
//       state/=5;
//     }

//     P card = cards[index_card];
//     cout<<card.first<<" "<<card.second<<endl;
//     memo[card.first]++;
//     out(memo);
//     if(memo[card.first]<=win){
//       int new_state = to_int(memo);
//       dp[new_state] += dp[state];
//       if(!pushed[new_state]) q.push(P(new_state,index_card+1));
//       pushed[new_state]=true;
//     }
//     memo[card.first]--;

//     memo[card.second]++;
//     out(memo);
//     if(memo[card.second]<=win){
//       int new_state = to_int(memo);
//       dp[new_state] += dp[state];
//       if(!pushed[new_state]) q.push(P(new_state,index_card+1));
//       pushed[new_state]=true;
//     }
//     memo[card.second]--;
//   }

//   rep(i,30) cout<<dp[i]<<" ";

  
// }
// //-----------------------------------------------------------------

// signed main(){ ios::sync_with_stdio(false); cin.tie(0); cout << fixed << setprecision(15);
//   int repeat = 1;
//   // cin >> repeat;
//   while(repeat--) solve4ts();
// }

// /*

// g++ -std=c++1z code.cpp

// ./a.out

// python3 expander.py code.cpp

// */

// #define _GLIBCXX_DEBUG
#include <bits/stdc++.h>
//#include <atcoder/all>
using namespace std;
//using namespace atcoder;

#define int long long
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define rep(i, n) for (int i = 0; i < n; ++i)
#define REP(i, n) for (int i = 0; i < n; ++i)
#define range(i,a,b) ((a)<=(i) && (i)<(b))
#define debug(x) cout << #x << " = " << (x) << endl;
#define fs first
#define sc second
#define pb push_back
#define eb emplace_back
#define SP << " " <<

typedef long long ll;
typedef pair<int, int> P;
typedef tuple<int, int, int> T;
typedef vector<int> vec;
typedef vector<P> pvec;
typedef vector<vector<int>> vvec;
typedef vector<vector<P>> pvvec;
typedef priority_queue<int> PQI;
typedef priority_queue<P> PQP;
typedef priority_queue<int,vector<int>,greater<int>> PQIG;
typedef priority_queue<P,vector<P>,greater<P>> PQPG;

const vector<int> DX = {0, -1, 0, 1, 1, 1, -1, -1};
const vector<int> DY = {1, 0, -1, 0, 1, -1, 1, -1};
constexpr int MOD = (1000000007);
// const int MOD = (998244353);
// const int INF = (1 << 30); // 1073741824
const ll INF = (1LL << 60); // 1152921504606846976
const double PI = (3.141592653589794);
const double EPS = (0.0000000001); // 10^(-10)

template<class T> inline bool chmin(T& a, T b) {if (a > b) {a = b; return 1;} return 0;}
template<class T> inline bool chmax(T& a, T b) {if (a < b) {a = b; return 1;} return 0;}
template<class T> inline T ceil(T a, T b) {return T((a + b - 1) / b);}
template<class T> inline T round(T a, T b) {return T(a / b);}
template< typename T1, typename T2 > istream &operator>>(istream &is, pair< T1, T2 > &p) { is >> p.first >> p.second; return is; }
template <class T> inline void out(T &a) { bool flag=true; for(auto&x:a){if(flag) {flag=false;} else{ cout << ' '; } cout<<x; } cout << endl; }



//----------------------------------------------------------------
int nmax=200000; // 2*(10^5)
vvec G(nmax);





void solve4ts()
{
  
  
  int n,m;
  cin>>n>>m;
  if(n==0) exit(0);
  vector<int> a(n);
  rep(i,n) cin >> a[i];
  int ans=0;
  rep(i,n){
    for(int j=i+1;j<n;j++){
      if(a[i]+a[j]<=m){
        chmax(ans,a[i]+a[j]);
      }
    }
  }
  if(ans==0) cout<<"NONE"<<endl;
  else cout<<ans<<endl;
  
}
//-----------------------------------------------------------------

signed main(){ ios::sync_with_stdio(false); cin.tie(0); cout << fixed << setprecision(15);
  int repeat = INF;
  // cin >> repeat;
  while(repeat--) solve4ts();
}

/*

g++ -std=c++1z code.cpp

./a.out

python3 expander.py code.cpp

*/
