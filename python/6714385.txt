import sys
import math
from collections import defaultdict, deque

sys.setrecursionlimit(10 ** 6)
stdin = sys.stdin

INF = float('inf')

ni = lambda: int(ns())
na = lambda: list(map(int, stdin.readline().split()))
ns = lambda: stdin.readline().strip()

while True:
    def rec(l, r):
        if dp[l][r] != -1:
            return dp[l][r]
        if abs(r - l) <= 1:
            return 0
        res = 0
        if abs(A[l] - A[r - 1]) <= 1 and rec(l + 1, r - 1) == r - l - 2:
            res = r - l
        for mid in range(l + 1, r):
            res = max(res, rec(l, mid) + rec(mid, r))

        dp[l][r] = res
        return res

    N = ni()
    if N == 0:
        break
    A = na()
    dp = [[-1] * (N + 1) for _ in range(N + 1)]

    print(rec(0, N))
