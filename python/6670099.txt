import queue
import sys
import math
from collections import defaultdict, deque

sys.setrecursionlimit(10 ** 6)
stdin = sys.stdin

INF = float('inf')

ni = lambda: int(ns())
na = lambda: list(map(int, stdin.readline().split()))
ns = lambda: stdin.readline().strip()

def bfs():
    q = deque()
    q.append((0, 0))
    while q:
        v, cnt = q.pop()
        used[v] = cnt
        for to in G[v]:
            if used[to] != INF:
                continue
            q.append((to, cnt + 1))
N = ni()
G = [[] for _ in range(N)]
for _ in range(N):
    v, _, *A = na()
    for a in A:
        G[v - 1].append(a - 1)
used = [INF] * N
bfs()
for i in range(N):
    print(i + 1, used[i])
