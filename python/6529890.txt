import java.io.*;
import java.util.*;
import java.math.BigDecimal;
import java.lang.Object;
import java.util.function.*;

public class Main {
  public static void main(String[] args){
      int n,m,s=0,t,sum,ans=0,mx,mn,cnt;
      int[] a=new int[9],b=new int[8];
      char[] c=new char[9];
      String str;
      Scanner scanner =new Scanner(System.in);
      ArrayList<Integer>vec=new ArrayList<Integer>();
      n=Integer.parseInt(scanner.next());
      //m=Integer.parseInt(scanner.next());
      for(cnt=0;cnt<n;cnt++){
        ans=0;
        for(int i=0;i<9;i++)
        a[i]=Integer.parseInt(scanner.next());
        for(int i=0;i<9;i++){
        c[i]=scanner.next().charAt(0);
        //System.out.print(c[i]+" ");
        }
        int[] I=new int[3],J=new int[3],K =new int[3];
        for(I[0]=0;I[0]<9;I[0]++){
          for(I[1]=I[0]+1;I[1]<9;I[1]++){
            for(I[2]=I[1]+1;I[2]<9;I[2]++){
              for(J[0]=0;J[0]<9;J[0]++){
                if(J[0]==I[0]||J[0]==I[1]||J[0]==I[2])continue;
                for(J[1]=J[0]+1;J[1]<9;J[1]++){
                  if(J[1]==I[0]||J[1]==I[1]||J[1]==I[2])continue;
                  for(J[2]=J[1]+1;J[2]<9;J[2]++){
                    if(J[2]==I[0]||J[2]==I[1]||J[2]==I[2])continue;
                    boolean[] flag=new boolean[9];
                    int Knum=0;
                    for(int i=0;i<3;i++)flag[I[i]]=true;
                    for(int i=0;i<3;i++)flag[J[i]]=true;
                    for(int i=0;i<9;i++)if(flag[i]==false){
                      K[Knum]=i;
                      Knum++;
                    }
                    //System.out.println(I[0]+" "+I[1]+" "+I[2]+" "+J[0]+" "+J[1]+" "+J[2]+" ");
                    if(judge(c,a,I)&&judge(c,a,J)&&judge(c,a,K)){
                      ans=1;
                      //
                    }
                  }
                }
              }     
            }
          }
        }
        System.out.println(ans);
      }
  }
  static boolean judge(char[] c,int[] n,int[] id){
    for(int i=0;i<2;i++)if(c[id[i]]!=c[id[i+1]])return false;
    int[] lis=new int[3];
    for(int i=0;i<3;i++)lis[i]=n[id[i]];
    Arrays.sort(lis);
    if(lis[0]==lis[1]&&lis[1]==lis[2])return true;
    if(lis[0]+1==lis[1]&&lis[1]+1==lis[2]){
      //System.out.println(lis[0]+" "+lis[1]+" "+lis[2]);
      return true;
    }
    return false;
  }
  public interface Compare<T>{
	  public boolean func(T x,T y);
  }
  static String swap(String str, int i, int j){
      char ch[] = str.toCharArray();
      char tempo = ch[i];
      ch[i] = ch[j];
      ch[j] = tempo;
      return new String(ch);
  }
}   
class Pair<T,E>{
    T first;
    E second;
    public Pair(T a,E b){
      first=a;
      second=b;
    }
    public Pair(Pair<T,E>x){
      first=x.first;
      second=x.second;
    }
    public Pair(){}
    void print(){
      System.out.println("first:"+first+" second:"+second);
    }
  }
  
