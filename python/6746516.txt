fn main() {
    loop {
        let data: Vec<i32> = read_vec();
        if data[0] == -1 && data[1] == -1 && data[2] == -1 {
            break;
        }
        match (data[0], data[1], data[2], data[0] + data[1]) {
            (-1, _, _, _) => println!("F"),
            (_, -1, _, _) => println!("F"),
            (_, _, _, 80..=100) => println!("A"),
            (_, _, _, 65..=79) => println!("B"),
            (_, _, _, 50..=64) => println!("C"),
            (_, _, 50..=100, 30..=49) => println!("C"),
            (_, _, _, 30..=49) => println!("D"),
            (_, _, _, 0..=29) => println!("F"),
            (_, _, _, _) => (),
        }
    }
}

fn read<T: std::str::FromStr>() -> T {
    let mut s = String::new();
    std::io::stdin().read_line(&mut s).ok().unwrap();
    s.trim().parse().ok().unwrap()
}

fn read_vec<T: std::str::FromStr>() -> Vec<T> {
    read::<String>()
        .split_whitespace()
        .map(|e| e.parse().ok().unwrap())
        .collect()
}

