import java.util.*;
import java.io.*;

public class Main {
    
    public static Scanner sc = new Scanner(System.in);
    public static PrintWriter pw = new PrintWriter(System.out);
    
    public static void main(String[] args) {
        
        solve();
        pw.flush();
        
    }
    
    static void solve() {
        
        long N = sc.nextLong();
        int M = sc.nextInt();
        long[] a = new long[M+1];
        long[] b = new long[M+1];
        long ans = 0;
        long sum = 0;
        boolean exit = false;
        boolean frag = false;
        
        a[0] = 0;
        b[0] = 0;
        for( int i = 1; i <= M; i++ ) {
            a[i] = sc.nextLong();
            b[i] = sc.nextLong();
        }
        
        for( int i = 0; i < M && !exit; i++ ) {
            long dist = a[i+1]-a[i];
            long diff = b[i+1]-b[i];
            long x = dist*(2*b[i]+(dist-1))/2;
            ans = Math.max(ans, sum+x);
            if( Math.abs(diff) > dist ) {
                exit = true;
            }else {
                if( i == M-1 ) frag = true;
                long[] c = new long[3];
                c[0] = calcCost(b[i], b[i+1]+1, dist);
                c[1] = calcCost(b[i], b[i+1], dist);
                c[2] = calcCost(b[i], b[i+1]-1, dist);
                long mxc = Math.max(c[0], Math.max(c[1], c[2]));
                ans = Math.max(ans, sum+mxc);
                sum += mxc;
            }
            // pw.println("ans = "+ans);
            // pw.println("----");
        }
        
        if( frag ) {
            long dist = N-a[M]+1;
            long x = dist*(2*b[M]+(dist-1))/2;
            ans = Math.max(ans, sum+x);
        }
        
        pw.println(ans);
        
    }
    
    static long calcCost(long cs, long ce, long dist) {
        
        if( Math.abs(ce-cs) >= dist || ce < 0 ) return 0;
        
        long mid = (dist+ce+cs-1)/2;
        long f = Math.abs(mid-cs)+1;
        long g = Math.abs(mid-ce)+1;
        long cost1 = f*(cs+mid)/2;
        long cost2 = g*(ce+mid)/2;
        
        // pw.println(cs+" "+ce+" "+dist+" "+mid);
        // pw.println(cost1+" "+cost2);
        
        if( f+g == dist ) return cost1+cost2;
        else return cost1+cost2-mid;
        
    }
    
}
