// https://qiita.com/DaikiSuyama/items/9dba963ba74396b9b7fd
// https://luling.hatenablog.com/entry/2018/12/01/212805
// https://zenn.dev/antyuntyun/articles/atcoder-cpp-template
//
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

// rep macro
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); ++i)
#define rep(i, n) reps(i, 0, n)
#define rrep(i, n) reps(i, 1, n + 1)
#define repd(i,n) for(ll i=n-1;i>=0;i--)
#define rrepd(i,n) for(ll i=n;i>=1;i--)

#define optimize_cin() cin.tie(0); ios::sync_with_stdio(false)

#define pb push_back
#define mp make_pair
#define all(obj) (obj).begin(), (obj).end()
#define YESNO(bool) if(bool){cout<<"YES"<<endl;}else{cout<<"NO"<<endl;}
#define yesno(bool) if(bool){cout<<"yes"<<endl;}else{cout<<"no"<<endl;}
#define YesNo(bool) if(bool){cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

//定数
#define INF32 2147483647           // 2.147483647 x 10^{9}:32bit整数のinf
#define INF64 9223372036854775807  // 9.22337203685477580 x 10^{18}:64bit整数のinf
#define MOD 1000000007             //問題による

//略記
#define F first
#define S second

//出力(空白区切りで昇順に)
#define dump(x)                                                 \
  for (auto i = x.begin(); i != --x.end(); i++) cout << *i << " "; \
  cout << *--x.end() << endl;
#define echo(x) cout << x << endl;

// aをbで割る時の繰上げ,繰り下げ
ll _ceil(ll a, ll b) { return (a + (b - 1)) / b; }
ll _floor(ll a, ll b) { return a / b; }

// 大きい方、小さい方を残す
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

template <typename T>
void _dumpStack(stack<T> st) {
  while (!st.empty()) {
    cout << st.top();
    st.pop();
  }
  cout << endl;
}

int _calcCapacity(stack<char> &st) {
  int capacity = 0;
  bool isFound = false;
  while (!st.empty()) {
    char cc = st.top();
    if (cc == '\\') {
      capacity++;
      st.pop();
      isFound = true;
      break;
    } else if (cc == '_') {
      capacity++;
      st.pop();
    } else {
      echo("ERROR : programming error.");
    }
  }
  rep(i, capacity) st.push('_');
  return isFound ? capacity : 0;
}

signed main() {
  string ss;
  cin >> ss;
  //
  stack <char>st;
  vector<pair<int, int>> candidates;
  stack<int> indexStack;
  int index = 0;
  for (char ch : ss) {
    if (ch == '\\') {
      st.push(ch);
      indexStack.push(index);
    } else if (ch == '/') {
      int capacity = _calcCapacity(st);
      st.push('_');
      if (capacity != 0) {
        candidates.push_back(mp(indexStack.top(), capacity));
        indexStack.pop();
      }
    } else if (ch == '_') {
      st.push(ch);
    }
    index++;
  }
  //for (auto ps : candidates) {
  //  cout << ps.first << " " << ps.second << endl;
  //}
  int baseIndex = 0;
  vector<int> areas;
  int maxSize = candidates.size();
  while (baseIndex < maxSize) {
    auto base = candidates[baseIndex];
    int foundIndex = -1;
    for (int i = baseIndex + 1; i < candidates.size(); i++) {
      auto ps = candidates[i];
      if (base.first > ps.first) {
        foundIndex = i;
      }
    }
    if (foundIndex == -1) {
      areas.push_back(base.second);
      baseIndex++;
    } else {
      int newIndex = candidates[foundIndex].first;
      int newCapacity = 0;
      for (int i = baseIndex; i <= foundIndex; i++) {
          newCapacity += candidates[i].second;
      }
      areas.push_back(newCapacity);
      baseIndex = foundIndex + 1;
    }
  }
  int total = 0;
  for (auto area : areas) {
    total += area;
  }
  echo(total);
  cout << areas.size();
  for (int i = 0; i< areas.size(); i++) {
    cout << " " << areas[i];
  }
  cout << endl;
}

