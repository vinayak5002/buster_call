import itertools
import copy
def wid(box, x, y):
    if box[x][y] == 2:
        return box
    # 縦と横方向を潰す
    for i in range(8):
        
        # 同一線上にあれば条件を満たさ無いので戻り値を返す
        if box[i][y] == 2 or box[x][i] == 2:
            return None
        box[i][y] = 1
        box[x][i] = 1
    
    # 斜めを潰す
    dx = [1,-1,1,-1]
    dy = [-1,-1,1,1]
    for i in range(4):
        for j in range(8):
            xx = dx[i]*j + x
            yy = dy[i]*j + y
            
            # 配列外参照をした際にループから抜ける
            if xx < 0 or yy < 0 or xx > 7 or yy > 7:
                break
            # 同一線上にあれば条件を満たさ無いので戻り値を返す
            if box[xx][yy] == 2:
                return None
            box[xx][yy] = 1
    box[x][y] = 2
    return box
n = int(input())
base = [[0] * 8 for _ in range(8)]
dx = 1
for i in range(2):
    a,b = map(int,input().split())
    
    wid(base,a,b)

l = [i for i in range(8)]
c = list(itertools.permutations(l, 8))
ans = []
for i in range(len(c)):
    con = copy.deepcopy(base)
    flag = True
    for j in range(8):
        con = wid(con, j, c[i][j])
        # 条件を満たさ無い
        if con is None:
            flag = False
            break
    if flag ==  False:
        continue
    # 回答を作成する
    ans = [["."] * 8 for _ in range(8)]
    for j in range(8):
        ans[j][c[i][j]] = "Q"
    break
for i in range(8):
    print("".join(ans[i]))
