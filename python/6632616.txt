
def insertion_sort(A, n, g):
    cnt = 0
    for i in range(g, n):
        v = A[i]
        j = i - g
        while j >= 0 and A[j] > v:
            A[j + g] = A[j]
            j -= g
            cnt += 1
        A[j+g] = v
    return cnt
def print_list(li):
    li_str = [str(i) for i in li]
    print(' '.join(li_str))

def make_G(n):
    G = []
    k = 0
    while True:
        a = 3*k + 1
        if n < a:
            break
        G.append(a)
        k += 1
    
    return G[::-1]


def shell_sort(A, n):
    cnt = 0
    # G = [n for n in range(1, n+1, 2)]
    # G = G[::-1]
    G = make_G(n)
    m = len(G)
    print(m)
    print_list(G)
    for i in range(m):
        cnt += insertion_sort(A, n, G[i])
    print(cnt)
    for A_i in A:
        print(A_i)

def main():
    n = int(input())
    A = []
    for i in range(n):
        A.append(int(input()))
    shell_sort(A, n)
    
# g = make_G(100)
# print(g)
main()

