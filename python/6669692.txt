// ALDS1_1_A
#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

struct Fast {
  Fast() {
    std::cin.tie(0);
    ios::sync_with_stdio(false);
  }
} fast;

void pv(const vector<int> &vec) {
  for (int i = 0; i < vec.size() - 1; i++) {
    cout << vec[i] << " ";
  }
  cout << vec.back();
}

int main() {
  int N;
  cin >> N;
  vector<int> ary(N);
  for (int i = 0; i < N; i++) {
    cin >> ary[i];
  }

  for (int i = 1; i < N; i++) {
    if (i != 0) {
      cout << endl;
    }
    const int v = ary[i];
    int j = i - 1;
    while ((j >= 0) && (ary[j] > v)) {
      ary[j + 1] = ary[j];
      j--;
    }
    ary[j + 1] = v;
    pv(ary);
  }

  return 0;
}

