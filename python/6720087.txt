graph = []	# directed graph
cycle = 0	# cycle existence flag
visited = []	# list of visited nodes

def init():
	str = input().rstrip().split(' ')
	v = int(str[0])
	e = int(str[1])
	for i in range(v):
		graph.append([])
		visited.append(0)
	for i in range(e):
		str = input().rstrip().split(' ')
		s = int(str[0])
		t = int(str[1])
		graph[s].append(t)

def checkCycle():
	global cycle
	for i in range(len(graph)):
		if visited[i]==2:
			continue
		dfs(i)
		if cycle==1:
			break
	print(cycle)

def dfs(node):
	global cycle
	if cycle==1:
		return

	visited[node] = 1
	for i in range(len(graph[node])):
		next_node = graph[node][i]
		if visited[next_node]==2:
			continue

		if visited[next_node]==1:
			cycle = 1
			return
		dfs(next_node)

	visited[node] = 2

init()
checkCycle()
