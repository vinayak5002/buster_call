import java.util.Scanner;
import java.util.Arrays;

class Main{

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

		int[][] diceNumbers = new int[n][6];


    	for(int i = 0;i < n;i++) {
    	    for(int j = 0;j < 6;j++){
			    diceNumbers[i][j] = sc.nextInt();
    	    }
		}
        for(int k=0;k < n-1;k++){
            for(int j =k+1;j < n;j++){
	        	for(int i = 0;i < 6;i++) {
		         	if(i <= 3 && 1 <= i)
	    		        diceNumbers[j] = northRoll(diceNumbers[j]);
	            	else if(i == 4)
	    	    		diceNumbers[j] = eastRoll(diceNumbers[j]);
	            	else if(i == 5) {
	    	    		diceNumbers[j] = eastRoll(diceNumbers[j]);
		        		diceNumbers[j] = eastRoll(diceNumbers[j]);
		        	}
	    	    	for(int l = 0;l < 4;l++) {
		        		if(Arrays.equals(diceNumbers[k], diceNumbers[j])) {
			         		System.out.println("No");
				        	System.exit(0);
		    	    	}
		    	    	if(l == 0){
		    		        diceNumbers[k] = southRoll(diceNumbers[k]);
		    	    	    diceNumbers[j] = southRoll(diceNumbers[j]);
		    		        diceNumbers[j] = eastRoll(diceNumbers[j]);
		    		    }else if(l >=1 && l <=2){
		    		        diceNumbers[j] = eastRoll(diceNumbers[j]);
		    		    }else{
		    		        diceNumbers[j] = eastRoll(diceNumbers[j]);
		    		        diceNumbers[k] = southRoll(diceNumbers[k]);
		    		        diceNumbers[j] = southRoll(diceNumbers[j]);
		    	    	}
			    	
	        	    }
	        	}
            }
        }
		
		System.out.println("Yes");

		sc.close();
	}


public static int[] northRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[1];
		diceNumbers[1] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[4];
		diceNumbers[4] = upperNumber;
		
		return diceNumbers;
	}
	
	public static int[] southRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[4];
		diceNumbers[4] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[1];
		diceNumbers[1] = upperNumber;
		
		return diceNumbers;
	}

	public static int[] eastRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[3];
		diceNumbers[3] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[2];
		diceNumbers[2] = upperNumber;
		
		return diceNumbers;
	}

	public static int[] westRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[2];
		diceNumbers[2] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[3];
		diceNumbers[3] = upperNumber;
		
		return diceNumbers;
	}
}
