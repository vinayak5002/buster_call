"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const fiboCache = new Map();
const fibonacchiWithMemo = (n) => {
    if (n === 0 || n === 1) {
        fiboCache.set(n, 1);
    }
    const cache = fiboCache.get(n);
    if (cache) {
        return cache;
    }
    const result = fibonacchiWithMemo(n - 2) + fibonacchiWithMemo(n - 1);
    fiboCache.set(n, result);
    return result;
};
const input = fs.readFileSync('/dev/stdin', 'utf8');
const lines = input.trim().split('\n');
const n = parseInt(lines[0], 10);
console.log(fibonacchiWithMemo(n));

