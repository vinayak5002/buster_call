INF = (-1, 2**31 - 1)
n, q = map(int, input().split())
N = 2
while N < 2*n :
    N *= 2
a = [INF for _ in range(0, 2 * N - 1)]

def find(i, k, l, r):
    z = a[0]
    while True:
        m = (l + r) // 2
        if i < m:
            k = k * 2 + 1
            r = m
        if i >= m:
            k = k * 2 + 2
            l = m
        z = max(z, a[k])
        if k >= N - 1:
            break
    return z[1]

def update(s, t, x, k, l, r):
    if r <= s or t <= l:
        return
    if s <= l and r <= t:
        a[k] = x
        return
    else:
        m = (l + r) // 2
        update(s, t, x, k * 2 + 1, l, m)
        update(s, t, x, k * 2 + 2, m, r)
        return

for t in range(0, q):
    q = tuple(map(int, input().split()))
    if q[0] == 0:
        update(q[1], q[2]+1, (t, q[3]), 0, 0, N)
    elif q[0] == 1:
        print(find(q[1], 0, 0, N))
