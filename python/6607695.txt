def merge(L, R):
    global cnt
    merged = []
    l, r = 0, 0
    while l<len(L) and r<len(R):
        if L[l] <= R[r]:
            cnt += 1
            merged.append(L[l])
            l += 1
        else:
            cnt += 1
            merged.append(R[r])
            r += 1
    if l < len(L): 
        cnt += len(L[l:])
        merged += L[l:]
    if r < len(R): 
        cnt += len(R[r:])
        merged += R[r:]
    return merged

def func(arr, left, right):
    if right == left: return arr[left:left+1]
    mid = (left+right)//2
    L = func(arr, left, mid)
    R = func(arr, mid+1, right)
    return merge(L, R)

n = int(input())
S = list(map(int, input().split()))
cnt = 0
print(*(func(S, 0, len(S)-1)))
print(cnt)
