/*
    2022-05-22
    完全二叉树
*/

#include <iostream>
#include <cstdio>
using namespace std;
const int maxn = 100010;
int A[maxn];

int parent(int x) {
    return x / 2;
}

int left(int x) {
    return x << 1;
}

int right(int x) {
    return (x << 1) + 1;
}

int main() {
    // ios::sync_with_stdio(false);
    // cin.tie(0);

    int H; scanf("%d", &H);
    for (int i = 1; i <= H; ++i) scanf("%d", A + i);
    
    for (int i = 1; i <= H; ++i) {
        printf("node %d: key = %d, ", i, A[i]);
        if (parent(i) >= 1) printf("parent key = %d, ", A[parent(i)]);
        if (left(i) <= H) printf("left key = %d, ", A[left(i)]);
        if (right(i) <= H) printf("right key = %d, ", A[right(i)]);
        printf("\n");
    }
    return 0;
}
