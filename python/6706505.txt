import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
	public static void main(String arg[]) {
		Main main = new Main();
		main.Run();
	}
	
	public void Run() {
		
		Scanner scan = new Scanner(System.in);
		
		int N = scan.nextInt();
		
		int[] a = new int[N];
		
		a[0] = scan.nextInt();
		Map<Integer,Integer> map = new HashMap<Integer,Integer>();
		
		for(int i = 1;i < N;i++) {
			a[i] = scan.nextInt();
			if(a[i - 1] > a[i]) {
				map.put(i, i);
			}
		}
		
		int Q = scan.nextInt();
		
		int Ans = 0;
		
		boolean judge = false;
		
		if(map.size() == 0) {
			judge = true;
			System.out.println(Ans);
		}
		
		while(Q-- != 0 && !judge) {
			int x = scan.nextInt() - 1;
			int y = scan.nextInt() - 1;
			
			int tmp = a[x];
			a[x] = a[y];
			a[y] = tmp;
			
			Ans++;
			
			Integer X = Math.min(x,y);
			Integer Y = Math.max(x,y);
			
			if(N == 2) {
				
				if(a[0] <= a[1] && map.containsKey(1)) {
					map.remove(1);
				}
				if(a[0] > a[1] && !map.containsKey(1)) {
					map.put(1,1);
				}
				
			}else {
				if(X == 0) {
					X++;
				}
				
				if(a[X - 1] <= a[X] && map.containsKey(X)) {
					map.remove(X);
				}
				if(a[X - 1] > a[X] && !map.containsKey(X)) {
					map.put(X,X);
				}
				
				if(a[X] <= a[X + 1] && map.containsKey(X + 1)) {
					map.remove(X + 1);
				}
				if(a[X] > a[X + 1] && !map.containsKey(X + 1)) {
					map.put(X + 1,X + 1);
				}
				
				if(Y == N - 1) {
					Y--;
				}
				
				if(a[Y - 1] <= a[Y] && map.containsKey(Y)) {
					map.remove(Y);
				}
				if(a[Y - 1] > a[Y] && !map.containsKey(Y)) {
					map.put(Y , Y);
				}
				
				if(a[Y] <= a[Y + 1] && map.containsKey(Y + 1)) {
					map.remove(Y + 1);
				}
				if(a[Y] > a[Y + 1] && !map.containsKey(Y + 1)) {
					map.put(Y + 1,Y + 1);
				}
			}
			
			if(map.size() == 0) {
				judge = true;
				System.out.println(Ans);
			}
		}
		
		if(!judge) {
			System.out.println(-1);
		}
		
		scan.close();
	}
}
