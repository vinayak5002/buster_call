import sys

# READ_FROM_FILE = True
READ_FROM_FILE = False


def main():
    if READ_FROM_FILE:
        f = open('test0.txt', 'r')
    else:
        f = sys.stdin

    h, w, s = map(int, f.readline().split())
    image = []
    for _ in range(h):
        image.append([i - 1 for i in list(map(int, f.readline().split()))])

    if s >= h * w:
        print(0)
    else:
        num_pixel_values = 256
        pixel_hist = [[0, w - 1, 0, h - 1, 0] for _ in range(num_pixel_values)]
        for y in range(h):
            for x in range(w):
                pixel_value = image[y][x]
                c_bin = pixel_hist[pixel_value]
                c_bin[0] += 1
                c_bin[1] = min(c_bin[1], x)
                c_bin[2] = max(c_bin[2], x)
                c_bin[3] = min(c_bin[3], y)
                c_bin[4] = max(c_bin[4], y)

        num_pixel_values = sum(1 for c_bin in pixel_hist if c_bin[0] > 0)

        candidate_bin_list = [b for b in pixel_hist if 0 < b[0] <= s and b[2] - b[1] <= s and b[4] - b[3] <= s]
        if len(candidate_bin_list) == 0:
            print(num_pixel_values)
        else:
            min_x = min(min_x for _, min_x, _, _, _ in candidate_bin_list)
            max_x = max(max_x for _, _, max_x, _, _ in candidate_bin_list) + 1
            min_y = min(min_y for _, _, _, min_y, _ in candidate_bin_list)
            max_y = max(max_y for _, _, _, _, max_y in candidate_bin_list) + 1
            max_hh = max(2, min(h + 1, s + 1))
            min_hh = min(max(1, s // w), max_hh - 1)
            max_ww = min(w, s)
            max_num_removed_pixel_values = 0
            for hh in range(min_hh, max_hh):
                if max_num_removed_pixel_values == num_pixel_values - 1:
                    break

                c_max_y = max(min_y + 1, max_y - hh)
                for ww in range(max_ww, 0, -1):
                    if ww * hh > s:
                        continue

                    if max_num_removed_pixel_values == num_pixel_values - 1:
                        break

                    c_max_x = max(min_x + 1, max_x - ww)
                    for by in range(min_y, c_max_y):
                        ey = by + hh - 1

                        if max_num_removed_pixel_values == num_pixel_values - 1:
                            break

                        for bx in range(min_x, c_max_x):
                            ex = bx + ww - 1

                            num_removed_pixel_values = 0
                            for c_bin in candidate_bin_list:
                                b_min_x = c_bin[1]
                                b_max_x = c_bin[2]
                                b_min_y = c_bin[3]
                                b_max_y = c_bin[4]

                                if bx <= b_min_x and b_max_x <= ex and by <= b_min_y and b_max_y <= ey:
                                    num_removed_pixel_values += 1

                            max_num_removed_pixel_values = max(max_num_removed_pixel_values, num_removed_pixel_values)

                            # for yy in range(h):
                            #     for xx in range(w):
                            #         if not (x <= xx <= ex and y <= yy <= ey):
                            #             print('.', end='')
                            #         else:
                            #             print('*', end='')
                            #     print()
                            # print()

                    break

            print(num_pixel_values - max_num_removed_pixel_values)

    if READ_FROM_FILE:
        f.close()
    return


if __name__ == '__main__':
    main()

