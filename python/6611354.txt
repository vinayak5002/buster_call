import sys
input = lambda: sys.stdin.readline().rstrip()
import math
from heapq import heapify, heappush, heappop
from bisect import bisect_right, bisect_left
from itertools import *
from collections import *
inf = float('inf')
def error(*args, end='\n'):
  print(*args, end=end, file=sys.stderr)
# sys.setrecursionlimit(10**6)

###############

def main(data):
  t, d, l = data
  X = [int(input()) for _ in range(t)]
  now = 0 
  ans = 0
  for x in X[:-1]:
    if x >= l:
      now = d
    if now:
      ans += 1
    now -= 1
    if now < 0:
      now = 0
  if now:
    ans += 1
  return ans


RES = list()
while True:
  data = list(map(int, input().split()))
  if data == [0, 0, 0]:
    break
  RES.append(main(data))
for ans in RES:
  print(ans)

