import java.util.ArrayList;
import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int v = sc.nextInt();
		int e = sc.nextInt();
		int r = sc.nextInt();
		int dist[][] = new int[v][v];
		System.out.println();
		ArrayList<ArrayList<Integer>> rel = new ArrayList<ArrayList<Integer>>();
		for (int i = 0; i < v; i++) rel.add(new ArrayList<Integer>());
		for (int i = 0; i < e; i++) {
			int s = sc.nextInt();
			int t = sc.nextInt();
			int d = sc.nextInt();
			dist[s][t] = d;
			rel.get(s).add(t);
		}
		
		int distToR[] = new int[v];
		Arrays.fill(distToR, Integer.MAX_VALUE);
		distToR[r] = 0;
		boolean[] looked = new boolean[v];
		Arrays.fill(looked, true);
		looked[r] = false;
		PriorityQueue<Integer> queue = new PriorityQueue<>();
		queue.add(r);
		while (!queue.isEmpty()) {
			int now = queue.poll();
			for (Integer i : rel.get(now)) {
				if (looked[i]) {
					queue.add(i);
					distToR[i] = distToR[now] + dist[now][i];
					looked[i] = false;
				}
			}
		}
		for (int i : distToR) System.out.println(i == Integer.MAX_VALUE ? "INF" : i);
	}

}

