def dfs(current, before):
    # print(isPassed);
    isPassed[current] = True
    for i in range(len(graph[current])):
        if graph[current][i] == before:
            continue
        if isPassed[graph[current][i]]:
            return True

        # print(graph[current][i])
        dfs(graph[current][i], current)

    return False


s, t = map(int, input().split())
graph = [[] for _ in range(t)]
for i in range(t):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

print(graph)
isPassed = [False] * t
hasLoop = dfs(0, -1)
if hasLoop is True:
    print('0')
else:
    print('1')

