n = int(input())
A = list(map(int, input().split()))
q = int(input())
Stack = []
P = [i for i in range(n)]

def swap(P, k):
    i = 0
    RES = [i for i in range(n)]
    while k:
        if (k >> i) & 1:
            RES = [P[j] for j in RES]
            k ^= 1 << i
        P = [P[P[j]] for j in range(n)]
        i += 1
    return RES

for _ in range(q):
    L = list(map(int, input().split()))
    if L[0] == 1:
        Stack.append((L[1] - 1, L[2] - 1))
        P[L[1] - 1], P[L[2] - 1] = P[L[2] - 1], P[L[1] - 1]
    elif L[0] == 2:
        x, y = Stack.pop()
        A[x], A[y] = A[y], A[x]
    elif L[0] == 3:
        k = L[1]
        RES = swap(P, k)
        A = [A[i] for i in RES]
print(*A)

