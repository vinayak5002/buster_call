/*  Yixian-Wu 110033203 PME */

#include <stdio.h>
#include <stdlib.h>

typedef struct N N;
typedef struct R R;
struct N{
    long long int times;
    long long int calories;
};
struct R{
    long long int a;
    long long int b;
    long long int c;
};

int main(){
    int n, r, i, j;
    while(scanf("%d %d", &n, &r) != EOF){
        N *equip;
        R *rule;
        equip = malloc(n * sizeof(N));
        rule = malloc(r * sizeof(R));
        for(i=0;i<n;i++){
            scanf("%lld %lld", &equip[i].times, &equip[i].calories);
        }
        for(i=0;i<r;i++){
            scanf("%lld %lld %lld", &rule[i].a, &rule[i].b, &rule[i].c);
        }
        for(i=0;i<r;i++){
            long long int x = equip[rule[i].b - 1].times + rule[i].c;
            if(equip[rule[i].a - 1].times >= x){
                equip[rule[i].a - 1].times = x-1;
                for(j=0;j<i;j++){
                    long long int y = equip[rule[j].b - 1].times + rule[j].c;
                    if((rule[i].a == rule[j].b) && (equip[rule[j].a - 1].times >= y)){
                        equip[rule[j].a - 1].times = y-1;
                        i = j-1;
                    }
                }
            }
        }
        for(i=0;i<r;i++){
            long long int x = equip[rule[i].b - 1].times + rule[i].c;
            if(equip[rule[i].a - 1].times >= x){
                equip[rule[i].a - 1].times = x-1;
                for(j=0;j<i;j++){
                    long long int y = equip[rule[j].b - 1].times + rule[j].c;
                    if((rule[i].a == rule[j].b) && (equip[rule[j].a - 1].times >= y)){
                        equip[rule[j].a - 1].times = y-1;
                        i = j-1;
                    }
                }
            }
        }
        long long int max = 0;
        for(i=0;i<n;i++){
            max += equip[i].times * equip[i].calories;
        }
        printf("%lld\n", max);
        
        free(equip);
        free(rule);
    }
    return 0;
}

