/*
流れ
1. 隣接行列の生成
2. 双方向のリンクがある場合についてのDFS
*/

/**
*    created by: shosei
*    2022.05.20. 14:42:10
**/
#include <stdio.h>
#include<stdlib.h>
#define rep(i, n) for (int i = 0; i < (n); i++)
#define pra(ans) printf("%d\n", ans);

int A[100][100];
int *visited;

int is_reachable(int s, int t, int n){
  int j;
  visited[s] = 1;
  if(s == t) return 1; //到達可能

  for(j = 0; j<n; j++){
    if(!visited[j] && A[s][j] && A[j][s]){
      if(is_reachable(j, t, n)) return 1;
    }
  }
  return 0;
}

int main()
{
  int i,j;
  int n,m;
  int s, t, q;
  scanf("%d %d", &n, &m);

  // init, input
  visited = (int *)malloc(sizeof(int) * n);
  for (i = 0; i < n; i++){
    visited[i]=0;
    for (j = 0; j < n; j++) A[i][j] = 0;
  }
  for(int i = 0; i<m; i++){
    scanf("%d %d", &s, &t);
    A[s][t] = A[t][s] = 1;
  }

  //実態
  scanf("%d", &q);
  for(int i = 0; i<q; i++){
    scanf("%d %d", &s, &t);
    if(is_reachable(s,t,n))
      printf("yes\n");
    else
      printf("no\n");
  }

  return 0;
}
