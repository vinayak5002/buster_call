class Node:
    def __init__(self,key):
        self.key = key
        self.left = None
        self.right = None
        self.parent = None

def preorder(node):
    if node is not None:
        print('', node.key, end='')
        preorder(node.left)
        preorder(node.right)
    
def inorder(node):
    if node is not None:
        inorder(node.left)
        print('', node.key, end='')
        inorder(node.right)

root = None

def insert(z):
    global root
    parent = None #xの親を保存する変数
    x = root  #二分木（T）の根
    while x is not None:
        parent = x
        if z.key < x.key:
            x = x.left
        else:
            x = x.right
    z.parent = parent

    if parent is None:
        root = z
    elif z.key < parent.key:
        parent.left = z
    else:
        parent.right = z

m = int(input())

for i in range(m):
    order = list(input().split())
    if order[0] == 'insert':
        z = Node(int(order[1]))
        insert(z)
    else:
        inorder(root)
        print()
        preorder(root)
        print()
