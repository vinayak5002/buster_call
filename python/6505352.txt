const input = 1 ? process.stdin : require('fs').createReadStream('./inp.txt')
const stdin = []
require('readline').createInterface({ input }).on('line', (line) => stdin.push(line)).on('close', () => main(stdin, process.stdout))
// 以下 main 内に処理を追加
function main(si, so) {

	const n = parseInt(si[0].split("\n"));
	
	let per = new Permutation(n);
	
	const result = per.getPermutation();
	
	let ans = per.makeAns(result);
	so.write(ans);

}

class Permutation {
	constructor(vol) {
		this.array = [];
		for (let i = 1; i <= vol; i++) {
			this.array.push(i);
		}
	}

	getPermutation(r, types) {
		const result = [];
		types = types || this.array;
		r = r || this.array.length;
		if (r === 1) {
			for (let i = 0; i < types.length; i++) {
				result[i] = [types[i]];
			}
			return result;
		}
		
		for (let i = 0; i < types.length; i++) {
			const parts = types.slice();
			parts.splice(i, 1);
			const row = this.getPermutation(r - 1, parts);
			for (let j = 0; j < row.length; j++) {
				result.push([types[i]].concat(row[j]));
			}
		}
		return result;
	}
	
	makeAns(result) {
		let ans_num = result.length;
		let ans = '';
		for (let i = 0; i < ans_num; i++) {
			for (let j = 0; j < result[i].length; j++) {
				ans += result[i][j];
				if (j < result[i].length - 1) {
					ans += ' ';
				}
			}
			ans += '\n';
		}
		
		return ans;
	}
}
