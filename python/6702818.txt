//  5_B:マージソート


#include <stdio.h>

#define INFTY (1<<30)

int count=0;

void merge(int A[], int left, int mid, int right){
    int n1 = mid - left;
    int n2 = right - mid;
    
    int L[500000],R[500000];
    
    for (int i=0; i<n1; i++)
        L[i] = A[left+i];
    for(int i=0; i<n2; i++)
        R[i] = A[mid+i];
    
    L[n1] = INFTY;
    R[n2] = INFTY;
    
    int i=0,j=0;

    for (int k=left; k<right; k++) {
        if(L[i] <= R[j]){
            A[k] = L[i];
            i = i + 1;
        }else{
            A[k] = R[j];
            j = j + 1;
        }
        count++;
    }
}

void mergeSort(int A[],int left,int right){
    if (left+1 < right) {
        int mid = (left + right)/2;
        mergeSort(A,left,mid);
        mergeSort(A,mid,right);
        merge(A,left,mid,right);
    }
}


int main() {
    int n,S[500000];
    
    scanf("%d",&n);
    for (int i=0; i<n; i++)
        scanf("%d",&S[i]);
    
    mergeSort(S, 0, n);
    
    //入力された配列を表示
    for(int i=0;i<n;i++){
        printf("%d",S[i]);
        if(i!=n-1)printf(" ");
    }
    printf("\n");
    //*/
    
    printf("%d\n",count);
    
    return 0;
}
