def prime_factorise_dict(n):
    
    sqrt_n = int(n ** (1 / 2))
    prime_factors_dict = {}
    
    while n % 2 == 0:
        prime_factors_dict[2] = prime_factors_dict.get(2, 0) + 1
        n //= 2
    
    for i in range(3, sqrt_n + 1, 2):
        
        while n % i == 0:
            prime_factors_dict[i] = prime_factors_dict.get(i, 0) + 1
            n //= i
    
    if n != 1:
        prime_factors_dict[n] = 1
        
    return prime_factors_dict


def euler_totient(n):

    prime_factors_dict = prime_factorise_dict(n)
    ans = n
    for prime in prime_factors_dict:
        ans *= (prime - 1)
        ans //= prime

    return ans

def main():
    
    n = int(input())
    ans = euler_totient(n)
    print(ans)
    

if __name__ == '__main__':
    main()
    
    
