import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
from aem import con

from attr import fields_dict
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

fields = [[0 for _ in range(151)] for _ in range(151)]
for i in range(1,151):
    for j in range(1,151):
        fields[i][j] = (i**2 + j**2)**(1/2)

while True:
    h,w = mi()
    cnt = 0
    ans = (151**2 + 151**2)**(1/2)
    tmp = (h**2 + w**2)**(1/2)
    if h == 0:
        break
    for i in range(150,-1,-1):
        for j in range(151):
            if i == h and w == j:
                continue
            if i >= j:
                continue
            if tmp <= fields[i][j] and fields[i][j] <= ans:
                if i < h and fields[i][j] == tmp:
                    continue
                ans = fields[i][j]
                idx = [i,j]
    print(*idx)


