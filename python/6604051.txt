def binary_search(arr, key):
    ok = 0
    ng = len(arr)-1
    if arr[ok] == key: return True
    elif arr[ok] > key: return False
    while ng-ok > 1:
        mid = (ok+ng)//2
        #print(f'å§‹ ok:{ok} mid:{mid} ng:{ng} || arr[ok]:{arr[ok]} arr[mid]:{arr[mid]} arr[ng]:{arr[ng]} key:{key}')
        if arr[mid] == key: return True
        elif arr[mid] > key: ng = mid
        else: ok = mid
        #print(f'çµ‚ ok:{ok} mid:{mid} ng:{ng} || arr[ok]:{arr[ok]} arr[mid]:{arr[mid]} arr[ng]:{arr[ng]} key:{key}')
        #print('--------------------------------------------------------------')
    return False

n = int(input())
S = list(map(int, input().split()))
q = int(input())
T = list(map(int, input().split()))

ans = 0
for t in T: 
    if binary_search(S, t): ans += 1
print(ans)
