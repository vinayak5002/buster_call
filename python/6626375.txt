
class Node:
    def __init__(self):#コンストラクタ
        self.parent = -1
        self.children = []


def cal_depth(node, d = 0):#深さ探索
    tree[node].depth = d
    for child in tree[node].children:
        cal_depth(child, d+1)  
N = int(input())
tree = [Node() for i in range(N)]#ノードを格納したN個の配列を作る



#木を作る
for i in range(N):
    #id, 子供の数k, c_0~c_k
    tree_info = list(map(int, input().split()))#文字列を入力しint型に変換してから配列を作る
    node = tree_info[0]
    k = tree_info[1]
    if k > 0:#子供あり
        children = tree_info[2:]#スライス
        tree[node].children = children
        tree[node].type = "internal node"
    else:#子供なし
        tree[node].type = "leaf"
        
    for child in tree[node].children:
        tree[child].parent = node

#根の探索
root_id =[i for i,t in enumerate(tree) if t.parent == -1][0]
tree[root_id].type = "root"
cal_depth(root_id)


#要素と番号の出力
for i, t in enumerate(tree):
    print("node {}: parent = {}, depth = {}, {}, {}".format(i, t.parent, t.depth, t.type, t.children))
