import queue

dxdy = ((0, 1), (0, -1), (1, 0), (-1, 0))
while True:
    W, H = map(int, input().split())
    if W == H == 0:
        exit()

    yoko = []
    tate = []
    for i in range(2*H-1):
        if i % 2 == 0:
            yoko.append(list(map(int, input().split())))
        else:
            tate.append(list(map(int, input().split())))

    que = queue.deque([(0, 0)])
    visited = [[0]*W for _ in range(H)]
    visited[0][0] = 1
    while que:
        x, y = que.popleft()
        for dx, dy in dxdy:
            nx = x + dx
            ny = y + dy
            if not 0 <= nx < H or not 0 <= ny < W:
                continue
            if visited[nx][ny] != 0:
                continue

            if dx == 1:
                if tate[x][y] == 1:
                    continue
            elif dx == -1:
                if tate[nx][y] == 1:
                    continue
            elif dy == 1:
                if yoko[x][y] == 1:
                    continue
            else:
                if yoko[x][ny] == 1:
                    continue

            visited[nx][ny] = visited[x][y] + 1
            que.append((nx, ny))

    print(visited[H-1][W-1])
