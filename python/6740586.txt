
#if 1
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <array>
#include <deque>
#include <algorithm>
#include <utility>
#include <cstdint>
#include <functional>
#include <iomanip>
#include <numeric>
#include <assert.h>
#include <bitset>
#include <list>
#include <cmath>
//#include <atcoder/all>

auto& in = std::cin;
auto& out = std::cout;
#define all_range(C) std::begin(C), std::end(C)
const double PI = 3.141592653589793238462643383279502884197169399375105820974944;

int input[3000];
int score[3][3000];
int N;

int main()
{
    using std::endl;
    in.sync_with_stdio(false);
    out.sync_with_stdio(false);
    in.tie(nullptr);
    out.tie(nullptr);

    in >> N;
    for (size_t i = 0; i < N; i++)
    {
        for (size_t ji = 0; ji < 3; ji++)
        {
            in >> score[ji][i];
        }
    }

    for (size_t game = 0; game < 3; game++)
    {
        std::map<int, int> memo;
        for (size_t i = 0; i < N; i++){

            auto v = score[game][i];
            if (memo.count(v) == 0) {
                memo[v] = i;
            }
            else {
                score[game][memo[v]] = 0;
                score[game][i] = 0;
            }
        }
    }

    for (size_t i = 0; i < N; i++)
    {
        int sum = 0;
        for (size_t ji = 0; ji < 3; ji++)
        {
            sum += score[ji][i];
        }
        out << sum << '\n';
    }

    return 0;
}
#endif

