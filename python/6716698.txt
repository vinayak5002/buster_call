def dfs(edge,s,n):
    ans = False
    s.add(n)
    for row in edge:
        if row[0] != n:
            continue
        if row[1] in s:
            return True
        ans = dfs(edge,s,row[1]) or ans

    s.remove(n)

    return ans
    
        



V,E = map(int,input().split())
edge = [[0] * 2 for i in range(E)]


for i in range(E):
    edge[i][0],edge[i][1] = map(int,input().split())

edge.sort(key=lambda x: x[0])

ind_edge = [-1] * E
pre = -1

s = set()
for i in range(V):
    ans = dfs(edge,set(),i)
    if ans :
        break

if ans :
    print(1)
else:
    print(0)

