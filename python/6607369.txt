import math
n = int(input())

def koch(d, p1x, p1y, p2x, p2y):
    if d == 0:
        return

    sx = (2 * p1x + p2x) / 3
    sy = (2 * p1y + p2y) / 3
    tx = (p1x + 2 * p2x) / 3
    ty = (p1y + 2 * p2y) / 3
    ux = (tx - sx) * math.cos(math.radians(60)) - (ty - sy) * math.sin(math.radians(60)) + sx
    uy = (tx - sx) * math.sin(math.radians(60)) + (ty - sy) * math.cos(math.radians(60)) + sy

    koch(d-1, 0, 0, sx, sy)
    print("{0:.8f} {1:.8f}".format(sx, sy))

    koch(d-1, sx, sy, ux, uy)
    print("{0:.8f} {1:.8f}".format(ux, uy))

    koch(d-1, ux, uy, tx, ty)
    print("{0:.8f} {1:.8f}".format(tx, ty))

    koch(d-1, tx, ty, 100, 0)

print("{0:.8f} {1:.8f}".format(0, 0))
koch(n, 0, 0, 100, 0)
print("{0:.8f} {1:.8f}".format(100, 0))
