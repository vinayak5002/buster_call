class SegTree:
    def __init__(self,n,v):
        if n == 1: n = 2
        self.ind = 1<<(n-1).bit_length()
        self.tree = [v]*2*self.ind
        
    
    def add(self,i,x):
        i += self.ind
        self.tree[i] = x
        i //= 2
        while i > 0:
            self.tree[i] = min(self.tree[i*2] , self.tree[i*2+1])
            i //= 2
            
    def _min(self,l,r):
        l+=self.ind
        r+=self.ind
        ans = 2**31-1
        while l < r:
            if l%2 == 1:
                ans = min(self.tree[l],ans)
                l += 1
            l //= 2
            if r%2 == 1:
                ans = min(self.tree[r-1],ans)
                r -= 1
            r //= 2
        return ans
    

n,q=map(int,input().split())
seg=SegTree(n,2**31-1)


for i in range(q):
    a,b,c=map(int,input().split())
    if  a == 0:
        seg.add(b,c)
    else:
        print(seg._min(b,c+1))
        

