import sys


class Node:
    def __init__(self, v):
        self.value = v
        self.left = None
        self.right = None


class Tree:
    def __init__(self):
        self.root = None

    def insert(self, v):

        y = None
        z = Node(v)
        x = self.root
        while x is not None:
            y = x
            if z.value < x.value:
                x = x.left
            else:
                x = x.right
        if y is None:
            self.root = z
        elif z.value < y.value:
            y.left = z
        else:
            y.right = z


def inorder(node):
    return inorder(node.left) + f' {node.value}' + inorder(
        node.right) if node else ''


def preorder(node):
    return f' {node.value}' + preorder(node.left) + preorder(
        node.right) if node else ''


def pre_order(t):
    if t != None:
        print('', t.value, end='')
        pre_order(t.left)
        pre_order(t.right)


def in_order(t):
    if t != None:
        in_order(t.left)
        print('', t.value, end='')
        in_order(t.right)


T = Tree()  # 作成

sys.stdin.readline()
for line in sys.stdin:
    line = line.split()
    if line[0] == 'insert':
        T.insert(int(line[1]))
    elif line[0] == 'print':
        print(inorder(T.root))
        print()
        print(preorder(T.root))
        print()

