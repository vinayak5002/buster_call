//ALDS1_2_D
//Shell Sort
#include <iostream>

using namespace std;

int cnt;

//挿入ソート
void insertionSort(int A[], int n, int g){

  int v, j;
  for(int i=g; i<n; i++){
    v = A[i];
    j = i-g;
    while(j>=0 && A[j]>v){
      A[j+g] = A[j];
      j = j-g;
      cnt++;
    }
    A[j+g] = v;
  }
}

//シェルソート
void shellSort(int A[], int n){
  cnt = 0;
  int m=n/2;
  int j=1;
  int G[m];
  for(int i=0; i<m; i++){
    G[i] = n-j;
    j = j+3;
  }
  for(int i=0; i<m; i++){
    insertionSort(A, n, G[i]);
  }

  //mとGの出力
  cout << m << endl;
  for(int i=0; i<m; i++){
    cout << G[i];
    if(i<m-1) cout << " ";
  }
  cout << endl;

}

int main(){

  int n;
  cin >> n;

  //配列Aの入力
  int A[n];
  for(int i=0; i<n; i++){
    cin >> A[i];
  }

  //ShellSort呼び出し
  shellSort(A, n);

  //出力
  cout << cnt << endl;
  for(int i=0; i<n; i++){
    cout << A[i] << endl;
  }

  return 0;
}

