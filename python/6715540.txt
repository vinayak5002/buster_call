// #include<stdio.h>
// #include<string.h>

// typedef struct DATA
// {
//     char    name[10];
//     int     time;
// } Data;

// Data    data[100000];
// Data*     head;
// Data*     tail;

// void push(char *n, int t){
//     *(((++tail)) -> name) = *n
//     ((tail)) -> time = t;
//     return;
// }

// Data pop(){
//     return *(head++); 
// }

// int main(void){
//     int     time;
//     char    name[10];
//     int     i;
//     int     n;
//     int     q;
//     int     fin;
//     Data    popData;

//     scanf("%d %d", &n, &q);


//     head = data;
//     tail = data + n - 1;
//     fin = 0;

//     for(i = 0; i < n; ++i){
//         scanf("%s %d", name, &time);
//         push(name, time);
//     }


//     while(head != tail){
//         popData = pop();
//         if(popData.time <= q){
//             printf("%s %d\n", popData.name, popData.time);
//             fin += popData.time;
//         }
//         else{
//             push(popData.name, popData.time - q);
//             fin += q;
//         }
//     }

//     return 0;
// }

#include<stdio.h>

typedef struct DATA
{
    char    name[10];
    int     time;
} Data;

Data data[200000];
int head, tail;

void push(Data d){

    data[++tail] = d;
}

Data pop(){
    return data[head++];
}

int main(void){
    int     time;
    char    name[10];
    int     i;
    int     n;
    int     q;
    int     fin;
    Data    popData;

    scanf("%d %d", &n, &q);


    head = 0;
    tail = n - 1;
    fin = 0;

    for(i = 0; i < n; ++i){
        scanf("%s %d", data[i].name, &data[i].time);
    }

    while(tail - head >= 0){
        popData = pop();
        if(popData.time > q){
            popData.time -= q;
            push(popData);
            fin += q;
        }else{
            printf("%s %d\n", popData.name, fin += popData.time);
        }
    }

    return 0;
}
