def max_heapify(H, A, i):
    l = i * 2
    r = l + 1
    if l <= H and A[l] > A[i]:
        largest = l
    else:
        largest = i
    if r <= H and A[r] > A[largest]:
        largest = r

    if largest != i:
        tmp = A[largest]
        A[largest] = A[i]
        A[i] = tmp
        max_heapify(H, A, largest)


def build_max_heap(H, A):
    for i in range(int(H/2), 0, -1):
        max_heapify(H, A, i)


H = int(input())
A = list(map(int, input().split()))
A = [0] + A

build_max_heap(H, A)

for i in range(1, H + 1):
    print(' ', end='')
    print(A[i], end='')
print()

