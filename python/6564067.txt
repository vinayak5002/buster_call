import sys
input = sys.stdin.readline

class SegTree:
    def __init__(self, size, f, I):
        n = 1
        while n < size+1:
            n <<= 1
        self.size = n
        self.f = f
        self.I = I
        self.node = [I] * (2 * n)



    def update(self, k, x):
        k += self.size
        self.node[k] += x
        while k > 1:
            k >>= 1
            self.node[k] = self.f(self.node[2 * k], self.node[2 * k + 1])

    def query(self, a, b):
        L = R = self.I
        a += self.size
        b += self.size
        while a < b:
            if a & 1:
                L = self.f(L, self.node[a])
                a += 1
            if b & 1:
                b -= 1
                R = self.f(self.node[b], R)


            a //= 2
            b //= 2
        return L+R



n, q = map(int, input().split())
rmq = SegTree(n, lambda x, y: x+y, 0)
for _ in range(q):
    com, x, y = map(int, input().split())
    if com == 0:
        rmq.update(x, y)
    else:
        print(rmq.query(x, y +1))

