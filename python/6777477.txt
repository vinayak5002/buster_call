def partition(A, p, r):

	x = int(A[r][1])
	i = p-1

	for j in range(p,r):
		if int(A[j][1]) <= x:
			i += 1
			ws = A[i]
			A[i] = A[j]
			A[j] = ws

	ws = A[i+1] 
	A[i+1] = A[r]
	A[r] = ws

	return i+1

def quickSort(A, p, r):

	if p < r:
		q = partition(A, p, r)
		quickSort(A, p, q-1)
		quickSort(A, q+1, r)


n = int(input())
A = []
ans = "Stable"
#inputValidList = ["" for i in range(1000000010)]
inputValidDict = {}

for i in range(n):
	a = input().replace(" ", "")
	A.append(a)

	if int(a[1]) not in inputValidDict.keys():
		inputValidDict[int(a[1])] = ""
	inputValidDict[int(a[1])] = inputValidDict[int(a[1])] + a[0]


quickSort(A, 0, len(A)-1)
#print(A)



#resultList = ["" for i in range(1000000010)]
resultDict = {}

for i in range(n):
	tarstr = A[i]

	if int(tarstr[1]) not in resultDict.keys():
		resultDict[int(tarstr[1])] = ""
	resultDict[int(tarstr[1])] += tarstr[0]

if inputValidDict == resultDict:
	print("Stable")
else:
	print("Not Stable")
	

for i in range(n):
	print(A[i][0] ,A[i][1])


