//
// Created by 17261 on 2022/4/26.
//

#include <bits/stdc++.h>

typedef long long ll;

using namespace std;

struct puzzle{
    int m[3][3];
    int px,py;
    bool operator < (const puzzle &p) const {
        for (int i = 0; i < 3; i++) {
            for(int j=-;j<3;j++){
                if(m[i][j]!=p.m[i][j]) return m[i][j]>p.m[i][j];
            }
        }
        return false;
    }
}p;

int dx[4]={-1,0,1,0};
int dy[4]={0,-1,0,1};

int vis(puzzle a){
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            if(a.m[i][j]!=(i*3+j)){
                return 0;
            }
        }
    }
    return 1;
}

int bfs(puzzle a){
    int ans=0;
    queue<puzzle> q;
    map<puzzle,int> mp;
    puzzle tmp;
    q.push(a);
    mp[a]=1;
    while(!q.empty()){
        tmp=q.front();
        q.pop();
        if(vis(tmp)) return ans;
        for(int i=0;i<4;i++){
            int tx=tmp.px+dx[i];
            int ty=tmp.py+dy[i];
            if(tx<0||ty<0||tx>=3||ty>=3) continue;
            puzzle n;
            n=tmp;
            swap(n.m[n.px][n.py],n.m[tx][ty]);
            n.px=tx,n.py=ty;
            if(!mp[n]){
                mp[n]=1;
                ans++;
                q.push(n);
            }
        }
    }
    return 0;
}

int main() {
#ifdef Ac1dX
    freopen("C:\\Users\\17261\\Desktop\\Ac1dX\\acm\\data.in", "r", stdin);
    freopen("C:\\Users\\17261\\Desktop\\Ac1dX\\acm\\data.out", "w", stdout);
#endif
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            cin>>p.m[i][j];
            if(p.m[i][j]==0){
                p.px=i,p.py=j;
            }
        }
    }
    cout<<bfs(p)<<endl;
    return 0;
}
