from copy import deepcopy
while True:
    n,m,t,p = map(int,input().split())
    if n == 0 and m == 0 and t == 0 and p == 0:
        break
    L = [[1]*n + [0]*n for _ in range(m)] + [[0]*(2*n) for _ in range(m)]
    top_left_corner = (0,0)
    for i in range(t):
        d,c = map(int,input().split())
        if d == 1:
            for j in range(m):
                for k in range(c):
                    L[j+top_left_corner[0]][2*c-k-1+top_left_corner[1]] += L[j+top_left_corner[0]][k+top_left_corner[1]]
                    L[j+top_left_corner[0]][k+top_left_corner[1]] = 0
            top_left_corner = (top_left_corner[0],top_left_corner[1]+c)
        else:
            for j in range(n):
                for k in range(c):
                    L[2*c-k-1+top_left_corner[0]][j+top_left_corner[1]] += L[k+top_left_corner[0]][j+top_left_corner[1]]
                    L[k+top_left_corner[0]][j+top_left_corner[1]] = 0
            top_left_corner = (top_left_corner[0]+c,top_left_corner[1])
    for i in range(p):
        x,y = map(int,input().split())
        print(L[y+top_left_corner[0]][x+top_left_corner[1]])
