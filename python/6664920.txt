V, E = map(int, input().split())

INF = 10 ** 18

G = [[INF] * V for _ in range(V)]
for _ in range(E):
    s, t, d = map(int, input().split())
    G[s][t] = d

dp = [[INF] * V for _ in range(1 << V)]
dp[0][0] = 0

for i in range(1 << V):
    for j in range(V):
        for k in range(V):
            if i & (1 << j) == 0:
                if i != 0 and (not (i & 1 << k)):
                    continue
                if (j != k):
                    dp[i | (1 << j)][j] = min(
                        dp[i | (1 << j)][j],
                        dp[i][k] + G[k][j],
                    )

print(dp[(1 << V) - 1][0] if dp[(1 << V) - 1][0] != INF else -1)

