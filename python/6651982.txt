class Node:
  def __init__(self):
    self.parent = -1
    self.children = -1

def preOrder(id):
  pre_num = ""
  if id != -1:
    pre_num += f" {id}"
    pre_num += preOrder(nodes[id].children[0])
    pre_num += preOrder(nodes[id].children[1])
  
  return pre_num

def inOrder(id):
  in_num =  ""
  if id != -1:
    in_num += inOrder(nodes[id].children[0])
    in_num += f" {id}"
    in_num += inOrder(nodes[id].children[1])
  
  return in_num

def postOrder(id):
  post_num = ""
  if id != -1:
    post_num += postOrder(nodes[id].children[0])
    post_num += postOrder(nodes[id].children[1])
    post_num += f" {id}"
  
  return post_num


n = int(input())
nodes = [Node() for _ in range(n)]
for _ in range(n):
  id, *children = map(int, input().split())
  nodes[id].children = children#子ども代入
  for c in children:
    if c != -1:
      nodes[c].parent = id#親代入

for id in range(n):
  if nodes[id].parent == -1:
    print("Preorder\n" + preOrder(id))
    print("Inorder\n" + inOrder(id))
    print("Postorder\n" + postOrder(id))
