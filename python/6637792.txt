//Codeforcesで128bit整数を使いたいとき
//→__int128_tを使う&GNU C++17 (64)で提出する

//インクルードなど
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

//イテレーション
#define REP(i,n) for(ll i=0;i<ll(n);i++)
#define REPD(i,n) for(ll i=n-1;i>=0;i--)
#define FOR(i,a,b) for(ll i=a;i<=ll(b);i++)
#define FORD(i,a,b) for(ll i=a;i>=ll(b);i--)
#define FORA(i,I) for(const auto& i:I)
//x:コンテナ
#define ALL(x) x.begin(),x.end() 
#define SIZE(x) ll(x.size()) 
//定数
#define INF32 2147483647 //2.147483647×10^{9}:32bit整数のinf
#define INF64 9223372036854775807 //9.223372036854775807×10^{18}:64bit整数のinf
#define MOD 1000000007 //問題による
//略記
#define F first
#define S second
//出力(空白区切りで昇順に)
#define coutALL(x) for(auto i=x.begin();i!=--x.end();i++)cout<<*i<<" ";cout<<*--x.end()<<endl;

//aをbで割る時の繰上げ,繰り下げ
ll myceil(ll a,ll b){return (a+(b-1))/b;}
ll myfloor(ll a,ll b){return a/b;}

signed main(){
    int n,q;
    cin>>n;
    std::vector<int> A(n);
    for (int i = 0; i < n; ++i){ cin>>A[i]; }
    cin>>q;
    std::vector<bool> ansBool;
    std::vector<int> q(n);
    for (int i = 0; i < q; ++i)
    {
        cin>>q[i];
    }
    for (int i = 0; i < q; ++i)
    {
        bool haveAns=false;
        for (int bit = 0; bit < (1<<n); ++bit)
        {
            int sum = 0;
            for (int i = 0; i < n; ++i)
            {
                if(bit & (1<<i)) {
                    sum+=A[i];
                }
            }
            if(sum==q[i]){ansBool.push_back(true);haveAns=true;break;}
        }
        if(!haveAns){ansBool.push_back(false);}
    }
    for (int i = 0; i < q; ++i)
    {
        string ansString = "no";
        if(ansBool[i]){ansString="yes";}
        cout<<ansString<<endl;
    }
}
