const input = 1 ? process.stdin : require('fs').createReadStream('./inp.txt')
const stdin = []
require('readline').createInterface({ input }).on('line', (line) => stdin.push(line)).on('close', () => main(stdin, process.stdout))
// 以下 main 内に処理を追加
function main(si, so) {

	const q = parseInt(si[0].split("\n"));
	let m = new Map();
	let ans = '';
    let length = 0;

	for (let i = 1; i < q + 1; i++) {
		let order = si[i].split(" ");
		let key = order[1];
		switch (order[0]) {
			case '0':
				if (m.has(key)) {
                    m.get(key).push(key)
                } else {
                    m.set(key, [key])
                }
                length++;
                ans += length + '\n';
				break;

			case '1':
				let get = m.get(key);
                if (get) {
                    ans += get.length + '\n';
                } else {
                    ans += '0\n';
                }
				break;

			case '2':
                let del = m.get(key);
                if (del) {
                    length -= del.length;
                }
				m.delete(key);
				break;
				
			case '3':
			    let arr = [];
                let l = Number(order[1]);
                let r = Number(order[2]);
				for (let data of m) {
                    let num = Number(data[0]);
					if (num >= order[1] && num <= order[2]) {
						arr.push(data)
					}
				}
				arr.sort((a, b) => a[0] - b[0]);
                //console.log(arr);
				for (let j = 0; j < arr.length; j++) {
                    for (let k = 0; k < arr[j][1].length; k++) {
                        ans += arr[j][1][k] + '\n';
                    }
				}
				break;
		}
        //console.log(m);
	}
	so.write(ans);

}
