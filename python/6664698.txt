//
#include<bits/stdc++.h>
using namespace std;
#define EF -1
const int N=111;

struct node{ int id,x,y,dad; }nn[N];

void AA( int root )
{
    if( root==EF ) return ;
    cout<<" "<<root;
    AA( nn[root].x );
    AA( nn[root].y );
}

void BB( int root )
{
    if( root==EF ) return ;
    BB( nn[root].x );
    cout<<" "<<root;
    BB( nn[root].y );
}

void CC( int root )
{
    if( root==EF ) return ;
    CC( nn[root].x );
    CC( nn[root].y );
    cout<<" "<<root;
}

int main()
{
    int n,id,x,y,i,root;
    while( cin>>n )
    {
        for( i=0;i<n;i++ ) nn[i].dad=EF;

        for( i=0;i<n;i++ )
        {
            cin>>id>>x>>y;
            nn[id].x=x; nn[id].y=y;
            if( x!=EF ) nn[x].dad=id;       // solve_non_root
            if( y!=EF ) nn[y].dad=id;
        }
        for( i=0;i<n;i++ )                  // find_root
            if( nn[i].dad==EF )
            {
                root=i; break;
            }
        cout<<"Preorder"<<endl; AA( root ); cout<<endl;

        cout<<"Inorder"<<endl; BB( root ); cout<<endl;
        
        cout<<"Postorder"<<endl; CC( root ); cout<<endl;
    }
    return 0;
}
