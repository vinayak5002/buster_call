def aoj_knapsack_problem():
    N, W = map(int, input().split())
    dp = [[0 for _ in range(W+1)] for _ in range(N+1)]

    values = []
    weights = []
    for _ in range(N):
        v, w = map(int, input().split())
        values.append(v)
        weights.append(w)

    for i in range(N):
        for w in range(W+1):
            if weights[i] <= w:
                dp[i+1][w] = max(dp[i][w], dp[i][w-weights[i]]+values[i], dp[i+1][w-weights[i]]+values[i])
            else:
                dp[i+1][w] = dp[i][w]

    print(dp[N][W])

if __name__ == "__main__":
    aoj_knapsack_problem()
