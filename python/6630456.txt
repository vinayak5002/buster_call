	
import java.util.Scanner;

class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[] diceNumbers = new int[6];
		int[] newDiceNumbers = new int[6];
		int result=0;
		int count;
		
		for(int i = 0;i < 6;i++) {
			diceNumbers[i] = sc.nextInt();
		}
		
		int q = sc.nextInt();
		for(int i = 0;i < q;i++) {
			newDiceNumbers = diceNumbers;
			int upper = sc.nextInt();
			int front = sc.nextInt();
			count = 0;
			
			// 上面を特定
			while(newDiceNumbers[0] != upper) {
				if(count == 0 || count == 5) {
					newDiceNumbers = eastRoll(newDiceNumbers);
					count++;
				}else {
					newDiceNumbers = northRoll(newDiceNumbers);
					count++;
				}
			}
			
			// 横に倒す
			newDiceNumbers = eastRoll(diceNumbers);
			// 上面を固定して側面を4回転
			int count_2 = 4;
			while(count_2 > 0) {
				newDiceNumbers = northRoll(newDiceNumbers);
				if(newDiceNumbers[1] == front) {
					result = newDiceNumbers[5];
					break;
				}
				count_2--;
			}
			
			System.out.println(result);
			
		}
	
		sc.close();

	}
	
	
	public static int[] northRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[1];
		diceNumbers[1] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[4];
		diceNumbers[4] = upperNumber;
		
		return diceNumbers;
	}
	
	public static int[] southRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[4];
		diceNumbers[4] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[1];
		diceNumbers[1] = upperNumber;
		
		return diceNumbers;
	}

	public static int[] eastRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[3];
		diceNumbers[3] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[2];
		diceNumbers[2] = upperNumber;
		
		return diceNumbers;
	}

	public static int[] westRoll(int[] diceNumbers) {
		int upperNumber = diceNumbers[0];
		diceNumbers[0] = diceNumbers[2];
		diceNumbers[2] = diceNumbers[5];
		diceNumbers[5] = diceNumbers[3];
		diceNumbers[3] = upperNumber;
		
		return diceNumbers;
	}
}
