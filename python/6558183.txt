import java.util.Arrays;
import java.util.Scanner;

public class Main {
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        int H = getInt();
        int[] arr = new int[H + 1];
        for (int i = 1; i <= H; i++) {
            arr[i] = getInt();
        }
        Heap heap = new Heap(arr, H);
        System.out.println(heap);
    }

    static int getInt() {
        return Integer.parseInt(sc.next());
    }

    static class Heap {
        int[] heap;
        int size;
        Heap(int[] heap, int size) {
            this.heap = heap;
            this.size = size;
            buildMaxHeap();
        }
        void maxHeapify(int i) {
            int left = left(i);
            int right = right(i);
            int largest;
            if (left != -1 && heap[left] > heap[i]) {
                largest = left;
            } else {
                largest = i;
            }
            if (right != -1 && heap[right] > heap[largest]) {
                largest = right;
            }

            if (largest != i) {
                int tmp = heap[i];
                heap[i] = heap[largest];
                heap[largest] = tmp;
                maxHeapify(largest);
            }
        }
        void buildMaxHeap() {
            for (int i = size / 2; i > 0; i--) {
                maxHeapify(i);
            }
        }
        int parent(int i) {
            int res = i / 2;
            if (i < 1) {
                return -1;
            }
            return res;
        }
        int left(int i) {
            int res = i * 2;
            if (res > size) {
                return -1;
            }
            return res;
        }
        int right(int i) {
            int res = i * 2 + 1;
            if (res > size) {
                return -1;
            }
            return res;
        }
        @Override
        public String toString() {
            StringBuilder res = new StringBuilder();
            Arrays.stream(heap).forEach(key -> res.append(' ').append(key));
            return res.delete(0, 2).toString();
        }
    }
}


