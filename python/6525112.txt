using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _20220416_AOJ
{
    class ITP2_5B
    {
        static int ReadInt() { return int.Parse(Console.ReadLine()); }
        static double ReadDouble() { return double.Parse(Console.ReadLine()); }
        static int[] ReadIntArr(char dlm = ' ') { return Console.ReadLine().Split(dlm).Select(x => int.Parse(x)).ToArray(); }
        static double[] ReadDoubleArr(char dlm = ' ') { return Console.ReadLine().Split(dlm).Select(x => double.Parse(x)).ToArray(); }
        static string[] ReadStringArr(char dlm = ' ') { return Console.ReadLine().Split(dlm).ToArray(); }


        static void Main(string[] args)
        {
            string line = Console.ReadLine();
            int n = int.Parse(line);

            Item[] items = new Item[n];
            for(int i=0;i<n;i++)
            {
                string[] prop = ReadStringArr();
                items[i] = new Item(int.Parse(prop[0]), int.Parse(prop[1]), prop[2], long.Parse(prop[3]), prop[4]);
            }

            Array.Sort(items);

            StringBuilder sb = new StringBuilder();
            foreach(var v in items)
            {
                sb.AppendLine(string.Format("{0} {1} {2} {3} {4}", v.V, v.W, v.T, v.D, v.S));
            }

            Console.Write(sb);
        }
    }

    class Item : IComparable<Item>
    {
        public int V { get; set; }
        public int W { get; set; }
        public string T { get; set; }
        public long D { get; set; }
        public string S { get; set; }
        public Item(int v, int w, string t, long d, string s)
        {
            this.V = v;
            this.W = w;
            this.T = t;
            this.D = d;
            this.S = s;
        }

        public int CompareTo(Item t)
        {
            int rv = V.CompareTo(t.V);
            if(rv==0)
            {
                rv = W.CompareTo(t.W);
            }
            if (rv == 0)
            {
                rv = T.CompareTo(t.T);
            }
            if (rv == 0)
            {
                rv = D.CompareTo(t.D);
            }
            if (rv == 0)
            {
                rv = S.CompareTo(t.S);
            }

            return rv;
        }
    }
}

