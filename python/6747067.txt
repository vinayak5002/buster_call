def main():
    line = input()
    index = 1

    while line != '0':
        n = int(line)

        points = []
        for i in range(n):
            l = input().split()
            x = int(l[0])
            y = int(l[1])
            points.append((x, y))

        print(str(index) + " " + str(solve(points)))

        index += 1
        input()
        line = input()


def solve(points):
    if len(points) == 3:
        return triangle(points)
    return polygon(points)


def triangle(points):
    p1 = points[0]
    p2 = points[1]
    p3 = points[2]

    return abs((p1[0] * p2[1]) - (p1[1] * p2[0]) + (p2[0] * p3[1]) - (p2[1] * p3[0]) + (p3[0] * p1[1]) - (p3[1] * p1[0])) / 2

def polygon(points):
    s = 0
    p0 = points[0]
    for i in range(2, len(points)):
        p1 = points[i - 1]
        p2 = points[i]

        s += (p1[0] - p0[0]) * (p2[1] - p0[1]) - (p1[1] - p0[1]) * (p2[0] - p0[0])
        # s += ((points[]))
    p1 = points[0]
    p2 = points[-1]
    s += (p1[0] - p0[0]) * (p2[1] - p0[1]) - (p1[1] - p0[1]) * (p2[0] - p0[0])
    # s += ((points[0][0] * points[-1][1]) - (points[0][1] * points[-1][0])) / 2
    # s += ((X[j] - X[0]) * (Y[j] - Y[0]) - (X[j+1] - X[0]) * (Y[j] - Y[0])) / 2
    # area = 0
    # for i in range(0, len(points) - 2):
    #     area += -points[i][1] * points[i + 1][0] + points[i][0] * points[i + 1][1]
    # area += -points[len(points) - 1][1] * points[0][0] + points[len(points) - 1][0] * points[0][1]
    # area = 0.5 * abs(area)

    return abs(s / 2)


if __name__ == '__main__':
    main()

