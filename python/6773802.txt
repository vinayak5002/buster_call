from collections import deque

def bfs(c, i, j, w, h):
    q = deque()
    q.append( (i, j) )
    while q:
        i, j = q.popleft()
        c[i][j] = 0
        for ni in range(i + -1, i + 2):
            for nj in range(j + -1, j + 2):
                if ni < 0 or h <= ni or nj < 0 or w <= nj:
                    continue
                if c[ni][nj] == 0:
                    continue
                q.append( (ni, nj) )
    return c

while True:
    r = 0
    w, h = map(int, input().split())
    if w == 0:
        break
    c = [list(map(int, input().split())) for i in range(h)]
    
    for i in range(h):
        for j in range(w):
            if(c[i][j] == 0):
                continue
            r += 1
            c = bfs(c, i, j, w, h)
    print(r)
