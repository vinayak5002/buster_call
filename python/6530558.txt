const { basename } = require('path');

const input = 1 ? process.stdin : require('fs').createReadStream('./inp.txt')
const stdin = []
require('readline').createInterface({ input }).on('line', (line) => stdin.push(line)).on('close', () => main(stdin, process.stdout))
// 以下 main 内に処理を追加
function main(si, so) {
	let n = si[0];
	let array = new Array(n);

	for (let i = 0; i < n; i++) {
		let pair = si[i + 1].split(" ");
		let tuple = new Map();
		tuple.set('value', pair[0]);
		tuple.set('weight', pair[1]);
		tuple.set('type', pair[2]);
		tuple.set('date', pair[3]);
		tuple.set('name', pair[4]);
		array[i] = tuple;
	}
	//console.log(array);// forDebug

	array.sort((a, b)  => { // 参考: https://qiita.com/yunkikki/items/6278c9215e6f46c4e55f
		if (Number(a.get('value')) < Number(b.get('value'))) {
			return -1;// 価値が低い品物を先に

		} else if (Number(a.get('value')) === Number(b.get('value'))
			&& Number(a.get('weight')) < Number(b.get('weight'))) {
			return -1;// 価値が同じ場合は, 重さが小さい品物を先に

		} else if (Number(a.get('value')) === Number(b.get('value'))
			&& Number(a.get('weight')) === Number(b.get('weight'))
			&& a.get('type') < b.get('type')) {
			return -1;// 重さが同じ場合は, 型がアルファベット順で小さい品物を先に

		} else if (Number(a.get('value')) === Number(b.get('value'))
			&& Number(a.get('weight')) === Number(b.get('weight'))
			&& a.get('type') === b.get('type')
			&& a.get('date') < b.get('date')) {
			return -1;

		} else if (Number(a.get('value')) === Number(b.get('value'))
			&& Number(a.get('weight')) === Number(b.get('weight'))
			&& a.get('type') === b.get('type')
			&& a.get('date') === b.get('date')
			&& a.get('name') < b.get('name')) {
			return -1;
		} else {
			return 1;
		}
	});


	let str = "";
	for (let i = 0; i < n; i++) {
		str += (array[i].get('value')) + " ";
		str += (array[i].get('weight')) + " ";
		str += (array[i].get('type')) + " ";
		str += (array[i].get('date')) + " ";
		str += (array[i].get('name')) + "\n";
	}

	so.write(str);
}

