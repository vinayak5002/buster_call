import java.util.HashSet;
import java.util.Scanner;

public class Main {
    void solve() {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        int x = scanner.nextInt();
        HashSet<Integer> a = new HashSet<Integer>();
        for (int i = 0; i < x; i++) {
            a.add(scanner.nextInt());
        }

        int y = scanner.nextInt();
        HashSet<Integer> b = new HashSet<Integer>();
        for (int i = 0; i < y; i++) {
            b.add(scanner.nextInt());
        }

        int z = scanner.nextInt();
        HashSet<Integer> c = new HashSet<Integer>();
        for (int i = 0; i < z; i++) {
            c.add(scanner.nextInt());
        }

        // D: (not A) && c
        HashSet<Integer> pattern1 = new HashSet<Integer>();
        for (int num : c) {
            pattern1.add(num);
        }
        for (int num : a) {
            if (c.contains(num)) {
                pattern1.remove(num);
            }
        }

        // E: B && c
        HashSet<Integer> pattern2 = new HashSet<Integer>();
        for (int num : b) {
            if (c.contains(b)) {
                pattern2.add(num);
            }
        }

        // D or E
        for (int num : pattern1) {
            pattern2.add(num);
        }

        System.out.println(pattern2.size());

    }

    public static void main(String[] args) {
        new Main().solve();
    }
}

