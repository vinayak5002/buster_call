class UnionFind
  def initialize(n)
    @v=Array.new(n) {|i| i}
    @size=Array.new(n,1)
  end
  def root(x)
    return x if @v[x]==x
    @v[x]=root(@v[x])
  end
  def same?(x,y)
    root(x)==root(y)
  end
  def unite(x,y)
    a,b=root(x),root(y)
    if a!=b then
      @v[a]=b
      @size[b]+=@size[a]
    end
  end
  def size(x)
    @size[root(x)]
  end
end

while (w,h=gets.split.map(&:to_i))!=[0,0] do
  u=UnionFind.new(w+h)
  (w+h-1).times do
    x,y,n=gets.split.map(&:to_i)
    u.unite(y-1,h+x-1)
  end
  puts u.size(0)==w+h ? 'YES' : 'NO'
end
