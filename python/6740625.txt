
#if 1
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <array>
#include <deque>
#include <algorithm>
#include <utility>
#include <cstdint>
#include <functional>
#include <iomanip>
#include <numeric>
#include <assert.h>
#include <bitset>
#include <list>
#include <cmath>
//#include <atcoder/all>

auto& in = std::cin;
auto& out = std::cout;
#define all_range(C) std::begin(C), std::end(C)
const double PI = 3.141592653589793238462643383279502884197169399375105820974944;

int N;

int main()
{
    using std::endl;
    in.sync_with_stdio(false);
    out.sync_with_stdio(false);
    in.tie(nullptr);
    out.tie(nullptr);

    in >> N;
    std::string tar;
    in >> tar;
    int res  = 0;
    for (size_t INPUT = 0; INPUT < N; INPUT++)
    {
        std::string base;
        in >> base;


        for (size_t b = 0; b < base.size(); b++)
        {
            bool ok = false;
            for (size_t step = 1; b + step*(tar.size()-1) < base.size(); step++) {

                ok = true;
                for (size_t ti = 0; ti < tar.size(); ti++) {

                    if (tar[ti] != base[b + step * ti]) {
                        ok = false;
                        break;
                    }

                }

                if (ok) {
                    ++res;
                    break;
                }
            }
            if (ok) {
                break;
            }
        }


    }

    out << res << endl;

    return 0;
}
#endif

