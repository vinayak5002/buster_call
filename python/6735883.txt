import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin
import copy
import bisect
from decimal import Decimal, ROUND_HALF_UP
# from atcoder.dsu import DSU

MOD = 10 ** 9 + 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

right_se = {'y','u','i','o','p','h','j','k','l','n','m'}
left_se = {'q','w','e','r','t','a','s','d','f','g','z','x','c','v','b'}
while True:
    s = input()
    cnt = 0
    ans = 0
    if s == '#':
        break
    for i in range(len(s)-1):
        if s[i] in left_se and s[i+1] in right_se:
            ans += 1
        elif s[i] in right_se and s[i+1] in left_se:
            ans += 1
    print(ans)


