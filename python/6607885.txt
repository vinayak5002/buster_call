use std::io;

fn main() {
    loop {
        let mut input = String::new();
        io::stdin().read_line(&mut input);
        let n = input.trim().parse::<usize>();
        if n.is_err() {
            break;
        }
        let p = list_primes(n.unwrap());
        println!("{}", p.len());
    }
}

fn _list_primes(n: usize) -> Vec<usize> {
    let mut is_prime: Vec<bool> = vec![true; (n+1)/2];
    let mut res = Vec::with_capacity((n+1)/2);
    is_prime[0] = false;
    for i in (1..).take_while(|x| x*x*4 < (n+1)) {
        if !is_prime[i] { continue; }
        for mult in (2*i*(i+1)..(n+1)/2).step_by(2*i+1) {
            is_prime[mult] = false;
        }
    }
    res.push(2);
    for i in 0..(n+1)/2 {
        if is_prime[i] {
            res.push(2*i+1);
        }
    }
    res
}

fn list_primes(mut n: usize) -> Vec<usize> {
    n += 1;
    let mut is_prime: Vec<bool> = vec![true; n/2];
    let mut res = Vec::with_capacity(n/2);
    is_prime[0] = false;
    for i in (1..).take_while(|x| x*x*4 < n) {
        if !is_prime[i] { continue; }
        for mult in (2*i*(i+1)..n/2).step_by(2*i+1) {
            is_prime[mult] = false;
        }
    }
    res.push(2);
    for i in 1..n/2 {
        if is_prime[i] {
            res.push(2*i+1);
        }
    }
    res
}
