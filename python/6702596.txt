import sys
import math
from collections import defaultdict, deque

sys.setrecursionlimit(10 ** 6)
stdin = sys.stdin

INF = float('inf')

ni = lambda: int(ns())
na = lambda: list(map(int, stdin.readline().split()))
ns = lambda: stdin.readline().strip()

N, W = na()
dp = [0] * (W + 1)
V = [0] * N
WW = [0] * N
for i in range(N):
    V[i], WW[i] = na()

for i in range(W + 1):
    for j in range(N):
        if i - WW[j] >= 0:
            dp[i] = max(dp[i], dp[i - WW[j]] + V[j])
print(dp[W])
