// 20D8102007B 澁谷晴生

#include <iostream>
#include <queue>
using namespace std;

int main(){
    int n;
    cin >> n;

    int G[100][100] = {0};//すべて０で初期化

    for (int i = 0; i < n; i++){
        int u, k;
        cin >> u >> k;

        for (int j = 0; j < k; j++){
            int v;
            cin >> v;

            G[u - 1][v - 1] = 1;//辺が存在すれば、１とする
        }
    }

    //	for(int i=0; i<n; i++){
    //		for(int j=0; j<n; j++){
    //			cout << G[i][j] << ' ';
    //		}
    //		cout << endl;
    //	}

    int d[100] = {0};
    int f[100] = {0};

    queue<int> Q;
    int T = 0;

    for (int i = 0; i < n; i++){
        if (d[i] != 0)
            continue;

        Q.push(i);
        d[i] = ++T;

        while (!Q.empty()){
            int u = Q.front();
            int v = -1;
            
            for (int j = 0; j < n; j++){
                if (G[u][j] == 1 && d[j] == 0)
                {
                    v = j;
                    break;
                }
            }

            if (v != -1){
                Q.push(v);
                d[v] = ++T;
            }else{
                Q.pop();
                f[u] = ++T;
            }
        }
    }

    for (int i = 0; i < n; i++){
        cout << i + 1 << ' ' << d[i] << ' ' << f[i] << endl;
    }

    return 0;
}

