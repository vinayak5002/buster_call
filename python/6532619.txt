def searchChild(child, parent):
  if child:
    if parent == -1:
      return "root"
    return "internal node"
  else:
    return "leaf"

n = int(input())#節点の個数
chs_list = []
pa_list = [None] * n
for i in range(n):
  nid, k, *chs = list(map(int, input().split()))
  chs_list.append(chs)
print(chs_list)
for i, chs in enumerate(chs_list):
  for ch in chs:
    pa_list[ch] = i
  pa_list[0] = -1
print(pa_list)

j = 0
for parent, child in zip(pa_list, chs_list):
  Type = searchChild(child, parent)
  print(f"node {j}: parent = {parent}, depth = 'a', {Type}, {child}")
  j += 1

