import itertools
import sys
import math
import heapq
from collections import deque, Counter, defaultdict
from sys import stdin


INF = 10 ** 7
int1 = lambda x: int(x) - 1
stinput = lambda: stdin.readline()[:-1]
ii = lambda: int(stinput())  # int input
mi = lambda: map(int, stdin.readline().split())  # map input (int)
li = lambda: list(mi())  # list input (int)
mi1 = lambda: map(int1, stdin.readline().split())  # map input (int)-1
li1 = lambda: list(mi1())  # list input (int)-1
mis = lambda: map(str, stdin.readline().split())  # map input (string)
lis = lambda: list(mis())  # list input (string)

while 1:
    N = ii()
    if N == 0: break
    imo = [0] * (24 * 60 * 60 + 1)
    for i in range(N):
        begin, end = input().split()
        beginL = list(map(int, begin.split(":")))
        endL = list(map(int, end.split(":")))
        beginInd = 3600 * beginL[0] + 60 * beginL[1] + beginL[2]
        endInd = 3600 * endL[0] + 60 * endL[1] + endL[2]
        imo[beginInd] += 1
        imo[endInd] -= 1

    res = list(itertools.accumulate(imo))
    print(max(res))



