// ALDS1_2_B
#include <bits/stdc++.h>
using namespace std;

#pragma GCC target("avx")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

struct Fast {
  Fast() {
    std::cin.tie(0);
    ios::sync_with_stdio(false);
  }
} fast;

void pv(const vector<int> &vec) {
  for (int i = 0; i < vec.size() - 1; i++) {
    cout << vec[i] << " ";
  }
  cout << vec.back() << endl;
}

int main() {
  int N;
  cin >> N;
  vector<int> ary(N);
  for (int i = 0; i < N; i++) {
    cin >> ary[i];
  }

  int count = 0;
  for (int i = 0; i < N; i++) {
    int minj = i;
    for (int j = i; j < N; j++) {
      if (ary[j] < ary[minj]) {
        minj = j;
      }
    }
    swap(ary[i], ary[minj]);
    if (i != minj) {
      count++;
    }
  }
  pv(ary);
  cout << count << endl;

  return 0;
}

