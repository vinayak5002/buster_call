import sys

class Node:
    def __init__(self, v):
        self.value = v
        self.left = None
        self.right = None

    def insert(self, v):
        if self.value > v:
            if self.left is None:
                self.left = Node(v)
            else:
                self.left.insert(v)
        elif self.value < v:
            if self.right is None:
                self.right = Node(v)
                
            else:
                self.right.insert(v)
        else:
            return
    def find(self, v):
        if self.value == v:
            print("yes")
        elif self.value < v:
            if self.right is None:
                print("no")
            else:
                self.right.find(v)
        else:
            if self.left is None:
                print("no")
            else:
                self.left.find(v)
        
def pre_order(t):
    if t is None:
        return ""
    else:
        return " " + str(t.value) + pre_order(t.left) + pre_order(t.right)
        

def in_order(t):
    if t is None:
        return ""
    else:
        return in_order(t.left) + " " + str(t.value) + in_order(t.right)
        

N = int(sys.stdin.readline())
root = Node(None)
line = sys.stdin.readline()
if line[0] == 'i':
    root = Node(int(line[7:]))
for i in range(N-1):
    line = sys.stdin.readline()
    if line[0] == 'i':
        root.insert(int(line[7:]))
    elif line[0] == 'p':
        print(in_order(root))
        print(pre_order(root))
    elif line[0] == 'f':
        root.find(int(line[1]))







