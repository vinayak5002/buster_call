const input = 1 ? process.stdin : require('fs').createReadStream('./inp.txt')
const stdin = []
require('readline').createInterface({ input }).on('line', (line) => stdin.push(line)).on('close', () => main(stdin, process.stdout))
// 以下 main 内に処理を追加
function main(si, so) {
	let num = Number(si[0])
	let ans = new Array()
	ans[0] = [""]
	for (let i = 0; i < num; i++) {
		let length = ans.length
		for (let j = 0; j < length; j++) {
			if (j == 0) {
				ans.push([i])
			} else {
				let tmp = ans[j].slice()
				tmp.push(i)
				ans.push(tmp)
			}
		}
	}
	
	// 部分集合T
	let setLine = si[1].split(" ")
	let setNum = setLine[0]
	let setElem = setLine.slice(1)
	
	for (let i = 0; i < ans.length; i++) {
		let flag = true
		for (let j = 0; j < setNum; j++) {
			// 部分集合Tが含まれているか調べる
			if (!ans[i].includes(Number(setElem[j]))) {
				flag = false
				break;
			}
		}
		if (flag) {
			if (i == 0) {
				so.write("0:\n")
			} else {
				so.write(i + ": " + ans[i].join(" ") + "\n")
			}
		}
	}
}

