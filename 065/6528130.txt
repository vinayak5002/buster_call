'''
動的計画法で求める
数列において、前の項の結果からその項の値を求める規則のことを漸化式(ぜんかしき)という
漸化式を利用して組み合わせの集合を作る
'''

import copy

n = int(input())

A = list(map(int, input().split()))

q = int(input())
# 集合
ans = set()

# 最終的にansはAのいくつかの要素を足すとできる数全てが含まれる
# リストを使うと、最後のm in ansの探索時間がO(len(ans))になってしまうので集合を使う

# リストAの要素を一つずつ取り出す
for a in A:
    
    # 集合の要素を一つずつ取り出して、リストAの要素と加算し、結果を集合に追加
    #for文の中で要素が追加されるので、混乱を防ぐためにディープコピーする
    # 漸化式を利用して組み合わせの集合を作る（動的計画法）
    for element in copy.deepcopy(ans):
        
        ans.add(element+a)
    
    ans.add(a)

for m in map(int, input().split()):
    if m in ans:
        print('yes')
    else:
        print('no')
        
