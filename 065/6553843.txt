// https://qiita.com/DaikiSuyama/items/9dba963ba74396b9b7fd
// https://luling.hatenablog.com/entry/2018/12/01/212805
// https://zenn.dev/antyuntyun/articles/atcoder-cpp-template
//
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

// rep macro
#define reps(i, a, n) for (ll i = (a); i < (ll)(n); ++i)
#define rep(i, n) reps(i, 0, n)
#define rrep(i, n) reps(i, 1, n + 1)
#define repd(i,n) for(ll i=n-1;i>=0;i--)
#define rrepd(i,n) for(ll i=n;i>=1;i--)

#define optimize_cin() cin.tie(0); ios::sync_with_stdio(false)

#define pb push_back
#define mp make_pair
#define all(obj) (obj).begin(), (obj).end()
#define YESNO(bool) if(bool){cout<<"YES"<<endl;}else{cout<<"NO"<<endl;}
#define yesno(bool) if(bool){cout<<"yes"<<endl;}else{cout<<"no"<<endl;}
#define YesNo(bool) if(bool){cout<<"Yes"<<endl;}else{cout<<"No"<<endl;}

//定数
#define INF32 2147483647           // 2.147483647 x 10^{9}:32bit整数のinf
#define INF64 9223372036854775807  // 9.22337203685477580 x 10^{18}:64bit整数のinf
#define MOD 1000000007             //問題による

//略記
#define F first
#define S second

//出力(空白区切りで昇順に)
#define dump(x)                                                 \
  for (auto i = x.begin(); i != --x.end(); i++) cout << *i << " "; \
  cout << *--x.end() << endl;
#define echo(x) cout << (x) << endl;

// aをbで割る時の繰上げ,繰り下げ
ll _ceil(ll a, ll b) { return (a + (b - 1)) / b; }
ll _floor(ll a, ll b) { return a / b; }

// 大きい方、小さい方を残す
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

template <typename T>
bool binarySearch(vector<T> &ws, T key, int k) {
  bool isOK = false;
  stack<int> st(deque<int>(all(ws)));
  int sum = 0;
  int tracks = 1;
  while (!st.empty()) {
    int value = st.top();
    if ((sum + value) <= key) {
      sum += value;
    } else {
      tracks++;
      sum = value;
    }
    st.pop();
  }
  if (tracks <= k) {
    isOK = true;
  }
  return isOK;
}

signed main() {
  // Read Parameters
  int n, k;
  cin >> n; cin >> k;
  vector<int> ws(n);
  rep(i, n) cin >> ws[i];
  // Solve
  int lower = *max_element(all(ws)), upper = -1;
  rep(i, n) {
    int sum = 0;
    rep(j, i+1) sum += ws[j];
    int remain = 0;
    reps(j, i+1, n) remain += ws[j];
    if (remain < sum * (k - 1)) {
      upper = sum;
    } else if (sum >= lower) {
      lower = sum;
    }
  }
  if (upper == -1) {
    upper = lower;
  }
  //cout << lower << " " << upper << endl;
  int left = lower, right = upper;
  int answer = 0;
  reverse(all(ws));
  while (right - left > 1) {
    int mid = left + (right - left) / 2;
    bool isOK = binarySearch(ws, mid, k);
    //cout << left << " " << mid << " " << right << " " << (isOK ? "OK" : "NG") <<  endl;
    if (!isOK) left = mid;
    else right = mid;
  }
  //cout << left << " " << right << endl;
  echo(binarySearch(ws, left, k) ? left : right);
}

