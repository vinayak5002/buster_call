import sys
from operator import itemgetter

def main(ioi):
    rxs = lambda: map(int, ioi.readline().split())
    N, Q = rxs()
    As = [*rxs()]
    Xs = [*enumerate(rxs())]
    Xs.sort(key=itemgetter(1))
    Ys = [(0, 0)]*Q
    Zs = [0]*Q
    lft_over = 0

    #import ipdb; ipdb.set_trace()
    for lft in range(N):
        i, x = Xs[0]
        acc, rht = Ys[i]
        acc -= lft_over
        while rht < N and acc + As[rht] <= x:
            acc += As[rht]
            rht += 1
        acc += lft_over
        Zs[i] += rht - lft
        Ys[i] = acc, rht

        for i, x in Xs[1:]:
            acc_tmp, rht_tmp = Ys[i]
            if acc_tmp < acc:
                acc, rht = acc_tmp, rht_tmp
            acc -= lft_over
            while rht < N and acc + As[rht] <= x:
                acc += As[rht]
                rht += 1
            acc += lft_over
            Zs[i] += rht - lft
            Ys[i] = acc, rht

        lft_over += As[lft]

    return "\n".join([str(z) for z in Zs])

print(main(sys.stdin))

# import io
# print(main(io.StringIO("""6 5
# 1 2 3 4 5 6
# 6 9 12 21 15
# """)))

