def arraydist(X): #となりあった家の間の距離を長い順に記録する配列を返す
    a=[]
    for i in range(len(X)-1):
        a.insert(len(a),X[i+1]-X[i]) #家の間の距離の距離を記録、家の数がnの場合その間はn-1箇所になることに注意
    a.sort()
    a.reverse() #大きい順に並べかえる
    return(a)

def arraysum(X): #配列の要素の合計を返す
    sum=0
    for i in range(len(X)):
        sum=sum+X[i]
    return(sum)

def solve(N,K,X): #必要な電線の長さの総計の最小値を返す
    if K>=len(X): #発電機の数が家の数と同じ、あるいはそれ以上の場合
        y=[0] #電線の総計の最小値は０
    else: #発電機の数が家の数よりも少ない場合
        y=arraydist(X) #となりあった家の間の距離を長い順に記録する配列
        for i in range(K-1): #(発電機の個数-1)箇所だけ長い方から電線を節約する
            y.pop(0)
           
    return(arraysum(y)) #配列yに残った要素の合計が必要な電線の長さの総計の最小値となる

T=int(input())
for i in range(T):
    N,K=map(int,input().strip().split( ))
    X=list(map(int,input().strip().split( )))
    print(solve(N,K,X))
