#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=1167167167167167167;
const int INF=2100000000;
const ll mod=998244353;
#define rep(i,a) for (int i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}

void solve(){
	int N;
	cin>>N;
	string T="v^><";
	vector<int> X(N),Y(N),D(N);
	rep(i,N){
		cin>>X[i]>>Y[i];
		char c;
		cin>>c; 
		rep(k,4) if(c==T[k]) D[i]=k;
	}
	vector<vector<int>> base(N,vector<int>(4,-1));
	vector<int> order(N);rep(i,N) order[i]=i;
	sort(all(order),[&](int l,int r){
		if(X[l]==X[r]) return Y[l]<Y[r];
		return X[l]<X[r];
	});
	rep(i,N-1){
		if(X[order[i]]==X[order[i+1]]){
			base[order[i]][0]=order[i+1];
			base[order[i+1]][1]=order[i];
		}
	}
	sort(all(order),[&](int l,int r){
		if(Y[l]==Y[r]) return X[l]<X[r];
		return Y[l]<Y[r];
	});
	rep(i,N-1){
		if(Y[order[i]]==Y[order[i+1]]){
			base[order[i]][2]=order[i+1];
			base[order[i+1]][3]=order[i];
		}
	}
	vector<int> use(N);
	auto p=base;
	auto f=[&](auto self,int ind,int dir)->int{
		if(use[ind]==0){
			use[ind]=1;
			return ind;
		}
		if(p[ind][dir]==-1) return -1;
		return p[ind][dir]=self(self,p[ind][dir],dir);
	};
	int ans=0;
	rep(i,N){
		use[i]=1;
		int ind=i;
		int tmp=0;
		while(ind!=-1){
			ind=f(f,ind,D[ind]);
			tmp++;
		}
		chmax(ans,tmp);
		//cout<<tmp<<"\n";
		p=base;
		rep(k,N) use[k]=0;
	}
	cout<<ans<<"\n";
}

