#include<iostream>
#include<queue>
using namespace std;

const int maxn = 110;
static const int INFTY = (1 << 21);

int n, u, k, v;
int M[maxn][maxn];
int d[maxn];
queue<int> q;

void bfs(int s)
{
    q.push(s);
    for(int i = 1;i <= n;i++){
        d[i] = INFTY;
    }
    d[1] = 0;
    int u;
    while(! q.empty()){
        u = q.front();q.pop();
        for(int v = 1;v <= n;v++){
            if(M[u][v] == 0) continue;
            if(d[v] != INFTY) continue;
            d[v] = d[u] + 1;
            q.push(v);
        }
    }
    for(int i = 1;i <= n;i++){
        cout << i << " " << ((d[i] == INFTY) ? (-1) : d[i] ) << endl; 
    }
}

int main()
{
    cin >> n;
    for(int i = 1;i <= n;i++){
        for(int j = 1;j <= n;j++){
            M[i][j] = 0;
        }
    }
    for(int i = 1;i <= n;i++){
        cin >> u >> k;
        for(int i = 1;i <= k;i++){
            cin >> v;
            M[u][v] = 1;
        }
    }
    d[1] = 0;
    bfs(1);
}
