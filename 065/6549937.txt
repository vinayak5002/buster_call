#include <bits/stdc++.h>
using namespace std;

using P=pair<long,int>;

int nv,ne,r;
vector<P> g[100005];
long dis[100005];
long INF=1L<<60;

int main() {
    cin>>nv>>ne>>r;
    int s,t,d;
    for(int i=0;i<ne;i++){
        cin>>s>>t>>d;
        g[s].emplace_back(d,t);
    }
    priority_queue<P> pq;
    fill(dis,dis+sizeof(dis)/sizeof(*dis),INF);
    pq.emplace(0,r);
    while(!pq.empty()){
        P p=pq.top(); pq.pop();
        long l=p.first;
        int v=p.second;
        if(l>=dis[v])continue;
        dis[v]=l;
        if(v==r)dis[v]==0;
        for(P e:g[v]){
            int c=e.first,u=e.second;
            pq.emplace(dis[v]+c,u);
        }
    }
    for(int i=0;i<nv;i++){
        if(dis[i]==INF)cout<<"INF"<<endl;
        else cout<<dis[i]<<endl;
    }
}
