class Dice: #サイコロのクラス
    
    #サイコロの面の初期位置
    def __init__(self, d0, d1, d2, d3, d4, d5):
        self.dice = [d0, d1, d2, d3, d4, d5]
        #d0=face, d1=under, d2=right, d3=left, d4=up, d5=uup
        
    #サイコロの面の状態の更新
    def ch_state(self, s):
        self.dice_b = [x for x in self.dice]
        
        if s == "N":
            self.dice[0] = self.dice_b[1]
            self.dice[4] = self.dice_b[0]
            self.dice[1] = self.dice_b[5]
            self.dice[5] = self.dice_b[4]
        elif s == "S":
            self.dice[0] = self.dice_b[4]
            self.dice[4] = self.dice_b[5]
            self.dice[1] = self.dice_b[0]
            self.dice[5] = self.dice_b[1]
        elif s == "E":
            self.dice[0] = self.dice_b[3]
            self.dice[2] = self.dice_b[0]
            self.dice[3] = self.dice_b[5]
            self.dice[5] = self.dice_b[2]
        elif s == "W":
            self.dice[0] = self.dice_b[2]
            self.dice[2] = self.dice_b[5]
            self.dice[3] = self.dice_b[0]
            self.dice[5] = self.dice_b[3]
        
    def r_judge(self, l):
        s_d = "NWNWNW"
        s_d2 = "NWWWW"
        for direc in list(s_d):
            self.ch_state(direc)
#            print(1, self.dice)
            if self.dice[0] == l[0]:
                for direc in list(s_d2):
                    self.ch_state(direc)
#                    print(0, self.dice)
                    if self.dice[0] == l[1]:
                        break
                break
        return self.dice[2]

d = [int(x) for x in input().split()] #入力の取得

dc = Dice(d[0], d[1], d[2], d[3], d[4], d[5]) #イニシャライズ

"""
for direc in list(input()): #操作の入力
    dc.ch_state(direc)

print(dc.dice[0])
"""

"""
for i in range(int(input())):
    print(dc.r_judge([int(x) for x in input().split()]))
"""

d2 = [int(x) for x in input().split()]
dc2 = Dice(d2[0], d2[1], d2[2], d2[3], d2[4], d2[5])

r = dc.r_judge([dc2.dice[0], dc2.dice[1]])
if r == dc2.dice[2]:
    print("Yes")
else:
    print("No")
