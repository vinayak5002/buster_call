#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (n); i++)
#define all(v) (v).begin(), (v).end()
#define pb push_back

struct Edge {
	int to;
	int w;
	Edge (int to, int w) : to(to), w(w) {}
};

const int INF = 1001001001;

using Graph = vector<vector<Edge>>;

int main(){
	int v, e;
	cin >> v >> e;
	Graph G(v);
	map<pair<int, int>, int> mp,mq;
	rep (i,e) {
		int s, t, d;
		cin >> s >> t >> d;
		G[s].pb(Edge(t,d));
		mp[{s,t}] = 1;
		mq[{s,t}] = d;
	}
	vector<int> a(v);
	rep (i,v) a[i] = i;
	int ans = INF;
	do {
		int cnt = 0;
		bool b = true;
		rep (i,v-1) {
			if (mp[{a[i],a[i+1]}]==1) {
				cnt += mq[{a[i],a[i+1]}];
			} else {
				b = false;
				break;
			}
		}
		if (mp[{a[v-1],a[0]}]==1) cnt += mq[{a[v-1],a[0]}];
		else b = false;
		if (b) ans = min(ans, cnt);
	} while (next_permutation(all(a)));
	if (ans == INF) cout << -1 << endl;
	else cout << ans << endl;
	return 0;
}
