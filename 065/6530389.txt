import java.util.Scanner;
public class LaneApplication{

    public static void main(String args[]){
        int[] car = new int[10001];
        Scanner sc = new Scanner(System.in);
        int i,N,M,val,L = 0,num = 0,res;
        int min;


        N = sc.nextInt();
        Lane[] queue = new Lane[N];
        for(i = 0; i < N; i++){
            queue[i] = new Lane();
        }
        
        M = sc.nextInt();
        for(i = 0; i < M; i++){
            val = sc.nextInt();
            switch(val){
                case 0:
                    L = sc.nextInt()-1;
                    car[num]= queue[L].Dequeue();
                    num++;
                break;
                case 1:

                    min = 100000;
                    for(int j = 0; j < N; j++){
                        if(min > queue[j].size){
                            min = queue[j].size;
                            L = j;
                        }
                    }
                    queue[L].Enqueue(sc.nextInt());
                break;
            }
        }
        for(i = 0; i < num; i++){
            System.out.println(car[i]);
        }
    }
}

public class Lane {
    int head;
    int tail;
    int[] Q = new int[10000];
    int size;

    public void Enqueue(int num){
        if(size > 10000) System.out.println("Queue is Overflow!");
        Q[tail] = num;
        tail++;
        size = tail - head;
    }
    
    public int Dequeue(){
        int res;
        res = Q[head];
        Q[head] = 0;
        head++;
        size = tail - head;
        return res;
    }


}

