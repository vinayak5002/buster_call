#include <iostream>
#include <string>
#include <cassert>
#include <algorithm>
#include <set>
// list->set

void insert(std::string str, std::set<std::string> &dictionary)
{
    dictionary.insert(str);
}

bool find(std::string str, std::set<std::string> &dictionary)
{
    return dictionary.find(str) != dictionary.end();
}

int main()
{
    std::set<std::string> test = {"AAA", "CCC"};
    assert(find("AAA", test) == true);
    test = {"CCC", "AAA"};
    assert(find("AAA", test) == true);
    test = {"AAA", "AAC", "AGA", "AGG", "TTT"};
    assert(find("AAA", test) == true);
    test = {"CCC"};
    assert(find("AAA", test) == false);

    //「insert str」辞書に追加
    //「find str」あったらyes、なかったらno

    int n; //命令の数n個
    std::cin >> n;
    std::set<std::string> dictionary;
    for (int i = 0; i < n; i++)
    {
        std::string order;
        std::string str;
        std::cin >> order >> str;

        if (order == "insert")
        {
            insert(str, dictionary);
        }
        else
        {
            if (find(str, dictionary))
            {
                std::cout << "yes" << std::endl;
            }
            else
            {
                std::cout << "no" << std::endl;
            }
        }
    }

    return 0;
}
