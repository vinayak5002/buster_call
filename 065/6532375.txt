#include<stdio.h>
#include<iostream>
#include<string.h>
using namespace std;
const int MAX_Length_T = 1000;
const int MAX_Length_P = 1000;
bool shift_valid[MAX_Length_T];
char T[MAX_Length_T + 1], P[MAX_Length_P + 1];

bool IsValidShift(char P[], char T[], int s) {
	int length_P = strlen(P);
	for (int i = 0; i < length_P; i++) {
		if (P[i] != T[s + i])
			return false;
	}
	return true;
}
void Solution(char P[], char T[]) {
	int length_P = strlen(P);
	int length_T = strlen(T);
	for (int s = 0; s + length_P <= length_T; s++) {
		if (IsValidShift(P, T, s))
			shift_valid[s] = true;
	}
}
int main() {
	cin >> T >> P;
	Solution(P, T);
	int length = strlen(T);
	for (int i = 0; i < length; i++) {
		if (shift_valid[i] == true)
			cout << i << endl;
	}
	return 0;
}
