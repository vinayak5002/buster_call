import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.security.KeyStore.LoadStoreParameter;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;

class Main{
     public static void main(String[] args){
         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
         String[] read_order = new String[2];
         int count = 0,averagetruckweight = 0;
         List<Integer> loadweight = new ArrayList<Integer>();
         List<Integer> truck = new ArrayList<Integer>();
         int nowsum = 0,maxweight = 0;
         try{
         read_order = br.readLine().split("\\s+");
         int n = Integer.parseInt(read_order[0]);
         for(int i=0;i<n;i++){
             loadweight.add(Integer.parseInt(br.readLine()));
             count += loadweight.get(i);
         }
         }catch (Exception e){
            e.printStackTrace();
        }
         int k = Integer.parseInt(read_order[1]);
         averagetruckweight = count / k;
            for(int j=0;j<loadweight.size();j++){
                int size = truck.size();
            if(truck.size() == 0){
                truck.add(loadweight.get(j));
                continue;
            }else if(truck.get(size-1) < averagetruckweight){
                nowsum = truck.get(size - 1);
                truck.set(size - 1,nowsum + loadweight.get(j));
            }else {
                truck.add(loadweight.get(j));
            }
         }
         for(int i=0;i<truck.size();i++){
             if(maxweight < truck.get(i)){
                 maxweight = truck.get(i);
             }
         }
         System.out.println(maxweight);
     }

}
