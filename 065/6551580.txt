//#define _GLIBCXX_DEBUG
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <tuple>
#include <utility>
#include <vector>

using namespace std;

// https://onlinejudge.u-aizu.ac.jp/problems/GRL_1_C

int main() {
  int v, e;
  cin >> v >> e;
  const int inf = 2e9;
  vector<vector<long long>> dp(v, vector<long long>(v, inf));
  for (int i = 0; i < v; ++i) dp[i][i] = 0;
  for (int i = 0; i < e; ++i) {
    int s, t, d;
    cin >> s >> t >> d;
    dp[s][t] = d;
  }
  for (int k = 0; k < v; ++k) {
    for (int i = 0; i < v; ++i) {
      for (int j = 0; j < v; ++j) {
        //if (dp[i][k] == inf || dp[k][j] == inf) continue;
        dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j]);
      }
    }
  }
  for (int i = 0; i < v; ++i) {
    if (dp[i][i] < 0) {
      cout << "NEGATIVE CYCLE" << '\n';
      return 0;
    }
  }
  for (int i = 0; i < v; ++i) {
    for (int j = 0; j < v; ++j) {
      if (j) cout << ' ';
      if (dp[i][j] == inf) {
        cout << "INF";
      } else {
        cout << dp[i][j];
      }
    }
    cout << '\n';
  }
  return 0;
}
