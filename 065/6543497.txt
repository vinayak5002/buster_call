//何してたん
#include <iostream>
#include <list>

void Insert(std::list<int> &v, int x);
void Delete(std::list<int> &v, int x);
void DeleteFirst(std::list<int> &v);
void DeleteLast(std::list<int> &v);

void CommandExecution(std::list<int> &v, std::string command, int x)
{
    if (command == "insert")
    {
        Insert(v, x);
    }
    else if (command == "delete")
    {
        Delete(v, x);
    }
    else if (command == "deleteFirst")
    {
        DeleteFirst(v);
    }
    else
    {
        DeleteLast(v);
    }
}

void Insert(std::list<int> &v, int x)
{
    v.insert(v.begin(), x);
}

void Delete(std::list<int> &v, int x)
{
    std::list<int>::iterator itr;
    for (itr = v.begin(); itr != v.end(); itr++)
    {
        if (*itr == x)
        {
            v.erase(itr);
            break;
        }
    }
}

void DeleteFirst(std::list<int> &v)
{
    v.erase(v.begin());
}

void DeleteLast(std::list<int> &v)
{
    v.erase(--v.end());
    // v.erase(v.end());
}

void ShowVector(std::list<int> v)
{
    std::list<int>::iterator itr;
    for (itr = v.begin(); itr != v.end(); itr++)
    {
        std::cout << *itr;
        if (itr != --v.end())
        {
            std::cout << ' ';
        }
    }
    std::cout << std::endl;
}

int main(void)
{
    int command_number_n;
    std::cin >> command_number_n;
    std::list<int> linked_list;
    for (int i = 0; i < command_number_n; i++)
    {
        std::string command;
        std::cin >> command;
        int x = -1;
        if (command == "insert" || command == "delete")
        {
            std::cin >> x;
        }
        CommandExecution(linked_list, command, x);
        // ShowVector(linked_list); //
        // std::cout << std::endl;  //
    }
    ShowVector(linked_list);

    return 0;
}
