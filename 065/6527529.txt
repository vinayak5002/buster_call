inf = 10**18
import sys
sys.setrecursionlimit(10**6)

def detect(G, N, M):
    pre = [-1]*N
    low = [inf]*N
    #if the root is an articulaiton point or not 
    ret = [0] if M==N-1 and len(G[0])>1 else []
    def dfs(x, par=-1, cnt=0):
        pre[x] = low[x] = cnt
        is_articulation = False
        for nx in G[x]:
            if nx==par: continue
            if pre[nx]==-1:
                dfs(nx, x, cnt+1)
                low[x] = min(low[x], low[nx])
                if pre[x]<=low[nx]: is_articulation=True
            else:
                low[x] = min(low[x], pre[nx])
        if is_articulation and x!=0: ret.append(x)
    dfs(0)
    return ret

def main():
    V, E = map(int, input().split())
    G = [[] for _ in range(V)]
    for _ in range(E):
        s, t= map(int, input().split())
        G[s].append(t)
        G[t].append(s)
    s = sorted(detect(G, V, E))
    for i in s: print(i)
main()
