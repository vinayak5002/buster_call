#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
using namespace std;

const int N = 1e6 + 10;
int n, m;
char s[N];
int sa[N], x[N], y[N], c[N], rk[N], height[N];
char t[N];
int lent;

void get_sa()
{
    for (int i = 1; i <= n; ++i)
        c[x[i] = s[i]]++;
    for (int i = 1; i < m; ++i)
        c[i] += c[i - 1];
    for (int i = n; i >= 1; --i)
        sa[c[s[i]]--] = i;
    for (int k = 1; k <= n; k <<= 1)
    {
        int p = 0;
        for (int i = n - k + 1; i <= n; ++i)
            y[++p] = i;
        for (int i = 1; i <= n; ++i)
            if (sa[i] > k)
                y[++p] = sa[i] - k;
        for (int i = 1; i <= m; ++i)
            c[i] = 0;
        for (int i = 1; i <= n; ++i)
            ++c[x[y[i]]];
        for (int i = 1; i < m; ++i)
            c[i] += c[i - 1];
        for (int i = n; i >= 1; --i)
            sa[c[x[i]]--] = y[i];
        swap(x, y);
        x[sa[1]] = 1;
        for (int i = 2; i <= n; ++i)
            x[sa[i]] = (y[sa[i]] == y[sa[i - 1]] && y[sa[i] + k] == y[sa[i - 1] + k]) ? p : p + 1;
        if (x[sa[n]] == n)
            break;
        m = p + 1;
    }
}

void get_height()
{
    for (int i = 1; i <= n; ++i)
        rk[sa[i]] = i;
    for (int i = 1, k = 0; i <= n; ++i)
    {
        if (rk[i] == 1)
            continue;
        if (k)
            --k;
        int j = sa[rk[i] - 1];
        while (i + k <= n && j + k <= n && s[i + k] == s[j + k])
            ++k;
        height[rk[i]] = k;
    }
}

bool judge()
{
    int l = 1;
    int r = n + 2;
    int mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        if (strncmp(s + 1 + sa[mid], t + 1, lent) <= 0)
            l = mid;
        else
            r = mid;
    }
    return strncmp(s + 1 + sa[l + 1], t + 1, lent) == 0;
}

int main()
{
    scanf("%s", s + 1);
    n = strlen(s + 1);
    m = 'z' + 1;

    get_sa();
    get_height();

    int q;
    scanf("%d", &q);
    while (q--)
    {
        scanf("%s", t + 1);
        lent = strlen(t + 1);
        if (judge())
            puts("1");
        else
            puts("0");
    }

    return 0;
}
