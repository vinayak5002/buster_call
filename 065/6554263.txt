#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define all(x) (x).begin(), (x).end()
typedef long long ll;
using namespace std;

int ans;

/**
 * @brief マージソート(安定なソート, O(nlogn))
 * 
 * @param A ソートする配列
 * @param left 0
 * @param right Aの要素数
 */
void merge(int A[], int left, int mid, int right)
{
    int n1 = mid - left;
    int n2 = right - mid;
    int L[n1], R[n2];
    for (int i = 0; i < n1; i++)
    {
        L[i] = A[left + i];
    }
    for (int i = 0; i < n2; i++)
    {
        R[i] = A[mid + i];        
    }
    L[n1] = INT_MAX;
    R[n2] = INT_MAX;
    int i = 0;
    int j = 0;
    for (int k = left; k < right; k++)
    {
        if (L[i] <= R[j])
        {
            A[k] = L[i];
            i++;
        }
        else
        {
            A[k] = R[j];
            j++;
        }
        ans++;
    }
}
void mergeSort(int A[], int left, int right)
{
    if (left+1 < right)
    {
        int mid = (left + right)/2;
        mergeSort(A, left, mid);
        mergeSort(A, mid, right);
        merge(A, left, mid, right);
    }
}

int main(void)
{
    ans = 0;
    int n; cin >> n;
    int s[n];
    rep(i, n)
    {
        cin >> s[i];
    }
    mergeSort(s, 0, n);
    rep(i, n)
    {
        cout << s[i];
        if (i != n - 1) cout << " ";
    }
    cout << endl;
    cout << ans << endl;
    return 0;
}

