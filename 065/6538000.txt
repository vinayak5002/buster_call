#include <stdio.h>
#include <string.h>

/*
int head,tail,MAX,q[100000];

void initialize(){
    head=tail=0;
}

int isEmpty(){
    return head==tail;
}

int isFull(){
    return head==(tail+1)%MAX;
}

int enqueue(int x){
    if(isFull) return -1;

    q[tail]=x;

    if(tail+1==MAX) tail=0;
    else tail++;

}

int dequeue(){
    int x;

    if(isEmpty) return -1;
    
    x=q[head];
    
    if(head+1==MAX) head=0;
    else head++;

    return x;

}

int main(){
    int i,n,q,p[100000],time,total=0,sum=0;
    char name[100000][100];

    initialize();

    scanf("%d %d",&n,&q);
    MAX=n+1;

    for(i=1;i<=n;i++){
        
        scanf("%s %d",name[i],&p[i]);
        sum+=p[i];
        enqueue(p[i]);

    }

    while(total<sum){
        
        dequeue(p[i]);
        time=p[i]-q;

        if(time<=0) {
            total+=p[i];
            printf("%s %d\n",name[i],total);

        }
        else{
            total+=q;
            enqueue(time);
        }
    }
    
    return 0;
}*/

#define LEN 100005

typedef struct pp{
    char name[100];
    int t;
}P;

P Q[LEN+1];
int head,tail,n;

void enqueue(P x){
    Q[tail]=x;
    tail=(tail+1)%LEN;
}

P dequeue(){
    P res = Q[head];
    head = (head+1)%LEN;
    return res; 
}

int empty(){
    return head==tail;
}

int main(){
    int elaps=0,c;
    int i,q;
    P u;
    scanf("%d %d",&n,&q);
    head=1;
    tail=n+1;

    for(i=1; i<=n;i++){
        scanf("%s",Q[i].name);
        scanf("%d",&Q[i].t);
    }

    while(empty==0){
        u=dequeue();
        if(u.t>q){
            u.t-=q;
            enqueue(u);
            elaps+=q;
        }else{
            elaps+=u.t;
            printf("%s %d\n",u.name,elaps);
        }
    }
    return 0;
}
