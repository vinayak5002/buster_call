#pragma GCC optimize("O3,unroll-loops")
#include <algorithm>
#include <cstdio>
int n, lim, a[21];
bool Dfs(int x, int d) {
  if (d == lim) return x == n;
  a[d] = x;
  int max = *std::max_element(a, a + d + 1);
  if ((max << (lim - d)) < n) return false;
  for (int i = 0; i <= d; i++) {
    if (Dfs(x + a[i], d + 1)) return true;
    if (x > a[i] && Dfs(x - a[i], d + 1)) return true;
  }
  return false;
}
int main(int argc, char const *argv[]) {
  while (std::scanf("%d", &n) == 1) {
    if (n == 0) break;
    for (lim = 0;; lim++)
      if (Dfs(1, 0)) {
        std::printf("%d\n", lim);
        break;
      }
  }
  return 0;
}
