#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld ;
typedef pair<ll,ll> P ;
typedef tuple<ll,ll,ll> TP ;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define rep2(i, s, n) for (int i = (s); i < (int)(n); i++)
#define endl "\n"
#define chmin(a,b) a = min(a,b)
#define chmax(a,b) a = max(a,b)
#define bit_count(x) __builtin_popcountll(x)
#define gcd(a,b) __gcd(a,b)
#define lcm(a,b) a / gcd(a,b) * b

bool seen[51][51];
int m[51][51];

void dfs(int c_h, int c_w, int h, int w){
  seen[c_h][c_w] = true;

  // 左上
  if(c_w-1 > 0  && c_h-1 > 0 && !seen[c_h-1][c_w-1] && m[c_h-1][c_w-1] == 1){
    dfs(c_h-1, c_w-1, h, w);
  }

  // 上
  if(c_h-1 > 0 && !seen[c_h-1][c_w] && m[c_h-1][c_w] == 1){
    dfs(c_h-1, c_w, h, w);
  }

  // 右上
  if(c_w+1 < w && c_h-1 > 0 && !seen[c_h-1][c_w+1] && m[c_h-1][c_w+1] == 1){
    dfs(c_h-1, c_w+1, h, w);
  }

  // 左
  if(c_w-1 > 0 && !seen[c_h][c_w-1] && m[c_h][c_w-1] == 1){
    dfs(c_h, c_w-1, h, w);
  }

  // 右
  if(c_w+1 < w && !seen[c_h][c_w+1] && m[c_h][c_w+1] == 1){
    dfs(c_h, c_w+1, h, w);
  }

  // 左下
  if(c_h+1 < h && c_w-1 > 0 && !seen[c_h+1][c_w-1] && m[c_h+1][c_w-1] == 1){
    dfs(c_h, c_w+1, h, w);
  }

  // 下
  if(c_h+1 < h && !seen[c_h+1][c_w] && m[c_h+1][c_w] == 1){
    dfs(c_h+1, c_w, h, w);
  }

  // 右下
  if(c_h+1 < h && c_w+1 < w && !seen[c_h+1][c_w+1] && m[c_h+1][c_w+1] == 1){
    dfs(c_h+1, c_w+1, h, w);
  }
}

int main(){
  while(true){
    int w,h;
    cin >> w >> h;
    if(w == 0 && h == 0) return 0;

    rep(i, 51) rep(j, 51){
      seen[i][j] = false;
      m[i][j] = 0;
    }
    ll ans = 0;

    rep(i, h) rep(j, w){
      cin >> m[i][j];
    }

    rep(i, h) rep(j, w){
      if(m[i][j] == 0) continue;
      if(seen[i][j]) continue;
      dfs(i, j, h, w);
      ans++;
    }

    cout << ans << endl;
  }
}

